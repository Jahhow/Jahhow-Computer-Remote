androidx.drawerlayout.R$attr
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl
    void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean hasWindowFeature(int)
    public void setHandleNativeActionModesEnabled(boolean)
    android.view.ViewGroup getSubDecor()
    public void setLocalNightMode(int)
    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    private static final boolean DEBUG
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
androidx.recyclerview.widget.ThreadUtil
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate
    public void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.activity.R$attr
com.android.billingclient.api.BillingClient
    public abstract com.android.billingclient.api.BillingResult isFeatureSupported(java.lang.String)
    public abstract void endConnection()
    public abstract void launchPriceChangeConfirmationFlow(android.app.Activity,com.android.billingclient.api.PriceChangeFlowParams,com.android.billingclient.api.PriceChangeConfirmationListener)
    public abstract void consumeAsync(com.android.billingclient.api.ConsumeParams,com.android.billingclient.api.ConsumeResponseListener)
    public abstract void queryPurchaseHistoryAsync(java.lang.String,com.android.billingclient.api.PurchaseHistoryResponseListener)
    public abstract void loadRewardedSku(com.android.billingclient.api.RewardLoadParams,com.android.billingclient.api.RewardResponseListener)
androidx.core.text.util.FindAddress
androidx.recyclerview.R$dimen
    private void <init>()
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23
com.google.android.material.circularreveal.CircularRevealRelativeLayout
androidx.recyclerview.R$string
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.media.MediaBrowserServiceCompat$ServiceHandler
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice
androidx.coordinatorlayout.R$string
androidx.legacy.coreui.R$layout
androidx.annotation.ContentView
com.google.android.material.snackbar.BaseTransientBottomBar
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
    public java.lang.String getHTMLElement()
androidx.core.provider.FontsContractCompat$4$2
androidx.transition.ViewUtils
    static void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private void <init>()
    private static final java.lang.String TAG
    private static final int VISIBILITY_MASK
androidx.fragment.R$styleable
    private void <init>()
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener
androidx.vectordrawable.animated.R$drawable
android.support.v4.media.session.MediaControllerCompatApi24
androidx.slidingpanelayout.R$style
com.google.android.material.chip.ChipDrawable
androidx.recyclerview.widget.MessageThreadUtil$1
androidx.collection.SimpleArrayMap
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
androidx.core.graphics.TypefaceCompat
    private void <init>()
androidx.media.R$drawable
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
androidx.annotation.StringDef
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2
androidx.core.graphics.TypefaceCompatUtil
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
androidx.transition.ChangeScroll
androidx.appcompat.app.ResourcesFlusher
    private void <init>()
    private static final java.lang.String TAG
android.support.v4.media.MediaDescriptionCompat
    public java.lang.String getMediaId()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public java.lang.CharSequence getDescription()
    public android.graphics.Bitmap getIconBitmap()
    public android.net.Uri getIconUri()
    public android.os.Bundle getExtras()
    public android.net.Uri getMediaUri()
    public static final java.lang.String EXTRA_BT_FOLDER_TYPE
    public static final long BT_FOLDER_TYPE_MIXED
    public static final long BT_FOLDER_TYPE_TITLES
    public static final long BT_FOLDER_TYPE_ALBUMS
    public static final long BT_FOLDER_TYPE_ARTISTS
    public static final long BT_FOLDER_TYPE_GENRES
    public static final long BT_FOLDER_TYPE_PLAYLISTS
    public static final long BT_FOLDER_TYPE_YEARS
    public static final java.lang.String EXTRA_DOWNLOAD_STATUS
    public static final long STATUS_NOT_DOWNLOADED
    public static final long STATUS_DOWNLOADING
    public static final long STATUS_DOWNLOADED
    public static final java.lang.String DESCRIPTION_KEY_MEDIA_URI
    public static final java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
androidx.viewpager.R$integer
androidx.transition.ImageViewUtils
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.media.AudioAttributesImplBase
    void <init>(int,int,int,int)
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getRawLegacyStreamType()
    public android.os.Bundle toBundle()
androidx.versionedparcelable.ParcelUtils
androidx.appcompat.widget.ActionMenuView$LayoutParams
    void <init>(int,int,boolean)
androidx.appcompat.app.AlertController$ButtonHandler
    private static final int MSG_DISMISS_DIALOG
androidx.core.text.util.LinkifyCompat$LinkifyMask
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper
com.google.android.material.internal.ThemeEnforcement
    private void <init>()
    public static boolean isAppCompatTheme(android.content.Context)
    public static boolean isMaterialTheme(android.content.Context)
    private static final java.lang.String APPCOMPAT_THEME_NAME
    private static final java.lang.String MATERIAL_THEME_NAME
c.jahhow.remotecontroller.MyCardViewSetup
    void <init>()
com.google.android.material.internal.package-info
androidx.appcompat.widget.PopupMenu$OnDismissListener
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3
androidx.transition.ViewOverlayImpl
    public abstract void clear()
androidx.lifecycle.ViewModelProviders
androidx.vectordrawable.R$layout
com.android.billingclient.api.BillingResults
    private void <init>()
androidx.transition.ChangeImageTransform$3
androidx.core.view.accessibility.AccessibilityEventCompat
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int CONTENT_CHANGE_TYPE_PANE_TITLE
    public static final int CONTENT_CHANGE_TYPE_PANE_APPEARED
    public static final int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
    public static final int TYPES_ALL_MASK
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
com.android.billingclient.api.PriceChangeFlowParams$Builder
androidx.media.R$dimen
androidx.core.content.res.FontResourcesParserCompat
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
android.support.v4.media.session.PlaybackStateCompat$Builder
androidx.drawerlayout.R$string
androidx.appcompat.widget.DrawableUtils
    private void <init>()
    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
    public androidx.lifecycle.Lifecycle getLifecycle()
android.support.v4.media.MediaMetadataCompatApi21$Builder
androidx.fragment.app.FragmentActivity$HostCallbacks
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
androidx.core.view.ScrollingView
    public abstract int computeHorizontalScrollRange()
    public abstract int computeHorizontalScrollOffset()
    public abstract int computeHorizontalScrollExtent()
    public abstract int computeVerticalScrollRange()
    public abstract int computeVerticalScrollOffset()
    public abstract int computeVerticalScrollExtent()
androidx.constraintlayout.solver.Cache
androidx.recyclerview.widget.AdapterHelper
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeInserted(int,int)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.hardware.display.DisplayManagerCompat
androidx.media.MediaBrowserServiceCompat$2
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.legacy.coreui.R$drawable
androidx.appcompat.R$color
    private void <init>()
androidx.core.widget.TextViewCompat
    private void <init>()
    private static java.lang.reflect.Field retrieveField(java.lang.String)
    private static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMaxLines(android.widget.TextView)
    public static int getMinLines(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMaximumField
    private static boolean sMaximumFieldFetched
    private static java.lang.reflect.Field sMaxModeField
    private static boolean sMaxModeFieldFetched
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
androidx.lifecycle.MediatorLiveData$Source
android.support.v4.media.session.PlaybackStateCompat
    public static int toKeyCode(long)
    public int getState()
    public long getPosition()
    public long getLastPositionUpdateTime()
    public long getCurrentPosition(java.lang.Long)
    public long getBufferedPosition()
    public float getPlaybackSpeed()
    public long getActions()
    public java.util.List getCustomActions()
    public int getErrorCode()
    public java.lang.CharSequence getErrorMessage()
    public long getActiveQueueItemId()
    public android.os.Bundle getExtras()
    public java.lang.Object getPlaybackState()
    public static final long ACTION_STOP
    public static final long ACTION_PAUSE
    public static final long ACTION_PLAY
    public static final long ACTION_REWIND
    public static final long ACTION_SKIP_TO_PREVIOUS
    public static final long ACTION_SKIP_TO_NEXT
    public static final long ACTION_FAST_FORWARD
    public static final long ACTION_SET_RATING
    public static final long ACTION_SEEK_TO
    public static final long ACTION_PLAY_PAUSE
    public static final long ACTION_PLAY_FROM_MEDIA_ID
    public static final long ACTION_PLAY_FROM_SEARCH
    public static final long ACTION_SKIP_TO_QUEUE_ITEM
    public static final long ACTION_PLAY_FROM_URI
    public static final long ACTION_PREPARE
    public static final long ACTION_PREPARE_FROM_MEDIA_ID
    public static final long ACTION_PREPARE_FROM_SEARCH
    public static final long ACTION_PREPARE_FROM_URI
    public static final long ACTION_SET_REPEAT_MODE
    public static final long ACTION_SET_SHUFFLE_MODE_ENABLED
    public static final long ACTION_SET_CAPTIONING_ENABLED
    public static final long ACTION_SET_SHUFFLE_MODE
    public static final int STATE_NONE
    public static final int STATE_STOPPED
    public static final int STATE_PAUSED
    public static final int STATE_PLAYING
    public static final int STATE_FAST_FORWARDING
    public static final int STATE_REWINDING
    public static final int STATE_BUFFERING
    public static final int STATE_ERROR
    public static final int STATE_CONNECTING
    public static final int STATE_SKIPPING_TO_PREVIOUS
    public static final int STATE_SKIPPING_TO_NEXT
    public static final int STATE_SKIPPING_TO_QUEUE_ITEM
    public static final long PLAYBACK_POSITION_UNKNOWN
    public static final int REPEAT_MODE_INVALID
    public static final int REPEAT_MODE_NONE
    public static final int REPEAT_MODE_ONE
    public static final int REPEAT_MODE_ALL
    public static final int REPEAT_MODE_GROUP
    public static final int SHUFFLE_MODE_INVALID
    public static final int SHUFFLE_MODE_NONE
    public static final int SHUFFLE_MODE_ALL
    public static final int SHUFFLE_MODE_GROUP
    public static final int ERROR_CODE_UNKNOWN_ERROR
    public static final int ERROR_CODE_APP_ERROR
    public static final int ERROR_CODE_NOT_SUPPORTED
    public static final int ERROR_CODE_AUTHENTICATION_EXPIRED
    public static final int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
    public static final int ERROR_CODE_CONCURRENT_STREAM_LIMIT
    public static final int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
    public static final int ERROR_CODE_NOT_AVAILABLE_IN_REGION
    public static final int ERROR_CODE_CONTENT_ALREADY_PLAYING
    public static final int ERROR_CODE_SKIP_LIMIT_REACHED
    public static final int ERROR_CODE_ACTION_ABORTED
    public static final int ERROR_CODE_END_OF_QUEUE
    private static final int KEYCODE_MEDIA_PAUSE
    private static final int KEYCODE_MEDIA_PLAY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1
androidx.core.graphics.PathParser
    public static boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
    private void <init>()
    private static final java.lang.String LOGTAG
androidx.savedstate.Recreator
    static final java.lang.String CLASSES_KEY
    static final java.lang.String COMPONENT_KEY
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl
androidx.core.view.accessibility.AccessibilityManagerCompat
    public static boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
    public static boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
    public static java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
    public static java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
    public static boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
    private void <init>()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord
    void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
androidx.core.content.PermissionChecker
    private void <init>()
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
androidx.customview.R$color
androidx.legacy.coreui.R$color
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28
androidx.fragment.app.FragmentTabHost$TabInfo
androidx.core.view.NestedScrollingChild
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
androidx.core.view.DragStartHelper$OnDragStartListener
androidx.core.app.NotificationCompatSideChannelService
androidx.media.R$style
com.android.billingclient.api.BillingFlowParams$ProrationMode
androidx.transition.AutoTransition
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
    private void unregisterForLayoutCallback(android.view.View)
    void addAccessibilityPane(android.view.View)
    void removeAccessibilityPane(android.view.View)
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19
androidx.core.view.animation.PathInterpolatorCompat
androidx.loader.content.ModernAsyncTask$InternalHandler
com.android.billingclient.api.BillingBroadcastManager$BillingBroadcastReceiver
    public void unRegister(android.content.Context)
android.support.v4.media.RatingCompat$Style
com.android.billingclient.api.PurchaseHistoryResponseListener
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.transition.Transition$EpicenterCallback
    public abstract android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
    public int getX()
    public int getY()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
androidx.transition.TranslationAnimationCreator
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6
androidx.appcompat.view.ActionMode
    public boolean isUiFocusable()
androidx.versionedparcelable.VersionedParcelParcel
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.RecyclerView$OnFlingListener
    public void <init>()
androidx.recyclerview.widget.MessageThreadUtil$1$1
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
androidx.transition.GhostViewApi21
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
androidx.constraintlayout.solver.Pools$SimplePool
androidx.lifecycle.R
android.support.v4.media.session.MediaSessionCompat
    public void <init>(android.content.Context,java.lang.String)
    public void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
    public void <init>(android.content.Context,java.lang.String,android.os.Bundle)
    private void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)
    private void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    public static android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
    static android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
    public void setSessionActivity(android.app.PendingIntent)
    public void setMediaButtonReceiver(android.app.PendingIntent)
    public void setFlags(int)
    public void setPlaybackToLocal(int)
    public void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
    public void setActive(boolean)
    public boolean isActive()
    public void sendSessionEvent(java.lang.String,android.os.Bundle)
    public void release()
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    public android.support.v4.media.session.MediaControllerCompat getController()
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    public void setQueue(java.util.List)
    public void setQueueTitle(java.lang.CharSequence)
    public void setRatingType(int)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleMode(int)
    public void setExtras(android.os.Bundle)
    public java.lang.Object getMediaSession()
    public java.lang.Object getRemoteControlClient()
    public final androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
    public java.lang.String getCallingPackage()
    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl
    private final android.support.v4.media.session.MediaControllerCompat mController
    private final java.util.ArrayList mActiveListeners
    static final java.lang.String TAG
    public static final int FLAG_HANDLES_MEDIA_BUTTONS
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS
    public static final int FLAG_HANDLES_QUEUE_COMMANDS
    public static final java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
    public static final java.lang.String ACTION_SKIP_AD
    public static final java.lang.String ACTION_FOLLOW
    public static final java.lang.String ACTION_UNFOLLOW
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
    public static final int MEDIA_ATTRIBUTE_ARTIST
    public static final int MEDIA_ATTRIBUTE_ALBUM
    public static final int MEDIA_ATTRIBUTE_PLAYLIST
    public static final java.lang.String ACTION_PLAY_FROM_URI
    public static final java.lang.String ACTION_PREPARE
    public static final java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
    public static final java.lang.String ACTION_PREPARE_FROM_SEARCH
    public static final java.lang.String ACTION_PREPARE_FROM_URI
    public static final java.lang.String ACTION_SET_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_SET_REPEAT_MODE
    public static final java.lang.String ACTION_SET_SHUFFLE_MODE
    public static final java.lang.String ACTION_SET_RATING
    public static final java.lang.String ACTION_ARGUMENT_MEDIA_ID
    public static final java.lang.String ACTION_ARGUMENT_QUERY
    public static final java.lang.String ACTION_ARGUMENT_URI
    public static final java.lang.String ACTION_ARGUMENT_RATING
    public static final java.lang.String ACTION_ARGUMENT_EXTRAS
    public static final java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_ARGUMENT_REPEAT_MODE
    public static final java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
    public static final java.lang.String KEY_TOKEN
    public static final java.lang.String KEY_EXTRA_BINDER
    public static final java.lang.String KEY_SESSION_TOKEN2_BUNDLE
    private static final int MAX_BITMAP_SIZE_IN_DP
    private static final java.lang.String DATA_CALLING_PACKAGE
    private static final java.lang.String DATA_CALLING_PID
    private static final java.lang.String DATA_CALLING_UID
    private static final java.lang.String DATA_EXTRAS
    static int sMaxBitmapSize
androidx.core.app.RemoteInput$Builder
androidx.fragment.app.DialogFragment$1
androidx.media.VolumeProviderCompat$ControlType
com.google.android.material.shape.RoundedCornerTreatment
androidx.collection.ArrayMap
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
androidx.drawerlayout.R$styleable
androidx.asynclayoutinflater.R$color
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
com.android.billingclient.api.SkuDetails
    public java.lang.String getOriginalJson()
    public java.lang.String getPrice()
    public long getPriceAmountMicros()
    public java.lang.String getPriceCurrencyCode()
    public java.lang.String getOriginalPrice()
    public long getOriginalPriceAmountMicros()
    public java.lang.String getTitle()
    public java.lang.String getDescription()
    public java.lang.String getSubscriptionPeriod()
    public java.lang.String getFreeTrialPeriod()
    public java.lang.String getIntroductoryPrice()
    public long getIntroductoryPriceAmountMicros()
    public java.lang.String getIntroductoryPricePeriod()
    public java.lang.String getIntroductoryPriceCycles()
    public java.lang.String getIconUrl()
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper
    void setInternalImageTint(android.content.res.ColorStateList)
androidx.asynclayoutinflater.R$layout
com.google.android.material.transformation.TransformationChildCard
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.IMediaSession
    public abstract void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public abstract boolean sendMediaButton(android.view.KeyEvent)
    public abstract void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public abstract boolean isTransportControlEnabled()
    public abstract java.lang.String getPackageName()
    public abstract java.lang.String getTag()
    public abstract android.app.PendingIntent getLaunchPendingIntent()
    public abstract long getFlags()
    public abstract android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public abstract void adjustVolume(int,int,java.lang.String)
    public abstract void setVolumeTo(int,int,java.lang.String)
    public abstract android.support.v4.media.MediaMetadataCompat getMetadata()
    public abstract android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public abstract java.util.List getQueue()
    public abstract java.lang.CharSequence getQueueTitle()
    public abstract android.os.Bundle getExtras()
    public abstract int getRatingType()
    public abstract boolean isCaptioningEnabled()
    public abstract int getRepeatMode()
    public abstract boolean isShuffleModeEnabledRemoved()
    public abstract int getShuffleMode()
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public abstract void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void removeQueueItemAt(int)
    public abstract void prepare()
    public abstract void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void prepareFromSearch(java.lang.String,android.os.Bundle)
    public abstract void prepareFromUri(android.net.Uri,android.os.Bundle)
    public abstract void play()
    public abstract void playFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void playFromSearch(java.lang.String,android.os.Bundle)
    public abstract void playFromUri(android.net.Uri,android.os.Bundle)
    public abstract void skipToQueueItem(long)
    public abstract void pause()
    public abstract void stop()
    public abstract void next()
    public abstract void previous()
    public abstract void fastForward()
    public abstract void rewind()
    public abstract void seekTo(long)
    public abstract void rate(android.support.v4.media.RatingCompat)
    public abstract void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public abstract void setCaptioningEnabled(boolean)
    public abstract void setRepeatMode(int)
    public abstract void setShuffleModeEnabledRemoved(boolean)
    public abstract void setShuffleMode(int)
    public abstract void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.loader.app.LoaderManager$LoaderCallbacks
androidx.recyclerview.widget.DiffUtil$1
androidx.core.content.IntentCompat
androidx.annotation.InspectableProperty$EnumEntry
androidx.cardview.R$attr
    private void <init>()
androidx.fragment.app.FragmentController
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public java.util.List retainNonConfig()
    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.media.session.MediaSessionCompatApi21
com.google.android.material.internal.ParcelableSparseArray$1
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1
androidx.fragment.app.FragmentStatePagerAdapter
androidx.documentfile.provider.DocumentsContractApi19
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
com.google.android.material.snackbar.BaseTransientBottomBar$1
androidx.annotation.InspectableProperty$FlagEntry
androidx.media.session.MediaButtonReceiver
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor
com.google.android.material.bottomsheet.BottomSheetBehavior
    public static com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
    public boolean isFitToContents()
    public final int getPeekHeight()
    public boolean isHideable()
    public boolean getSkipCollapsed()
    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public final void setState(int)
    public final int getState()
    void startSettlingAnimation(android.view.View,int)
    int getPeekHeightMin()
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int STATE_EXPANDED
    public static final int STATE_COLLAPSED
    public static final int STATE_HIDDEN
    public static final int STATE_HALF_EXPANDED
    public static final int PEEK_HEIGHT_AUTO
    private static final float HIDE_THRESHOLD
    private static final float HIDE_FRICTION
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession
androidx.legacy.v4.R$color
androidx.media.AudioAttributesImpl
    public abstract java.lang.Object getAudioAttributes()
    public abstract int getVolumeControlStream()
    public abstract int getLegacyStreamType()
    public abstract int getRawLegacyStreamType()
    public abstract int getContentType()
    public abstract int getUsage()
    public abstract int getFlags()
    public abstract android.os.Bundle toBundle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.core.widget.TextViewCompat$OreoCallback
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
androidx.core.util.PatternsCompat
androidx.core.net.DatagramSocketWrapper
androidx.constraintlayout.solver.widgets.ChainHead
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener
androidx.lifecycle.extensions.R$drawable
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23
com.android.billingclient.api.BillingClientImpl$22
androidx.lifecycle.extensions.R$color
androidx.asynclayoutinflater.R$string
androidx.vectordrawable.R$string
androidx.transition.R$id
    private void <init>()
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
androidx.core.view.inputmethod.InputConnectionCompat
androidx.slidingpanelayout.R$dimen
androidx.core.app.NotificationCompat$Style
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
androidx.viewpager.widget.ViewPager$LayoutParams
com.google.android.material.appbar.ViewOffsetHelper
    public int getLeftAndRightOffset()
    public int getLayoutTop()
    public int getLayoutLeft()
androidx.core.content.pm.ShortcutInfoCompatSaver
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
com.google.android.material.bottomappbar.BottomAppBar
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void maybeAnimateAttachChange(boolean)
    private void createCradleShapeAnimation(boolean,java.util.List)
    private void createFabTranslationYAnimation(boolean,java.util.List)
    static synthetic android.animation.Animator access$502(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    static synthetic boolean access$600(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$700(com.google.android.material.bottomappbar.BottomAppBar,boolean)
    static synthetic int access$800(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$900(com.google.android.material.bottomappbar.BottomAppBar,int,boolean)
    public void replaceMenu(int)
    private static final long ANIMATION_DURATION
    public static final int FAB_ALIGNMENT_MODE_CENTER
    public static final int FAB_ALIGNMENT_MODE_END
androidx.appcompat.widget.ActionBarOverlayLayout
    public boolean isHideOnContentScrollEnabled()
    public boolean hasIcon()
    public boolean hasLogo()
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
androidx.core.R$layout
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
    protected static final int ENTER_ANIMATION_DURATION
    protected static final int EXIT_ANIMATION_DURATION
    private static final int STATE_SCROLLED_DOWN
    private static final int STATE_SCROLLED_UP
androidx.lifecycle.Transformations$2
androidx.core.app.ShareCompat$IntentReader
androidx.transition.ViewGroupUtilsApi14
    private void <init>()
    private static final java.lang.String TAG
    private static final int LAYOUT_TRANSITION_CHANGING
androidx.annotation.MainThread
androidx.core.app.BundleCompat$BundleCompatBaseImpl
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sPutIBinderMethod
    private static boolean sPutIBinderMethodFetched
androidx.core.os.EnvironmentCompat
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
androidx.transition.Slide$GravityFlag
com.google.android.material.button.MaterialButtonHelper
    private static final float CORNER_RADIUS_ADJUSTMENT
    private static final int DEFAULT_BACKGROUND_COLOR
androidx.core.widget.TintableCompoundDrawablesView
    public abstract android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.text.BidiFormatter$Builder
androidx.legacy.coreui.R$string
androidx.viewpager.widget.ViewPager$SavedState$1
androidx.appcompat.app.ToolbarActionBar$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1
androidx.recyclerview.widget.LinearSnapHelper
com.google.android.material.appbar.CollapsingToolbarLayout$1
androidx.vectordrawable.R$styleable
androidx.appcompat.view.ContextThemeWrapper
    public void applyOverrideConfiguration(android.content.res.Configuration)
androidx.core.telephony.mbms.MbmsHelper
androidx.drawerlayout.R$id
com.google.android.material.internal.NavigationMenu
androidx.recyclerview.widget.AsyncListUtil$DataCallback
com.google.android.material.appbar.HeaderBehavior
    private static final int INVALID_POINTER
androidx.appcompat.R$interpolator
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
c.jahhow.remotecontroller.msg.SCS1
androidx.loader.content.ModernAsyncTask$4
androidx.lifecycle.SavedStateHandle
    private androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object)
    private static void validateValue(java.lang.Object)
    public boolean contains(java.lang.String)
    public androidx.lifecycle.MutableLiveData getLiveData(java.lang.String)
    public androidx.lifecycle.MutableLiveData getLiveData(java.lang.String,java.lang.Object)
    public java.util.Set keys()
    public java.lang.Object get(java.lang.String)
    public void set(java.lang.String,java.lang.Object)
    public java.lang.Object remove(java.lang.String)
    private static final java.lang.String VALUES
    private static final java.lang.String KEYS
com.google.android.material.snackbar.Snackbar$Duration
androidx.recyclerview.widget.AdapterListUpdateCallback
androidx.annotation.NonNull
androidx.drawerlayout.R$color
androidx.viewpager.widget.ViewPager$PageTransformer
androidx.core.R$string
android.support.v4.media.MediaBrowserCompat$MediaItem
    public static android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
    public static java.util.List fromMediaItemList(java.util.List)
    public void <init>(android.support.v4.media.MediaDescriptionCompat,int)
    public int getFlags()
    public boolean isBrowsable()
    public boolean isPlayable()
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public java.lang.String getMediaId()
    public static final int FLAG_BROWSABLE
    public static final int FLAG_PLAYABLE
androidx.transition.Styleable$VisibilityTransition
androidx.arch.core.executor.DefaultTaskExecutor$1
    private static final java.lang.String THREAD_NAME_STEM
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
    public boolean isRtl(char[],int,int)
androidx.core.text.util.LinkifyCompat
androidx.appcompat.resources.R$string
androidx.lifecycle.livedata.core.R
androidx.documentfile.provider.DocumentFile
androidx.transition.FragmentTransitionSupport$3
    public void onTransitionCancel(androidx.transition.Transition)
androidx.vectordrawable.animated.R$color
androidx.collection.SparseArrayCompat
    public void delete(int)
    public boolean remove(int,java.lang.Object)
    public void removeAt(int)
    public void removeAtRange(int,int)
    public java.lang.Object replace(int,java.lang.Object)
    public boolean replace(int,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.SparseArrayCompat)
    public java.lang.Object putIfAbsent(int,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
androidx.appcompat.R$id
    private void <init>()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
androidx.recyclerview.widget.AsyncListDiffer$1
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
    public float getProgress()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
    public void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    void <init>(java.lang.Object)
    public java.lang.CharSequence getLabel()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static final java.lang.String TAG
androidx.fragment.app.FragmentAnim
    private void <init>()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
    public void <init>()
androidx.core.content.pm.PermissionInfoCompat$Protection
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21)
androidx.lifecycle.ComputableLiveData$2
androidx.legacy.coreui.R$attr
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils
    private void <init>()
androidx.core.app.NotificationCompat
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper)
    public void handleMessage(android.os.Message)
    boolean mRegistered
    final synthetic android.support.v4.media.session.MediaControllerCompat$Callback this$0
    private static final int MSG_EVENT
    private static final int MSG_UPDATE_PLAYBACK_STATE
    private static final int MSG_UPDATE_METADATA
    private static final int MSG_UPDATE_VOLUME
    private static final int MSG_UPDATE_QUEUE
    private static final int MSG_UPDATE_QUEUE_TITLE
    private static final int MSG_UPDATE_EXTRAS
    private static final int MSG_DESTROYED
    private static final int MSG_UPDATE_REPEAT_MODE
    private static final int MSG_UPDATE_CAPTIONING_ENABLED
    private static final int MSG_UPDATE_SHUFFLE_MODE
    private static final int MSG_SESSION_READY
com.android.billingclient.api.BillingClientImpl$23
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
    boolean isListening()
androidx.recyclerview.widget.RecyclerView$Adapter
    public void <init>()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public abstract void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
    public void setHasStableIds(boolean)
    public final boolean hasObservers()
    public final void notifyDataSetChanged()
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemInserted(int)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
    private final androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable
    private boolean mHasStableIds
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment
    public void <init>(int)
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final int getId()
    public final java.lang.String getTag()
    public final android.os.Bundle requireArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final int getTargetRequestCode()
    public final java.lang.Object requireHost()
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager getFragmentManager()
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment requireParentFragment()
    public final boolean isAdded()
    public final boolean isDetached()
    public final boolean isInLayout()
    public final boolean isResumed()
    public final boolean isVisible()
    public final boolean isHidden()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setRetainInstance(boolean)
    public void setHasOptionsMenu(boolean)
    public void setMenuVisibility(boolean)
    public void setUserVisibleHint(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startActivityForResult(android.content.Intent,int)
    public void startActivityForResult(android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    public final void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
    static final int INITIALIZING
    static final int ATTACHED
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
androidx.core.widget.NestedScrollView
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
com.android.billingclient.api.BillingClientNativeCallback
com.google.android.material.shape.ShapePath$PathOperation
androidx.media.MediaSessionManager
android.support.v4.media.RatingCompat$StarStyle
com.google.android.material.appbar.ViewOffsetBehavior
    public boolean setLeftAndRightOffset(int)
    public int getLeftAndRightOffset()
com.google.android.material.shape.ShapePathModel
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2
androidx.recyclerview.widget.SortedList
androidx.transition.Slide$CalculateSlideHorizontal
android.support.v4.media.session.PlaybackStateCompat$State
android.support.v4.media.session.PlaybackStateCompatApi21
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
    private void <init>()
androidx.collection.LongSparseArray
    public boolean remove(long,java.lang.Object)
    public java.lang.Object replace(long,java.lang.Object)
    public boolean replace(long,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.LongSparseArray)
    public java.lang.Object putIfAbsent(long,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2
    public void offsetChild(android.view.View,int)
androidx.media.MediaSessionManagerImplApi21
androidx.appcompat.app.AlertDialog
    protected void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public android.widget.Button getButton(int)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    void setButtonPanelLayoutHint(int)
    public void setButton(int,java.lang.CharSequence,android.os.Message)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setIconAttribute(int)
    static final int LAYOUT_HINT_NONE
    static final int LAYOUT_HINT_SIDE
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.recyclerview.widget.RecyclerView$LayoutManager$1
    public int getChildCount()
    public android.view.View getParent()
androidx.core.view.NestedScrollingChild2
    public abstract boolean startNestedScroll(int,int)
    public abstract boolean hasNestedScrollingParent(int)
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.android.billingclient.api.BillingFlowParams
    public java.util.ArrayList getOldSkus()
    public static final java.lang.String EXTRA_PARAM_KEY_ACCOUNT_ID
    public static final java.lang.String EXTRA_PARAM_KEY_REPLACE_SKUS_PRORATION_MODE
    public static final java.lang.String EXTRA_PARAM_KEY_VR
    public static final java.lang.String EXTRA_PARAM_KEY_RSKU
    public static final java.lang.String EXTRA_PARAM_CHILD_DIRECTED
    public static final java.lang.String EXTRA_PARAM_UNDER_AGE_OF_CONSENT
    public static final java.lang.String EXTRA_PARAM_KEY_OLD_SKUS
    public static final java.lang.String EXTRA_PARAM_KEY_OLD_SKU_PURCHASE_TOKEN
    public static final java.lang.String EXTRA_PARAM_KEY_DEVELOPER_ID
androidx.transition.R$layout
com.google.android.material.internal.VisibilityAwareImageButton
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.annotation.InterpolatorRes
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType
androidx.core.app.RemoteInput
androidx.core.view.ActionProvider$SubUiVisibilityListener
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.core.app.NotificationCompatBuilder
androidx.collection.LruCache
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
androidx.appcompat.view.menu.MenuAdapter
    public boolean getForceShowIcon()
androidx.annotation.RestrictTo
androidx.customview.R$attr
androidx.appcompat.R$drawable
    private void <init>()
android.support.v4.media.MediaMetadataCompat$TextKey
androidx.documentfile.provider.RawDocumentFile
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback
androidx.core.content.ContentResolverCompat
androidx.legacy.v4.R$integer
androidx.lifecycle.viewmodel.R
c.jahhow.remotecontroller.R$attr
androidx.interpolator.R
androidx.transition.Slide$5
androidx.appcompat.widget.ActivityChooserView$5
c.jahhow.remotecontroller.R$id
androidx.constraintlayout.solver.ArrayLinkedVariables
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
    int[] mCachedThemeAttrs
androidx.lifecycle.ReportFragment
    private static final java.lang.String REPORT_FRAGMENT_TAG
com.google.android.material.snackbar.SnackbarContentLayout
    public void animateContentIn(int,int)
    public void animateContentOut(int,int)
androidx.lifecycle.extensions.R$styleable
com.google.android.material.snackbar.BaseTransientBottomBar$6
com.android.billingclient.api.ConsumeResponseListener
com.android.billingclient.api.BillingClientImpl$14
androidx.loader.content.Loader$ForceLoadContentObserver
androidx.asynclayoutinflater.R$drawable
android.support.v4.os.IResultReceiver$Stub$Proxy
    public java.lang.String getInterfaceDescriptor()
    public void send(int,android.os.Bundle)
androidx.appcompat.resources.R$layout
androidx.transition.R$styleable
androidx.media.MediaSessionManager$RemoteUserInfoImpl
com.google.android.material.internal.FlowLayout
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
com.google.android.material.bottomsheet.BottomSheetDialog$3
androidx.lifecycle.LifecycleService
androidx.appcompat.view.SupportMenuInflater
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
androidx.appcompat.widget.TintTypedArray
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
androidx.activity.R$drawable
androidx.legacy.coreutils.R$integer
androidx.recyclerview.widget.ListAdapter
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
com.google.android.material.chip.ChipGroup$1
androidx.lifecycle.SavedStateViewModelFactory
    public void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner)
com.google.android.material.circularreveal.CircularRevealHelper$Delegate
    public abstract void actualDraw(android.graphics.Canvas)
    public abstract boolean actualIsOpaque()
com.google.android.material.chip.Chip$1
com.google.android.material.snackbar.BaseTransientBottomBar$6$1
android.support.v4.media.MediaDescriptionCompatApi23
    private void <init>()
androidx.appcompat.view.menu.MenuDialogHelper
    public void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.ViewParentCompat
    private void <init>()
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static int[] getTempNestedScrollConsumed()
    private static final java.lang.String TAG
    private static int[] sTempNestedScrollConsumed
androidx.activity.R$styleable
androidx.coordinatorlayout.R$layout
androidx.transition.Scene
    public static androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup)
    private void <init>(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup,android.view.View)
    public android.view.ViewGroup getSceneRoot()
    public void enter()
    public void setEnterAction(java.lang.Runnable)
    public void setExitAction(java.lang.Runnable)
    boolean isCreatedFromLayoutResource()
    private android.content.Context mContext
    private int mLayoutId
    private android.view.View mLayout
    private java.lang.Runnable mEnterAction
androidx.customview.R
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.core.widget.PopupWindowCompat
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
androidx.vectordrawable.R$dimen
androidx.annotation.RawRes
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
androidx.core.content.pm.PermissionInfoCompat
androidx.constraintlayout.solver.GoalRow
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
androidx.core.view.ViewCompat$ScrollIndicators
androidx.core.view.NestedScrollingParentHelper
    public void onStopNestedScroll(android.view.View)
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling
    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
c.jahhow.remotecontroller.R$anim
androidx.transition.Slide$CalculateSlide
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.core.location.LocationManagerCompat
androidx.appcompat.widget.PopupMenu
androidx.appcompat.app.TwilightCalculator
    public static final int DAY
    public static final int NIGHT
    private static final float DEGREES_TO_RADIANS
    private static final float J0
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    private static final float C1
    private static final float C2
    private static final float C3
    private static final float OBLIQUITY
    private static final long UTC_2000
androidx.transition.ViewUtilsApi22
    private static final java.lang.String TAG
androidx.appcompat.resources.R$integer
com.google.android.material.textfield.TextInputLayout$BoxBackgroundMode
com.android.billingclient.api.AcknowledgePurchaseParams$Builder
    public final com.android.billingclient.api.AcknowledgePurchaseParams$Builder setDeveloperPayload(java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
com.android.billingclient.api.Purchase
    public java.lang.String getOrderId()
    public java.lang.String getPackageName()
    public long getPurchaseTime()
    public java.lang.String getDeveloperPayload()
    public boolean isAutoRenewing()
androidx.appcompat.graphics.drawable.StateListDrawable
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.view.inputmethod.InputContentInfoCompat
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.legacy.coreutils.R$attr
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.constraintlayout.widget.ConstraintSet
androidx.transition.Transition$ArrayListManager
com.android.billingclient.api.PurchaseApiResponseChecker
    private void <init>()
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem
androidx.activity.R$color
androidx.activity.R
androidx.print.PrintHelper$PrintUriAdapter$1
androidx.annotation.RequiresApi
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback
com.android.billingclient.api.DebugMessages
androidx.fragment.app.FragmentLayoutInflaterFactory
    private static final java.lang.String TAG
com.google.android.material.tabs.TabLayout$PagerAdapterObserver
androidx.core.app.NotificationCompat$BigTextStyle
androidx.transition.TransitionListenerAdapter
    public void onTransitionEnd(androidx.transition.Transition)
    public void onTransitionCancel(androidx.transition.Transition)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2
androidx.annotation.AnyThread
androidx.core.content.FileProvider$PathStrategy
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.transition.R$dimen
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.appcompat.widget.AppCompatTextHelper
    private static final int TEXT_FONT_WEIGHT_UNSPECIFIED
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.core.widget.ImageViewCompat
    private void <init>()
androidx.viewpager.R$color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
androidx.transition.Styleable$Transition
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.annotation.RestrictTo$Scope
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
androidx.core.widget.ContentLoadingProgressBar
androidx.appcompat.view.menu.MenuView$ItemView
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
androidx.transition.ChangeTransform$2
androidx.core.view.ViewCompat$2
androidx.appcompat.widget.TooltipCompatHandler
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
androidx.core.app.NotificationCompatJellybean
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
androidx.constraintlayout.solver.widgets.Analyzer
androidx.lifecycle.AbstractSavedStateViewModelFactory
androidx.constraintlayout.solver.Pools
androidx.appcompat.graphics.drawable.DrawableContainer
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
com.google.android.material.internal.ScrimInsetsFrameLayout$1
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.lifecycle.Lifecycling$1
    void <init>(androidx.lifecycle.LifecycleEventObserver)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21
com.google.android.material.snackbar.BaseTransientBottomBar$11
androidx.fragment.R$color
androidx.constraintlayout.solver.widgets.Snapshot
com.google.android.material.bottomappbar.BottomAppBar$7
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.transition.Styleable$TransitionManager
androidx.fragment.app.FragmentStateManager
    androidx.fragment.app.Fragment$SavedState saveInstanceState()
    private static final java.lang.String TAG
    private static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    private static final java.lang.String TARGET_STATE_TAG
    private static final java.lang.String VIEW_STATE_TAG
    private static final java.lang.String USER_VISIBLE_HINT_TAG
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3
androidx.core.content.ContextCompat$MainHandlerExecutor
androidx.core.app.JobIntentService
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
    public java.lang.CharSequence getText()
com.google.android.material.snackbar.BaseTransientBottomBar$ContentViewCallback
androidx.appcompat.widget.ActivityChooserView$1
androidx.fragment.app.FragmentTransaction$Op
    void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.fragment.R$anim
    private void <init>()
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
androidx.core.view.ViewConfigurationCompat
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    private void <init>()
    private static final java.lang.String TAG
androidx.constraintlayout.widget.R$attr
androidx.recyclerview.widget.BatchingListUpdateCallback
com.android.billingclient.api.ConsumeParams$1
androidx.core.os.HandlerCompat
androidx.transition.Slide$1
androidx.legacy.coreutils.R$drawable
androidx.annotation.DimenRes
androidx.media.MediaSessionManager$MediaSessionManagerImpl
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
androidx.constraintlayout.solver.widgets.ResolutionNode
androidx.appcompat.app.ActionBar$LayoutParams
    public void <init>(int,int,int)
    public void <init>(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.loader.R$drawable
androidx.constraintlayout.solver.widgets.ConstraintWidget
androidx.loader.R$id
android.support.v4.media.session.MediaSessionCompatApi24$Callback
androidx.recyclerview.widget.SnapHelper
androidx.viewpager.widget.ViewPager$2
androidx.legacy.coreui.R$id
com.google.android.material.animation.AnimationUtils
    public void <init>()
    public static int lerp(int,int,float)
androidx.fragment.R$attr
com.google.android.material.expandable.ExpandableWidgetHelper
    public void <init>(com.google.android.material.expandable.ExpandableWidget)
    private void dispatchExpandedStateChanged()
    public boolean setExpanded(boolean)
    private final android.view.View widget
    private boolean expanded
    private int expandedComponentIdHint
androidx.legacy.v4.R$style
androidx.customview.widget.ViewDragHelper
    public void setMinVelocity(float)
    public float getMinVelocity()
    public int getViewDragState()
    public void setEdgeTrackingEnabled(int)
    public int getEdgeSize()
    public android.view.View getCapturedView()
    public int getActivePointerId()
    public void abort()
    public void flingCapturedView(int,int,int,int)
    protected boolean canScroll(android.view.View,boolean,int,int,int,int)
    public boolean checkTouchSlop(int)
    public boolean checkTouchSlop(int,int)
    public boolean isEdgeTouched(int)
    public boolean isEdgeTouched(int,int)
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
androidx.core.view.accessibility.AccessibilityClickableSpanCompat
    public static final java.lang.String SPAN_ID
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
android.support.v4.media.MediaBrowserCompatApi26
com.google.android.material.chip.ChipDrawable$Delegate
androidx.cardview.widget.RoundRectDrawableWithShadow
    private static final float SHADOW_MULTIPLIER
androidx.transition.R$string
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable
androidx.appcompat.view.menu.SubMenuBuilder
    public void setShortcutsVisible(boolean)
androidx.legacy.v4.R$id
androidx.customview.R$style
androidx.appcompat.widget.LinearLayoutCompat
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.lifecycle.Transformations$3
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData
c.jahhow.remotecontroller.ServerVerifier
    private void <init>()
    private static final int SupportServerVersion
com.google.android.material.circularreveal.CircularRevealCompat
    private void <init>()
    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)
androidx.annotation.RequiresPermission$Read
com.google.android.material.R$style
    private void <init>()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
androidx.versionedparcelable.CustomVersionedParcelable
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.appcompat.app.ActionBarDrawerToggle
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour
android.support.v4.media.session.MediaSessionCompatApi24
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
    public void setAnchorId(int)
    void invalidateAnchor()
androidx.cardview.R$styleable
    private void <init>()
androidx.cursoradapter.widget.CursorAdapter
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
androidx.appcompat.resources.R$color
androidx.cardview.R$color
    private void <init>()
android.support.v4.media.MediaBrowserCompat$CallbackHandler
com.android.billingclient.api.BillingClient$SkuType
androidx.collection.ContainerHelpers
    private void <init>()
com.google.android.material.internal.DrawableUtils
    private void <init>()
    private static final java.lang.String LOG_TAG
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
androidx.lifecycle.extensions.R
com.android.billingclient.api.BillingClientImpl$2
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
androidx.core.R$styleable
    private void <init>()
androidx.core.view.ViewCompat$ScrollAxis
android.support.v4.media.MediaMetadataCompat
    void <init>(android.os.Bundle)
    public boolean containsKey(java.lang.String)
    public java.lang.CharSequence getText(java.lang.String)
    public java.lang.String getString(java.lang.String)
    public long getLong(java.lang.String)
    public android.support.v4.media.RatingCompat getRating(java.lang.String)
    public android.graphics.Bitmap getBitmap(java.lang.String)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public int size()
    public java.util.Set keySet()
    public android.os.Bundle getBundle()
    public java.lang.Object getMediaMetadata()
    private android.support.v4.media.MediaDescriptionCompat mDescription
    private static final java.lang.String TAG
    public static final java.lang.String METADATA_KEY_TITLE
    public static final java.lang.String METADATA_KEY_ARTIST
    public static final java.lang.String METADATA_KEY_DURATION
    public static final java.lang.String METADATA_KEY_ALBUM
    public static final java.lang.String METADATA_KEY_AUTHOR
    public static final java.lang.String METADATA_KEY_WRITER
    public static final java.lang.String METADATA_KEY_COMPOSER
    public static final java.lang.String METADATA_KEY_COMPILATION
    public static final java.lang.String METADATA_KEY_DATE
    public static final java.lang.String METADATA_KEY_YEAR
    public static final java.lang.String METADATA_KEY_GENRE
    public static final java.lang.String METADATA_KEY_TRACK_NUMBER
    public static final java.lang.String METADATA_KEY_NUM_TRACKS
    public static final java.lang.String METADATA_KEY_DISC_NUMBER
    public static final java.lang.String METADATA_KEY_ALBUM_ARTIST
    public static final java.lang.String METADATA_KEY_ART
    public static final java.lang.String METADATA_KEY_ART_URI
    public static final java.lang.String METADATA_KEY_ALBUM_ART
    public static final java.lang.String METADATA_KEY_ALBUM_ART_URI
    public static final java.lang.String METADATA_KEY_USER_RATING
    public static final java.lang.String METADATA_KEY_RATING
    public static final java.lang.String METADATA_KEY_DISPLAY_TITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON_URI
    public static final java.lang.String METADATA_KEY_MEDIA_ID
    public static final java.lang.String METADATA_KEY_MEDIA_URI
    public static final java.lang.String METADATA_KEY_BT_FOLDER_TYPE
    public static final java.lang.String METADATA_KEY_ADVERTISEMENT
    public static final java.lang.String METADATA_KEY_DOWNLOAD_STATUS
    static final int METADATA_TYPE_LONG
    static final int METADATA_TYPE_TEXT
    static final int METADATA_TYPE_BITMAP
    static final int METADATA_TYPE_RATING
androidx.annotation.HalfFloat
androidx.recyclerview.widget.AsyncListUtil
androidx.viewpager.widget.PagerTabStrip
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6
androidx.recyclerview.widget.DefaultItemAnimator
    private static final boolean DEBUG
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
androidx.asynclayoutinflater.R$integer
androidx.lifecycle.SavedStateHandle$SavingStateLiveData
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6
androidx.annotation.LayoutRes
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
android.support.v4.app.INotificationSideChannel
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3
com.google.android.material.canvas.CanvasCompat
androidx.core.provider.FontsContractCompat$4$3
androidx.media.MediaBrowserServiceCompat$3
androidx.core.app.RemoteActionCompat
    public void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
    public void <init>(androidx.core.app.RemoteActionCompat)
    public static androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
    public void setEnabled(boolean)
    public boolean isEnabled()
    public void setShouldShowIcon(boolean)
    public boolean shouldShowIcon()
    public androidx.core.graphics.drawable.IconCompat getIcon()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getContentDescription()
    public android.app.PendingIntent getActionIntent()
    public android.app.RemoteAction toRemoteAction()
androidx.core.graphics.BitmapCompat
androidx.collection.CircularArray
androidx.transition.ChangeImageTransform
androidx.core.provider.SelfDestructiveThread
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
android.support.v4.media.session.MediaControllerCompatApi21
    public static java.lang.Object fromToken(android.content.Context,java.lang.Object)
    public static void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
    public static void unregisterCallback(java.lang.Object,java.lang.Object)
    public static void setMediaController(android.app.Activity,java.lang.Object)
    public static java.lang.Object getMediaController(android.app.Activity)
    public static java.lang.Object getSessionToken(java.lang.Object)
    public static java.lang.Object getTransportControls(java.lang.Object)
    public static java.lang.Object getPlaybackState(java.lang.Object)
    public static java.lang.Object getMetadata(java.lang.Object)
    public static java.util.List getQueue(java.lang.Object)
    public static java.lang.CharSequence getQueueTitle(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static int getRatingType(java.lang.Object)
    public static long getFlags(java.lang.Object)
    public static java.lang.Object getPlaybackInfo(java.lang.Object)
    public static android.app.PendingIntent getSessionActivity(java.lang.Object)
    public static boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
    public static void setVolumeTo(java.lang.Object,int,int)
    public static void adjustVolume(java.lang.Object,int,int)
    public static void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public static java.lang.String getPackageName(java.lang.Object)
    private void <init>()
androidx.fragment.R$string
androidx.loader.R$color
androidx.lifecycle.ProcessLifecycleOwner
    public static androidx.lifecycle.LifecycleOwner get()
    static final long TIMEOUT_MS
androidx.vectordrawable.R$style
androidx.annotation.UiThread
androidx.lifecycle.extensions.R$style
androidx.appcompat.app.TwilightManager
    static void setInstance(androidx.appcompat.app.TwilightManager)
    private static final java.lang.String TAG
    private static final int SUNRISE
    private static final int SUNSET
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy
androidx.lifecycle.extensions.R$attr
androidx.transition.Slide
androidx.savedstate.R
androidx.transition.ChangeBounds
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setResizeClip(boolean)
    public boolean getResizeClip()
    private static final java.lang.String PROPNAME_BOUNDS
    private static final java.lang.String PROPNAME_CLIP
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_WINDOW_X
    private static final java.lang.String PROPNAME_WINDOW_Y
androidx.annotation.GuardedBy
com.android.billingclient.api.ConsumeParams$Builder
androidx.core.R$integer
androidx.appcompat.widget.VectorEnabledTintResources
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
androidx.constraintlayout.solver.widgets.Snapshot$Connection
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    int size()
    private static final int DEFAULT_MAX_SCRAP
com.google.android.gms.internal.play_billing.zzd
    public boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.billingclient.R
androidx.vectordrawable.animated.R$dimen
android.support.v4.media.MediaDescriptionCompatApi21$Builder
    private void <init>()
androidx.cursoradapter.widget.ResourceCursorAdapter
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
androidx.constraintlayout.solver.widgets.Barrier
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
androidx.media.R$styleable
c.jahhow.remotecontroller.R$color
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
androidx.arch.core.executor.ArchTaskExecutor
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
android.support.v4.media.MediaBrowserCompatApi21$MediaItem
androidx.lifecycle.extensions.R$anim
androidx.annotation.InspectableProperty
com.google.android.material.circularreveal.CircularRevealGridLayout
androidx.recyclerview.widget.AdapterHelper$UpdateOp
    static final int ADD
    static final int REMOVE
    static final int UPDATE
    static final int MOVE
    static final int POOL_SIZE
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.appcompat.view.WindowCallbackWrapper
    public void onContentChanged()
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
androidx.lifecycle.MethodCallsLogger
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
androidx.appcompat.widget.DecorToolbar
    public abstract void setTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract void setNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setNavigationContentDescription(int)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract int getVisibility()
    public abstract void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public abstract android.view.Menu getMenu()
androidx.fragment.app.DialogFragment$2
androidx.core.os.LocaleListInterface
androidx.legacy.coreui.R
androidx.core.widget.ContentLoadingProgressBar$2
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public android.graphics.Rect getEpicenterBounds()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
com.android.billingclient.api.RewardResponseListener
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    private static final boolean AUTO_HIDE_DEFAULT
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1
com.android.billingclient.api.BillingClientImpl$ClientState
androidx.transition.ViewUtilsBase
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private float[] mMatrixValues
androidx.core.app.ComponentActivity$ExtraData
androidx.appcompat.view.menu.ActionMenuItem
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    public boolean requiresActionButton()
    public boolean requiresOverflow()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
androidx.lifecycle.extensions.R$dimen
androidx.appcompat.widget.AppCompatPopupWindow
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.TransitionPropagation
    public void <init>()
androidx.transition.ViewUtilsApi19
    private static final java.lang.String TAG
androidx.recyclerview.widget.ChildHelper$Bucket
    static final int BITS_PER_WORD
    static final long LAST_BIT
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
androidx.annotation.BinderThread
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2
com.google.android.material.shape.CutCornerTreatment
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public static final int INVALID_SPAN_ID
androidx.fragment.app.FragmentTabHost$SavedState
androidx.lifecycle.extensions.R$id
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback
com.google.android.material.appbar.CollapsingToolbarLayout$2
androidx.annotation.PluralsRes
androidx.recyclerview.widget.DiffUtil
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.app.JobIntentService$CompatWorkItem
androidx.core.text.TextDirectionHeuristicsCompat
    private void <init>()
    private static final int STATE_TRUE
    private static final int STATE_FALSE
    private static final int STATE_UNKNOWN
androidx.transition.CircularPropagation
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater
androidx.annotation.Nullable
androidx.transition.ViewGroupUtils
    private void <init>()
androidx.coordinatorlayout.R$styleable
    private void <init>()
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18
androidx.recyclerview.widget.ListUpdateCallback
androidx.media.VolumeProviderCompatApi21$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
    public void onChanged()
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
    void triggerUpdateProcessor()
androidx.transition.ViewGroupOverlayApi18
    public void clear()
androidx.vectordrawable.animated.R$style
com.google.android.material.shape.EdgeTreatment
    public void <init>()
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter
androidx.coordinatorlayout.widget.ViewGroupUtils
    private void <init>()
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7
androidx.recyclerview.widget.ItemTouchUIUtil
androidx.fragment.app.DialogFragment
androidx.appcompat.R$styleable
    private void <init>()
androidx.core.internal.package-info
com.android.billingclient.api.BillingClientImpl$16$2
c.jahhow.remotecontroller.R$mipmap
androidx.appcompat.app.AlertController
    public void setButtonPanelLayoutHint(int)
    public android.widget.Button getButton(int)
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.slidingpanelayout.R$styleable
androidx.annotation.AttrRes
androidx.core.content.pm.ActivityInfoCompat
androidx.core.view.GestureDetectorCompat
androidx.transition.PathMotion
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.app.Person
androidx.lifecycle.extensions.R$string
androidx.slidingpanelayout.R$attr
c.jahhow.remotecontroller.R$integer
androidx.constraintlayout.solver.Pools$Pool
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.media.MediaBrowserServiceCompat$ConnectionRecord
androidx.core.content.MimeTypeFilter
androidx.core.view.DisplayCutoutCompat
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.transition.TransitionSet
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getOrdering()
    public androidx.transition.TransitionSet addTarget(int)
    public androidx.transition.TransitionSet addTarget(java.lang.String)
    public androidx.transition.TransitionSet addTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(int)
    public androidx.transition.TransitionSet removeTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(java.lang.String)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.TransitionSet removeTransition(androidx.transition.Transition)
    protected void cancel()
    void forceToEnd(android.view.ViewGroup)
    androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    synthetic bridge androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition removeTarget(int)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition addTarget(int)
    private static final int FLAG_CHANGE_INTERPOLATOR
    private static final int FLAG_CHANGE_PROPAGATION
    private static final int FLAG_CHANGE_PATH_MOTION
    private static final int FLAG_CHANGE_EPICENTER
    public static final int ORDERING_TOGETHER
    public static final int ORDERING_SEQUENTIAL
android.support.v4.media.MediaBrowserCompat$SearchCallback
    public void <init>()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
androidx.recyclerview.widget.MessageThreadUtil$2
c.jahhow.remotecontroller.ConnectorSwitcherFragment
    private static final boolean PreferBluetooth
    private static final boolean PreferTcpIp
androidx.appcompat.widget.ActivityChooserView
androidx.core.view.VelocityTrackerCompat
c.jahhow.remotecontroller.R$dimen
androidx.recyclerview.widget.TileList
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.recyclerview.widget.SortedList$BatchedCallback
androidx.core.widget.TintableCompoundButton
    public abstract android.content.res.ColorStateList getSupportButtonTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
androidx.print.PrintHelper$PrintUriAdapter$1$1
com.google.android.material.snackbar.BaseTransientBottomBar$2
androidx.slidingpanelayout.R
com.google.android.material.snackbar.SnackbarManager
    private void showNextSnackbarLocked()
    private boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)
    public void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)
    public void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)
    static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
androidx.viewpager.R$drawable
com.google.android.material.R$bool
androidx.core.R$color
com.google.android.material.floatingactionbutton.FloatingActionButton$Size
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
com.android.billingclient.api.BillingClientImpl$21
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord
androidx.recyclerview.widget.RecyclerView$Recycler
    public void bindViewToPosition(android.view.View,int)
    void recycleViewInternal(android.view.View)
    static final int DEFAULT_CACHE_SIZE
androidx.transition.Transition$MatchOrder
androidx.constraintlayout.solver.widgets.ResolutionDimension
c.jahhow.remotecontroller.msg.ButtonAction
androidx.recyclerview.widget.ItemTouchHelper$3
androidx.appcompat.app.ActionBarDrawerToggle$1
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.android.material.behavior.SwipeDismissBehavior
    public void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)
    public void setDragDismissDistance(float)
    public void setSensitivity(float)
    public int getDragState()
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int SWIPE_DIRECTION_START_TO_END
    public static final int SWIPE_DIRECTION_END_TO_START
    public static final int SWIPE_DIRECTION_ANY
    private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
    private static final float DEFAULT_ALPHA_START_DISTANCE
    private static final float DEFAULT_ALPHA_END_DISTANCE
androidx.core.text.util.LinkifyCompat$LinkSpec
androidx.core.graphics.PathUtils
androidx.core.app.NotificationCompat$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter
android.support.v4.media.session.MediaSessionCompat$QueueItem
    public void <init>(android.support.v4.media.MediaDescriptionCompat,long)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public long getQueueId()
    public java.lang.Object getQueueItem()
    public static final int UNKNOWN_ID
androidx.annotation.BoolRes
com.google.android.material.circularreveal.CircularRevealFrameLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
androidx.lifecycle.AndroidViewModel
    public void <init>(android.app.Application)
    public android.app.Application getApplication()
    private android.app.Application mApplication
androidx.appcompat.view.menu.MenuBuilder
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
androidx.transition.R$attr
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable
androidx.transition.R
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
com.android.billingclient.api.BillingResult
    public final java.lang.String getDebugMessage()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
    public void <init>()
com.android.billingclient.api.ConsumeParams
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
    public int getColumnCount()
    public int getRowCount()
    public boolean isHierarchical()
    public int getSelectionMode()
    public static final int SELECTION_MODE_NONE
    public static final int SELECTION_MODE_SINGLE
    public static final int SELECTION_MODE_MULTIPLE
androidx.appcompat.widget.ThemeUtils
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
androidx.viewpager.widget.ViewPager$3
androidx.appcompat.resources.R
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.recyclerview.widget.ViewBoundsCheck$Callback
    public abstract int getChildCount()
    public abstract android.view.View getParent()
androidx.constraintlayout.solver.widgets.WidgetContainer
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.appcompat.widget.ActionMenuView
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.annotation.FontRes
androidx.appcompat.widget.ButtonBarLayout
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper
    public static final int UNDEFINED
com.google.android.material.behavior.SwipeDismissBehavior$1
    private static final int INVALID_POINTER_ID
androidx.slidingpanelayout.R$string
androidx.recyclerview.widget.LinearLayoutManager$LayoutState
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl
androidx.print.PrintHelper$PrintBitmapAdapter
androidx.core.app.AppLaunchChecker
androidx.media.AudioAttributesCompat$AttributeContentType
androidx.recyclerview.widget.ViewInfoStore
    private static final boolean DEBUG
androidx.core.view.ActionProvider
    public android.content.Context getContext()
    public void refreshVisibility()
    public void subUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
androidx.transition.Visibility$DisappearListener
    public void onTransitionCancel(androidx.transition.Transition)
com.google.android.material.card.MaterialCardViewHelper
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1
androidx.loader.content.ModernAsyncTask$3
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
    public abstract android.graphics.PointF computeScrollVectorForPosition(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl
    void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    final void setMaxImageSize(int)
    com.google.android.material.internal.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)
    com.google.android.material.internal.CircularBorderDrawable newCircularDrawable()
    android.graphics.drawable.GradientDrawable createShapeDrawable()
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape()
    static final long ELEVATION_ANIM_DURATION
    static final long ELEVATION_ANIM_DELAY
    static final int ANIM_STATE_NONE
    static final int ANIM_STATE_HIDING
    static final int ANIM_STATE_SHOWING
    private static final float HIDE_OPACITY
    private static final float HIDE_SCALE
    private static final float HIDE_ICON_SCALE
    private static final float SHOW_OPACITY
    private static final float SHOW_SCALE
    private static final float SHOW_ICON_SCALE
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper
com.android.billingclient.api.BillingClientImpl$NativeUsage
androidx.versionedparcelable.R
androidx.core.app.NotificationManagerCompat
androidx.vectordrawable.animated.R
androidx.core.app.RemoteInput$Source
com.google.android.material.chip.ChipGroup
androidx.recyclerview.widget.LinearSmoothScroller
androidx.appcompat.app.NavItemSelectedListener
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.appcompat.widget.ActivityChooserView$4
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
androidx.collection.ArraySet
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.text.util.LinkifyCompat$1
androidx.coordinatorlayout.R
com.google.android.material.R$layout
    private void <init>()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
    public void <init>(android.os.ResultReceiver)
androidx.core.util.Pools
androidx.core.os.OperationCanceledException
androidx.annotation.MenuRes
android.support.v4.media.ParceledListSliceAdapterApi21
androidx.savedstate.SavedStateRegistry
    public void unregisterSavedStateProvider(java.lang.String)
    public boolean isRestored()
    private static final java.lang.String SAVED_COMPONENTS_KEY
com.google.android.material.appbar.AppBarLayout$LayoutParams
    public void <init>(int,int,float)
    public void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams)
    public void setScrollFlags(int)
    public void setScrollInterpolator(android.view.animation.Interpolator)
    public static final int SCROLL_FLAG_SCROLL
    public static final int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    public static final int SCROLL_FLAG_ENTER_ALWAYS
    public static final int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    public static final int SCROLL_FLAG_SNAP
    public static final int SCROLL_FLAG_SNAP_MARGINS
    static final int FLAG_QUICK_RETURN
    static final int FLAG_SNAP
    static final int COLLAPSIBLE_FLAGS
androidx.constraintlayout.widget.R$id
android.support.v4.media.MediaMetadataCompat$Builder
androidx.constraintlayout.solver.widgets.ResolutionAnchor
androidx.vectordrawable.animated.R$styleable
com.google.android.material.bottomsheet.BottomSheetDialog$4
com.google.android.material.resources.MaterialResources
    private void <init>()
    public static com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
    static int getIndexWithValue(android.content.res.TypedArray,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
com.google.android.material.transformation.TransformationChildLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback
androidx.recyclerview.R$style
androidx.lifecycle.ComputableLiveData
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1
androidx.transition.GhostViewImpl
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
androidx.appcompat.widget.AppCompatSpinner
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
androidx.activity.R$style
c.jahhow.remotecontroller.RemoteControllerApp
    private static final java.lang.String ManagePlaySubsUrl
    private static final java.lang.String Sku_Subscription_FullAccess
androidx.coordinatorlayout.R$drawable
androidx.recyclerview.widget.SimpleItemAnimator
    public boolean getSupportsChangeAnimations()
    public void setSupportsChangeAnimations(boolean)
    private static final boolean DEBUG
    private static final java.lang.String TAG
android.support.v4.media.session.MediaSessionCompat$Callback
androidx.core.app.JobIntentService$CommandProcessor
androidx.transition.Styleable$TransitionTarget
com.google.android.material.expandable.ExpandableTransformationWidget
    public abstract int getExpandedComponentIdHint()
    public abstract void setExpandedComponentIdHint(int)
androidx.legacy.coreui.R$integer
androidx.transition.ChangeTransform$3
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
    public synthetic bridge void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public synthetic bridge boolean isAutoHideEnabled()
    public synthetic bridge void setAutoHideEnabled(boolean)
androidx.media.app.NotificationCompat$MediaStyle
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
    public void <init>()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
    public boolean performAction(int,int,android.os.Bundle)
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public static final int HOST_VIEW_ID
androidx.annotation.AnimatorRes
androidx.versionedparcelable.ParcelField
com.android.billingclient.api.BillingFlowParams$Builder
    public com.android.billingclient.api.BillingFlowParams$Builder setOldSkus(java.util.ArrayList)
    public com.android.billingclient.api.BillingFlowParams$Builder setOldSku(java.lang.String)
    public com.android.billingclient.api.BillingFlowParams$Builder setOldSku(java.lang.String,java.lang.String)
    public com.android.billingclient.api.BillingFlowParams$Builder addOldSku(java.lang.String)
    public com.android.billingclient.api.BillingFlowParams$Builder setReplaceSkusProrationMode(int)
    public com.android.billingclient.api.BillingFlowParams$Builder setAccountId(java.lang.String)
    public com.android.billingclient.api.BillingFlowParams$Builder setVrPurchaseFlow(boolean)
    public com.android.billingclient.api.BillingFlowParams$Builder setDeveloperId(java.lang.String)
androidx.core.content.res.ColorStateListInflaterCompat
    private void <init>()
androidx.transition.PatternPathMotion
android.support.v4.media.session.MediaSessionCompat$1
androidx.slidingpanelayout.R$layout
androidx.appcompat.app.AlertDialog$Builder
    public androidx.appcompat.app.AlertDialog$Builder setTitle(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(int)
    public androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public androidx.appcompat.app.AlertDialog$Builder setView(int)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
    public androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
    public androidx.appcompat.app.AlertDialog show()
androidx.core.provider.FontsContractCompat$FontRequestCallback
androidx.transition.FragmentTransitionSupport$4
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
androidx.appcompat.widget.ScrollingTabContainerView
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
androidx.lifecycle.ViewModelStores
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.android.material.appbar.AppBarLayout$Behavior
    public synthetic bridge void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
com.google.android.material.snackbar.BaseTransientBottomBar$7
androidx.slidingpanelayout.R$id
com.google.android.material.appbar.ViewUtilsLollipop
    void <init>()
    static void setBoundsViewOutlineProvider(android.view.View)
    static void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
androidx.core.view.MenuItemCompat$OnActionExpandListener
com.android.billingclient.api.Purchase$PurchaseState
com.android.billingclient.api.BillingClientImpl$13
androidx.asynclayoutinflater.R$id
androidx.constraintlayout.widget.ConstraintHelper
androidx.loader.app.LoaderManagerImpl$LoaderObserver
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.coordinatorlayout.R$color
androidx.appcompat.view.menu.ListMenuPresenter
    int getItemIndexOffset()
    public void setItemIndexOffset(int)
    public void setId(int)
    private static final java.lang.String TAG
    public static final java.lang.String VIEWS_TAG
androidx.viewpager.widget.ViewPager$SavedState
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
    public void <init>()
androidx.recyclerview.widget.GridLayoutManager
    public void <init>(android.content.Context,int)
    public void <init>(android.content.Context,int,int,boolean)
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    public int getSpanCount()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback
androidx.annotation.AnimRes
androidx.annotation.XmlRes
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.core.graphics.TypefaceCompatBaseImpl
    private static final java.lang.String TAG
    private static final int INVALID_KEY
android.support.v4.media.MediaMetadataCompat$LongKey
android.support.v4.media.MediaBrowserCompatApi23
androidx.appcompat.R
androidx.core.view.ViewCompat$NestedScrollType
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
    public void <init>()
androidx.transition.FloatArrayEvaluator
androidx.activity.OnBackPressedDispatcher
    public void <init>()
    public void addCallback(androidx.activity.OnBackPressedCallback)
    public boolean hasEnabledCallbacks()
androidx.annotation.IntDef
androidx.documentfile.provider.SingleDocumentFile
androidx.recyclerview.R$layout
androidx.loader.R$styleable
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
    public static java.lang.Object createItem(java.lang.Object,long)
    private void <init>()
androidx.recyclerview.widget.RecyclerView$ViewHolder
    public void <init>(android.view.View)
    public final int getPosition()
    void stopIgnoring()
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
    static final int FLAG_SET_A11Y_ITEM_DELEGATE
androidx.core.view.KeyEventDispatcher
    private void <init>()
androidx.core.view.NestedScrollingChild3
    public abstract void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
    public static int getPlaybackType(java.lang.Object)
    public static int getVolumeControl(java.lang.Object)
    public static int getMaxVolume(java.lang.Object)
    public static int getCurrentVolume(java.lang.Object)
    private void <init>()
    private static final int FLAG_SCO
    private static final int STREAM_BLUETOOTH_SCO
    private static final int STREAM_SYSTEM_ENFORCED
androidx.appcompat.view.menu.ActionMenuItemView
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
androidx.lifecycle.LifecycleDispatcher
    private void <init>()
androidx.transition.TransitionInflater
androidx.constraintlayout.solver.widgets.Optimizer
com.google.android.material.R$string
    private void <init>()
androidx.lifecycle.extensions.R$integer
androidx.recyclerview.widget.DiffUtil$Range
com.google.android.material.snackbar.BaseTransientBottomBar$10
android.support.v4.os.ResultReceiver
    public void <init>(android.os.Handler)
    public void send(int,android.os.Bundle)
androidx.core.app.JobIntentService$JobWorkEnqueuer
com.android.billingclient.api.BillingClient$Builder
    public final com.android.billingclient.api.BillingClient$Builder setChildDirected(int)
    public final com.android.billingclient.api.BillingClient$Builder setUnderAgeOfConsent(int)
androidx.arch.core.R
androidx.transition.Slide$4
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.core.content.pm.ShortcutManagerCompat
androidx.lifecycle.LifecycleRegistry
    public int getObserverCount()
androidx.fragment.app.FragmentContainerView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.coordinatorlayout.R$dimen
com.android.billingclient.util.BillingHelper
    public void <init>()
    public static android.os.Bundle constructExtraParamsForLoadRewardedSku(java.lang.String,int,int,java.lang.String)
    public static android.os.Bundle constructExtraParamsForConsume(com.android.billingclient.api.ConsumeParams,boolean,java.lang.String)
    public static final java.lang.String RESPONSE_CODE
    public static final java.lang.String DEBUG_MESSAGE
    public static final java.lang.String RESPONSE_GET_SKU_DETAILS_LIST
    public static final java.lang.String RESPONSE_BUY_INTENT_KEY
    public static final java.lang.String RESPONSE_SUBS_MANAGEMENT_INTENT_KEY
    public static final java.lang.String RESPONSE_INAPP_ITEM_LIST
    public static final java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST
    public static final java.lang.String RESPONSE_INAPP_SIGNATURE_LIST
    public static final java.lang.String INAPP_CONTINUATION_TOKEN
    public static final java.lang.String EXTRA_PARAM_KEY_SUBS_PRICE_CHANGE
    public static final java.lang.String EXTRA_PARAMS_ENABLE_PENDING_PURCHASES
    public static final java.lang.String EXTRA_PARAMS_DEVELOPER_PAYLOAD
    public static final java.lang.String EXTRA_PARAM_KEY_SKU_DETAILS_TOKEN
    public static final java.lang.String LIBRARY_VERSION_KEY
androidx.appcompat.widget.ActionBarContextView
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    private static final java.lang.String TAG
c.jahhow.remotecontroller.BuildConfig
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
androidx.fragment.app.FragmentHostCallback
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
androidx.core.provider.FontsContractCompat$4$7
android.support.v4.media.session.IMediaControllerCallback$Stub
    public static android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_onEvent
    static final int TRANSACTION_onSessionDestroyed
    static final int TRANSACTION_onPlaybackStateChanged
    static final int TRANSACTION_onMetadataChanged
    static final int TRANSACTION_onQueueChanged
    static final int TRANSACTION_onQueueTitleChanged
    static final int TRANSACTION_onExtrasChanged
    static final int TRANSACTION_onVolumeInfoChanged
    static final int TRANSACTION_onRepeatModeChanged
    static final int TRANSACTION_onShuffleModeChangedRemoved
    static final int TRANSACTION_onCaptioningEnabledChanged
    static final int TRANSACTION_onShuffleModeChanged
    static final int TRANSACTION_onSessionReady
androidx.fragment.app.FragmentTransaction
    public void <init>()
    private androidx.fragment.app.Fragment createFragment(java.lang.Class,android.os.Bundle)
    public final androidx.fragment.app.FragmentTransaction add(java.lang.Class,android.os.Bundle,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
    public final androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle)
    public final androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle,java.lang.String)
    public final androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle)
    public final androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle,java.lang.String)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public boolean isEmpty()
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract void commitNow()
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
    static final int OP_SET_MAX_LIFECYCLE
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
androidx.core.app.NotificationCompatExtras
androidx.media.VolumeProviderCompatApi21
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat
androidx.media.app.NotificationCompat
androidx.appcompat.R$integer
androidx.core.R$attr
    private void <init>()
androidx.annotation.ColorRes
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
androidx.core.content.res.GrowingArrayUtils
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
androidx.media.MediaBrowserServiceCompat$ServiceCallbacks
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
androidx.annotation.IdRes
androidx.appcompat.view.menu.MenuItemWrapperICS
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout
androidx.customview.widget.FocusStrategy$SequentialComparator
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23
android.support.v4.media.session.IMediaSession$Stub
    public void <init>()
    public android.os.IBinder asBinder()
    public boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_sendCommand
    static final int TRANSACTION_sendMediaButton
    static final int TRANSACTION_registerCallbackListener
    static final int TRANSACTION_unregisterCallbackListener
    static final int TRANSACTION_isTransportControlEnabled
    static final int TRANSACTION_getPackageName
    static final int TRANSACTION_getTag
    static final int TRANSACTION_getLaunchPendingIntent
    static final int TRANSACTION_getFlags
    static final int TRANSACTION_getVolumeAttributes
    static final int TRANSACTION_adjustVolume
    static final int TRANSACTION_setVolumeTo
    static final int TRANSACTION_getMetadata
    static final int TRANSACTION_getPlaybackState
    static final int TRANSACTION_getQueue
    static final int TRANSACTION_getQueueTitle
    static final int TRANSACTION_getExtras
    static final int TRANSACTION_getRatingType
    static final int TRANSACTION_isCaptioningEnabled
    static final int TRANSACTION_getRepeatMode
    static final int TRANSACTION_isShuffleModeEnabledRemoved
    static final int TRANSACTION_getShuffleMode
    static final int TRANSACTION_addQueueItem
    static final int TRANSACTION_addQueueItemAt
    static final int TRANSACTION_removeQueueItem
    static final int TRANSACTION_removeQueueItemAt
    static final int TRANSACTION_prepare
    static final int TRANSACTION_prepareFromMediaId
    static final int TRANSACTION_prepareFromSearch
    static final int TRANSACTION_prepareFromUri
    static final int TRANSACTION_play
    static final int TRANSACTION_playFromMediaId
    static final int TRANSACTION_playFromSearch
    static final int TRANSACTION_playFromUri
    static final int TRANSACTION_skipToQueueItem
    static final int TRANSACTION_pause
    static final int TRANSACTION_stop
    static final int TRANSACTION_next
    static final int TRANSACTION_previous
    static final int TRANSACTION_fastForward
    static final int TRANSACTION_rewind
    static final int TRANSACTION_seekTo
    static final int TRANSACTION_rate
    static final int TRANSACTION_rateWithExtras
    static final int TRANSACTION_setCaptioningEnabled
    static final int TRANSACTION_setRepeatMode
    static final int TRANSACTION_setShuffleModeEnabledRemoved
    static final int TRANSACTION_setShuffleMode
    static final int TRANSACTION_sendCustomAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3
androidx.appcompat.resources.R$dimen
androidx.viewpager.widget.PagerAdapter
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7
androidx.core.view.ViewCompat$5
    void frameworkSet(android.view.View,java.lang.Boolean)
    boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
    synthetic bridge void frameworkSet(android.view.View,java.lang.Object)
    synthetic bridge boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.core.text.ICUCompat
    private void <init>()
    private static final java.lang.String TAG
androidx.appcompat.widget.ToolbarWidgetWrapper
    private void ensureSpinner()
    public java.lang.CharSequence getSubtitle()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public int getVisibility()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public android.view.Menu getMenu()
    private android.widget.Spinner mSpinner
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.core.util.Pair
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21
    public void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
    private void requestExtraBinder()
    public final void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
    public final void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public java.util.List getQueue()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public int getShuffleMode()
    public long getFlags()
    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    public android.app.PendingIntent getSessionActivity()
    public void setVolumeTo(int,int)
    public void adjustVolume(int,int)
    public void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public boolean isSessionReady()
    public java.lang.String getPackageName()
    public java.lang.Object getMediaController()
    protected final java.lang.Object mControllerObj
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.coordinatorlayout.R$id
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
androidx.collection.CircularIntArray
com.android.billingclient.api.PriceChangeFlowParams
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
androidx.constraintlayout.solver.SolverVariable$1
com.google.android.material.bottomappbar.BottomAppBar$6
androidx.drawerlayout.R$layout
androidx.versionedparcelable.VersionedParcelStream$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.core.os.LocaleListCompatWrapper
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen
    private void <init>()
androidx.appcompat.resources.R$styleable
    private void <init>()
androidx.fragment.app.FragmentManager
    public static void enableDebugLogging(boolean)
    private void throwException(java.lang.RuntimeException)
    public static androidx.fragment.app.Fragment findFragment(android.view.View)
    private static androidx.fragment.app.Fragment findViewFragment(android.view.View)
    static androidx.fragment.app.FragmentManager findFragmentManager(android.view.View)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public boolean executePendingTransactions()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public void popBackStack(int,int)
    public boolean popBackStackImmediate(int,int)
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    public static final int POP_BACK_STACK_INCLUSIVE
androidx.core.provider.FontsContractCompat$Columns
com.google.android.material.circularreveal.cardview.CircularRevealCardView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.core.widget.ListPopupWindowCompat
androidx.loader.content.Loader
    public void <init>(android.content.Context)
    public void deliverResult(java.lang.Object)
    public void deliverCancellation()
    public android.content.Context getContext()
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public boolean isStarted()
    public boolean isAbandoned()
    public boolean isReset()
    protected void onStartLoading()
    protected boolean onCancelLoad()
    public void forceLoad()
    protected void onForceLoad()
    protected void onStopLoading()
    protected void onAbandon()
    protected void onReset()
    public boolean takeContentChanged()
    public void commitContentChanged()
    public void rollbackContentChanged()
    public void onContentChanged()
    public java.lang.String toString()
    int mId
    androidx.loader.content.Loader$OnLoadCompleteListener mListener
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
    android.content.Context mContext
    boolean mStarted
    boolean mAbandoned
    boolean mReset
    boolean mContentChanged
    boolean mProcessingChange
androidx.core.app.AlarmManagerCompat
com.android.billingclient.api.BillingClientImpl$17
androidx.lifecycle.ComputableLiveData$3
androidx.core.graphics.drawable.RoundedBitmapDrawable21
com.google.android.material.navigation.NavigationView
com.android.billingclient.api.BillingClientImpl$3
com.google.android.material.bottomsheet.BottomSheetDialog
androidx.lifecycle.ClassesInfoCache
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.constraintlayout.widget.ConstraintLayout
androidx.fragment.app.FragmentTransition
    static boolean supportsTransition()
    private void <init>()
androidx.transition.ChangeImageTransform$1
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
androidx.core.os.ParcelableCompat
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
androidx.appcompat.widget.AppCompatSeekBar
    public void <init>(android.content.Context)
androidx.loader.R$attr
c.jahhow.remotecontroller.SelectBluetoothDeviceFragment
    private static final short PERMISSION_REQUEST_CODE
androidx.print.PrintHelper
androidx.activity.R$id
androidx.core.os.BuildCompat
androidx.appcompat.widget.ActivityChooserView$Callbacks
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent
androidx.documentfile.provider.TreeDocumentFile
androidx.core.view.MarginLayoutParamsCompat
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
c.jahhow.remotecontroller.msg.Msg
androidx.viewpager.R
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5
androidx.media.MediaSessionManagerImplApi28
com.google.android.material.bottomnavigation.BottomNavigationMenuView
    private static final long ACTIVE_ANIMATION_DURATION_MS
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
androidx.localbroadcastmanager.content.LocalBroadcastManager
androidx.fragment.app.Fragment$SavedState$1
androidx.customview.R$string
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler)
androidx.media.MediaBrowserServiceCompat$4
com.google.android.material.animation.AnimatorSetCompat
    public void <init>()
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
com.google.android.material.R$interpolator
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
    private void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
    static synthetic void access$000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
androidx.core.text.BidiFormatter$DirectionalityEstimator
androidx.constraintlayout.solver.SolverVariable
androidx.legacy.coreutils.R$id
androidx.constraintlayout.widget.Constraints$LayoutParams
androidx.drawerlayout.R$dimen
com.google.android.material.appbar.CollapsingToolbarLayout
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26
androidx.recyclerview.widget.OrientationHelper
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
android.support.v4.media.MediaDescriptionCompatApi23$Builder
    private void <init>()
com.google.android.material.R$styleable
    private void <init>()
androidx.recyclerview.widget.MessageThreadUtil$2$1
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
androidx.legacy.app.ActionBarDrawerToggle$Delegate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
c.jahhow.remotecontroller.R$drawable
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
androidx.lifecycle.ViewModelProviders$DefaultFactory
android.support.v4.media.session.MediaSessionCompatApi21$Callback
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
androidx.core.widget.ListViewCompat
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
androidx.transition.Styleable$TransitionSet
androidx.core.R$dimen
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.core.view.ViewCompat$FocusRealDirection
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener
    public void <init>()
androidx.core.math.MathUtils
    private void <init>()
    public static double clamp(double,double,double)
androidx.core.os.TraceCompat
    private void <init>()
androidx.core.app.JobIntentService$GenericWorkItem
androidx.transition.ViewOverlayApi14$OverlayViewGroup
    public void clear()
    public void invalidateChildFast(android.view.View,android.graphics.Rect)
    protected android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect)
com.android.billingclient.api.BillingClientImpl$BillingServiceConnection
    final void markDisconnectedAndCleanUp()
androidx.core.app.ActivityCompat
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.appcompat.app.AlertController$AlertParams
    public boolean mForceInverseBackground
c.jahhow.remotecontroller.R$string
androidx.transition.ArcMotion
androidx.recyclerview.widget.StaggeredGridLayoutManager
    public void <init>(int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public void scrollToPosition(int)
    public void scrollToPositionWithOffset(int,int)
    public int getOrientation()
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
androidx.appcompat.widget.ActivityChooserModel
androidx.viewpager.widget.ViewPager$PagerObserver
androidx.customview.widget.FocusStrategy$CollectionAdapter
androidx.documentfile.R
androidx.coordinatorlayout.R$attr
    private void <init>()
androidx.core.util.ObjectsCompat
    private void <init>()
    public static int hashCode(java.lang.Object)
androidx.annotation.WorkerThread
com.android.billingclient.api.BillingClientImpl$PurchaseHistoryResult
com.google.android.material.snackbar.Snackbar$1
androidx.appcompat.R$layout
    private void <init>()
androidx.coordinatorlayout.R$integer
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28
androidx.media.MediaBrowserServiceCompatApi23
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring
androidx.constraintlayout.solver.widgets.ConstraintWidget$1
androidx.appcompat.widget.AppCompatSeekBarHelper
    android.graphics.drawable.Drawable getTickMark()
    void setTickMarkTintList(android.content.res.ColorStateList)
    android.content.res.ColorStateList getTickMarkTintList()
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    android.graphics.PorterDuff$Mode getTickMarkTintMode()
androidx.fragment.app.FragmentTabHost$SavedState$1
com.google.android.material.navigation.NavigationView$1
androidx.recyclerview.widget.RecyclerView$ViewFlinger
    public void smoothScrollBy(int,int)
    public void smoothScrollBy(int,int,int,int)
    public void smoothScrollBy(int,int,int)
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler
androidx.appcompat.widget.AppCompatCheckBox
    public void <init>(android.content.Context)
androidx.recyclerview.widget.RecyclerView$State
    androidx.recyclerview.widget.RecyclerView$State reset()
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
com.google.android.material.navigation.NavigationView$SavedState
androidx.annotation.DrawableRes
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
com.google.android.gms.internal.play_billing.zza
    public abstract int zzb(int,java.lang.String,java.lang.String)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract int zzb(int,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract android.os.Bundle zzb(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract android.os.Bundle zzc(int,java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.card.MaterialCardView
androidx.core.net.ConnectivityManagerCompat
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1
androidx.customview.R$styleable
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
c.jahhow.remotecontroller.R$style
androidx.cardview.R
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
    public abstract void prepareForDrop(android.view.View,android.view.View,int,int)
androidx.media.R$string
androidx.transition.TransitionManager
    public void <init>()
    private androidx.transition.Transition getTransition(androidx.transition.Scene)
    private static void changeScene(androidx.transition.Scene,androidx.transition.Transition)
    public static void go(androidx.transition.Scene)
    public static void go(androidx.transition.Scene,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup)
    public static void endTransitions(android.view.ViewGroup)
    public void setTransition(androidx.transition.Scene,androidx.transition.Transition)
    public void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition)
    public void transitionTo(androidx.transition.Scene)
    private androidx.collection.ArrayMap mSceneTransitions
    private androidx.collection.ArrayMap mScenePairTransitions
    private static final java.lang.String LOG_TAG
androidx.media.MediaBrowserCompatUtils
androidx.media.R$integer
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
com.android.billingclient.api.ProxyBillingActivity
    static final java.lang.String KEY_RESULT_RECEIVER
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.activity.R$integer
androidx.recyclerview.widget.ItemTouchHelper$2
com.google.android.material.textfield.IndicatorViewController
    private boolean isCaptionStateHelperText(int)
    boolean errorIsDisplayed()
    boolean helperTextIsDisplayed()
    boolean helperTextShouldBeShown()
    android.content.res.ColorStateList getHelperTextViewColors()
    private static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION
    private static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION
    static final int ERROR_INDEX
    static final int HELPER_INDEX
    static final int COUNTER_INDEX
    private static final int CAPTION_STATE_NONE
    private static final int CAPTION_STATE_ERROR
    private static final int CAPTION_STATE_HELPER_TEXT
com.google.android.material.internal.NavigationMenuItemView
    public void recycle()
    public void setShortcut(boolean,char)
    public boolean showsIcon()
androidx.appcompat.widget.PopupMenu$2
com.google.android.material.appbar.AppBarLayout$BaseBehavior
    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    boolean isOffsetAnimatorRunning()
    private static final int MAX_OFFSET_ANIMATION_DURATION
    private static final int INVALID_POSITION
androidx.appcompat.view.menu.MenuPresenter
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.transition.MatrixUtils
androidx.drawerlayout.R$integer
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
    public void onChanged()
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
androidx.core.content.SharedPreferencesCompat
com.google.android.material.bottomsheet.BottomSheetDialogFragment
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
androidx.lifecycle.MutableLiveData
    public void <init>(java.lang.Object)
    public void postValue(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
androidx.cardview.widget.CardView
    public void setContentPadding(int,int,int,int)
c.jahhow.remotecontroller.InputTextFragment
    private static final java.lang.String BundleKey_InputType
    private static final java.lang.String BundleKey_ShowingHelp
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
androidx.transition.Slide$CalculateSlideVertical
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.annotation.LongDef
com.google.android.material.R$anim
androidx.lifecycle.livedata.R
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
androidx.lifecycle.process.R
com.google.android.material.internal.DescendantOffsetUtils
    public void <init>()
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection
androidx.viewpager.widget.PagerTabStrip$2
androidx.core.app.ServiceCompat
androidx.appcompat.widget.ActionMenuPresenter
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public boolean isOverflowReserved()
    public void onSubUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
androidx.constraintlayout.solver.Metrics
androidx.constraintlayout.solver.widgets.ConstraintAnchor
com.google.android.material.circularreveal.CircularRevealHelper
    public void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate)
    private void invalidateRevealInfo()
    private float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    private void drawOverlayDrawable(android.graphics.Canvas)
    private boolean shouldDrawCircularReveal()
    private boolean shouldDrawScrim()
    private boolean shouldDrawOverlayDrawable()
    private void drawDebugMode(android.graphics.Canvas)
    private void drawDebugCircle(android.graphics.Canvas,int,float)
    private final com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate
    private final android.view.View view
    private final android.graphics.Path revealPath
    private final android.graphics.Paint revealPaint
    private final android.graphics.Paint scrimPaint
    private com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
    private android.graphics.drawable.Drawable overlayDrawable
    private android.graphics.Paint debugPaint
    private boolean buildingCircularRevealCache
    private boolean hasCircularRevealCache
    private static final boolean DEBUG
    public static final int BITMAP_SHADER
    public static final int CLIP_PATH
    public static final int REVEAL_ANIMATOR
androidx.loader.content.ModernAsyncTask$2
androidx.fragment.app.BackStackRecord
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public void commitNow()
    public boolean isEmpty()
    private static final java.lang.String TAG
androidx.loader.content.ModernAsyncTask$WorkerRunnable
c.jahhow.remotecontroller.R$layout
androidx.core.content.FileProvider
androidx.appcompat.R$string
    private void <init>()
androidx.media.AudioAttributesCompat$AudioManagerHidden
com.google.android.material.internal.NavigationSubMenu
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
com.android.billingclient.api.BillingClientImpl$16$1
com.google.android.material.R$attr
    private void <init>()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
    public int changeFlags
androidx.core.content.ContextCompat
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    public static java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
    public static java.io.File[] getExternalCacheDirs(android.content.Context)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.android.material.animation.MotionSpec
    public static com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int)
    private static final java.lang.String TAG
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4
androidx.core.widget.EdgeEffectCompat
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
    public int getStart()
    public int getEnd()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table
androidx.legacy.coreutils.R$color
androidx.fragment.app.DialogFragment$3
androidx.swiperefreshlayout.R$styleable
androidx.versionedparcelable.VersionedParcel$ParcelException
androidx.appcompat.widget.ShareActionProvider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    protected static final int FILL_TYPE_WINDING
androidx.core.app.NotificationCompat$Action$Builder
com.google.android.material.R$id
    private void <init>()
androidx.media.R$layout
androidx.appcompat.R$bool
    private void <init>()
android.support.v4.media.session.MediaSessionCompatApi23
android.support.v4.media.session.MediaSessionCompat$SessionFlags
androidx.core.os.UserManagerCompat
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData
    public void <init>(java.lang.Object)
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    protected void postValue(java.lang.Object)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.vectordrawable.R$integer
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
androidx.appcompat.view.menu.MenuPopupHelper
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
androidx.loader.R$layout
com.google.android.material.snackbar.BaseTransientBottomBar$3
androidx.legacy.coreui.R$dimen
com.google.android.material.internal.ViewUtils
    public void <init>()
androidx.appcompat.widget.TooltipCompat
    private void <init>()
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.FragmentManagerNonConfig
androidx.viewpager.widget.ViewPager$OnPageChangeListener
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.android.material.circularreveal.CircularRevealWidget
    public abstract void draw(android.graphics.Canvas)
    public abstract boolean isOpaque()
    public abstract android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.media.VolumeProviderCompat$1
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
androidx.core.view.MenuItemCompat
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.transition.GhostViewApi14
androidx.appcompat.app.ActionBar
    public abstract void setCustomView(android.view.View)
    public abstract void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public abstract void setCustomView(int)
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public abstract void setSelectedNavigationItem(int)
    public abstract int getSelectedNavigationIndex()
    public abstract int getNavigationItemCount()
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setTitle(int)
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void setSubtitle(int)
    public abstract void setDisplayOptions(int)
    public abstract void setDisplayOptions(int,int)
    public abstract void setDisplayUseLogoEnabled(boolean)
    public abstract void setDisplayShowHomeEnabled(boolean)
    public abstract void setDisplayHomeAsUpEnabled(boolean)
    public abstract void setDisplayShowTitleEnabled(boolean)
    public abstract void setDisplayShowCustomEnabled(boolean)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getTitle()
    public abstract java.lang.CharSequence getSubtitle()
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract androidx.appcompat.app.ActionBar$Tab newTab()
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public abstract void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void removeTabAt(int)
    public abstract void removeAllTabs()
    public abstract void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public abstract androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public abstract int getTabCount()
    public abstract int getHeight()
    public abstract void show()
    public abstract void hide()
    public abstract boolean isShowing()
    public abstract void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public abstract void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setHomeButtonEnabled(boolean)
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setHideOnContentScrollEnabled(boolean)
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public void setElevation(float)
    public float getElevation()
    boolean requestFocus()
    public static final int NAVIGATION_MODE_STANDARD
    public static final int NAVIGATION_MODE_LIST
    public static final int NAVIGATION_MODE_TABS
    public static final int DISPLAY_USE_LOGO
    public static final int DISPLAY_SHOW_HOME
    public static final int DISPLAY_HOME_AS_UP
    public static final int DISPLAY_SHOW_TITLE
    public static final int DISPLAY_SHOW_CUSTOM
android.support.v4.media.session.MediaSessionCompat$2
androidx.lifecycle.extensions.R$layout
androidx.transition.ChangeClipBounds
androidx.loader.content.Loader$OnLoadCompleteListener
    public abstract void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.asynclayoutinflater.view.AsyncLayoutInflater
androidx.transition.ChangeTransform$GhostListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
androidx.appcompat.widget.ResourceManagerInternal
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    private static boolean arrayContains(int[],int)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
androidx.lifecycle.Transformations
androidx.swiperefreshlayout.R$layout
androidx.customview.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21
androidx.recyclerview.widget.RecyclerView
    public boolean hasFixedSize()
    public void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void clearOnChildAttachStateChangeListeners()
    public androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
    public void removeItemDecorationAt(int)
    public void clearOnScrollListeners()
    public void scrollToPosition(int)
    void jumpToPositionForSmoothScroller(int)
    public void smoothScrollToPosition(int)
    public boolean isLayoutFrozen()
    void assertInLayoutOrScroll(java.lang.String)
    public boolean isAnimating()
    public void invalidateItemDecorations()
    public int getChildPosition(android.view.View)
    public int getChildAdapterPosition(android.view.View)
    public int getChildLayoutPosition(android.view.View)
    public long getChildItemId(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    public android.view.View findChildViewUnder(float,float)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    static final java.lang.String TAG
    static final boolean DEBUG
    static final boolean VERBOSE_TRACING
    static final boolean DISPATCH_TEMP_DETACH
    public static final int HORIZONTAL
    public static final int VERTICAL
    static final int DEFAULT_ORIENTATION
    public static final int NO_POSITION
    public static final long NO_ID
    public static final int INVALID_TYPE
    public static final int TOUCH_SLOP_DEFAULT
    public static final int TOUCH_SLOP_PAGING
    static final int MAX_SCROLL_DURATION
    static final java.lang.String TRACE_SCROLL_TAG
    private static final java.lang.String TRACE_ON_LAYOUT_TAG
    private static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    private static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
    static final java.lang.String TRACE_BIND_VIEW_TAG
    static final java.lang.String TRACE_PREFETCH_TAG
    static final java.lang.String TRACE_NESTED_PREFETCH_TAG
    static final java.lang.String TRACE_CREATE_VIEW_TAG
    private static final int INVALID_POINTER
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
    static final long FOREVER_NS
androidx.core.widget.AutoSizeableTextView
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.recyclerview.widget.MessageThreadUtil
com.google.android.material.snackbar.BaseTransientBottomBar$4
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
android.support.v4.media.session.IMediaSession$Stub$Proxy
    public java.lang.String getInterfaceDescriptor()
    public void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public boolean sendMediaButton(android.view.KeyEvent)
    public void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public boolean isTransportControlEnabled()
    public java.lang.String getPackageName()
    public java.lang.String getTag()
    public android.app.PendingIntent getLaunchPendingIntent()
    public long getFlags()
    public android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public void adjustVolume(int,int,java.lang.String)
    public void setVolumeTo(int,int,java.lang.String)
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public java.util.List getQueue()
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public boolean isShuffleModeEnabledRemoved()
    public int getShuffleMode()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void removeQueueItemAt(int)
    public void prepare()
    public void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public void prepareFromSearch(java.lang.String,android.os.Bundle)
    public void prepareFromUri(android.net.Uri,android.os.Bundle)
    public void play()
    public void playFromMediaId(java.lang.String,android.os.Bundle)
    public void playFromSearch(java.lang.String,android.os.Bundle)
    public void playFromUri(android.net.Uri,android.os.Bundle)
    public void skipToQueueItem(long)
    public void pause()
    public void stop()
    public void next()
    public void previous()
    public void fastForward()
    public void rewind()
    public void seekTo(long)
    public void rate(android.support.v4.media.RatingCompat)
    public void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleModeEnabledRemoved(boolean)
    public void setShuffleMode(int)
    public void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.cardview.R$dimen
    private void <init>()
com.android.billingclient.api.BillingClientImpl$12
androidx.core.app.TaskStackBuilder
    public static androidx.core.app.TaskStackBuilder from(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
    public int getIntentCount()
    public android.content.Intent getIntent(int)
    public android.content.Intent editIntentAt(int)
    public android.app.PendingIntent getPendingIntent(int,int)
    public android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
    public android.content.Intent[] getIntents()
    private static final java.lang.String TAG
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy
androidx.versionedparcelable.VersionedParcelStream
androidx.appcompat.app.AppCompatDelegate
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public static void setDefaultNightMode(int)
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static boolean isCompatVectorFromResourcesEnabled()
    private static void applyDayNightToActiveDelegates()
    public abstract void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public abstract boolean hasWindowFeature(int)
    public abstract androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public abstract android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public abstract void setHandleNativeActionModesEnabled(boolean)
    public abstract boolean isHandleNativeActionModesEnabled()
    public abstract boolean applyDayNight()
    public abstract void setLocalNightMode(int)
    static final java.lang.String TAG
    public static final int MODE_NIGHT_FOLLOW_SYSTEM
    public static final int MODE_NIGHT_AUTO_TIME
    public static final int MODE_NIGHT_AUTO
    public static final int MODE_NIGHT_NO
    public static final int MODE_NIGHT_YES
    public static final int MODE_NIGHT_AUTO_BATTERY
    public static final int MODE_NIGHT_UNSPECIFIED
    public static final int FEATURE_SUPPORT_ACTION_BAR
    public static final int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    public static final int FEATURE_ACTION_MODE_OVERLAY
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.view.menu.MenuHelper
    public abstract void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public abstract void dismiss()
androidx.recyclerview.widget.ViewBoundsCheck
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
androidx.slidingpanelayout.R$integer
androidx.recyclerview.widget.ItemTouchHelper$Callback
androidx.appcompat.widget.ListPopupWindow$1
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
androidx.recyclerview.R$integer
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo
    public void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public boolean isInvalid()
    public static final float INVALID_RADIUS
androidx.recyclerview.widget.TileList$Tile
androidx.viewpager.widget.ViewPager$4
androidx.slidingpanelayout.R$drawable
androidx.constraintlayout.solver.widgets.Guideline$1
androidx.constraintlayout.widget.Barrier
androidx.loader.R$dimen
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
com.google.android.material.tabs.TabLayout
com.android.billingclient.api.PurchaseHistoryRecord
androidx.appcompat.app.ActionBar$DisplayOptions
android.support.v4.media.MediaDescriptionCompatApi21
    private void <init>()
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
androidx.vectordrawable.animated.R$integer
com.google.android.material.bottomnavigation.BottomNavigationView
    public boolean isItemHorizontalTranslationEnabled()
    private static final int MENU_PRESENTER_ID
com.android.billingclient.api.BillingClientImpl$14$1
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
android.support.v4.media.session.MediaSessionCompat$Token
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
    public java.lang.Object getToken()
    public android.os.Bundle getSessionToken2Bundle()
    public android.os.Bundle toBundle()
androidx.media.MediaBrowserProtocol
com.google.android.material.bottomsheet.BottomSheetBehavior$State
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
androidx.annotation.RequiresFeature
androidx.constraintlayout.solver.ArrayRow
c.jahhow.remotecontroller.msg.InputTextMode
androidx.transition.ChangeBounds$9
    public void onTransitionCancel(androidx.transition.Transition)
android.support.v4.media.session.MediaControllerCompat$TransportControls
androidx.media.AudioAttributesCompat$Builder
androidx.core.os.ParcelCompat
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
androidx.swiperefreshlayout.R$integer
androidx.annotation.Px
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8
androidx.vectordrawable.R$color
androidx.core.R$id
    private void <init>()
androidx.appcompat.text.AllCapsTransformationMethod
androidx.fragment.app.BackStackState
    private static final java.lang.String TAG
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.provider.FontsContractCompat$4$8
androidx.core.content.PermissionChecker$PermissionResult
android.support.v4.media.MediaBrowserCompat$Subscription
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
androidx.customview.R$drawable
com.android.billingclient.api.BillingClientImpl$8
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
androidx.core.util.Supplier
androidx.core.view.WindowCompat
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
com.google.android.material.snackbar.BaseTransientBottomBar$8
android.support.v4.media.session.PlaybackStateCompat$CustomAction
    public java.lang.Object getCustomAction()
    public java.lang.String getAction()
    public java.lang.CharSequence getName()
    public int getIcon()
    public android.os.Bundle getExtras()
c.jahhow.remotecontroller.R$interpolator
androidx.vectordrawable.animated.R$attr
androidx.legacy.app.ActionBarDrawerToggle
androidx.recyclerview.R$styleable
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutParams
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
androidx.media.AudioAttributesImplApi21
    void <init>(android.media.AudioAttributes)
    void <init>(android.media.AudioAttributes,int)
    static java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod()
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getLegacyStreamType()
    public int getRawLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    static java.lang.reflect.Method sAudioAttributesToLegacyStreamType
androidx.fragment.R
androidx.annotation.StringRes
androidx.asynclayoutinflater.R
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase
com.google.android.material.chip.ChipGroup$OnCheckedChangeListener
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
androidx.appcompat.app.ActionBar$OnNavigationListener
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
com.google.android.material.snackbar.Snackbar$Callback
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.DragStartHelper$1
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
androidx.appcompat.app.ToolbarActionBar
    void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
    private android.view.Menu getMenu()
    public android.view.Window$Callback getWrappedWindowCallback()
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setCustomView(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setHomeButtonEnabled(boolean)
    public void setElevation(float)
    public float getElevation()
    public android.content.Context getThemedContext()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    public void setHomeActionContentDescription(int)
    public void setShowHideAnimationEnabled(boolean)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public void setSelectedNavigationItem(int)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public void setTitle(java.lang.CharSequence)
    public void setTitle(int)
    public void setWindowTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setSubtitle(int)
    public void setDisplayOptions(int)
    public void setDisplayOptions(int,int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public int getNavigationMode()
    public void setNavigationMode(int)
    public int getDisplayOptions()
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void removeAllTabs()
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public int getTabCount()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isShowing()
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean collapseActionView()
    void populateOptionsMenu()
    public boolean onMenuKeyEvent(android.view.KeyEvent)
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    void onDestroy()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void dispatchMenuVisibilityChanged(boolean)
    androidx.appcompat.widget.DecorToolbar mDecorToolbar
    boolean mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback
    private boolean mMenuCallbackSet
    private boolean mLastMenuVisibility
    private java.util.ArrayList mMenuVisibilityListeners
    private final java.lang.Runnable mMenuInvalidator
    private final androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
com.android.billingclient.api.RewardLoadParams$Builder
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.fragment.app.Fragment$SavedState
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
com.google.android.material.tabs.TabLayout$Mode
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
c.jahhow.remotecontroller.MotionAdjuster
    void <init>()
androidx.vectordrawable.R$id
androidx.appcompat.widget.SearchView
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
com.google.android.material.bottomappbar.BottomAppBar$5
androidx.transition.Styleable$Slide
androidx.core.app.NotificationCompat$InboxStyle
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor
androidx.transition.Slide$3
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.appcompat.resources.R$attr
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
androidx.customview.widget.FocusStrategy
androidx.appcompat.widget.ViewUtils
    private void <init>()
    private static final java.lang.String TAG
androidx.core.util.Preconditions
    public static void checkArgument(boolean)
    public static void checkArgument(boolean,java.lang.Object)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    private void <init>()
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2
android.support.v4.media.RatingCompat
    public static android.support.v4.media.RatingCompat newUnratedRating(int)
    public static android.support.v4.media.RatingCompat newHeartRating(boolean)
    public static android.support.v4.media.RatingCompat newThumbRating(boolean)
    public static android.support.v4.media.RatingCompat newStarRating(int,float)
    public static android.support.v4.media.RatingCompat newPercentageRating(float)
    public static android.support.v4.media.RatingCompat fromRating(java.lang.Object)
    public boolean isRated()
    public int getRatingStyle()
    public boolean hasHeart()
    public boolean isThumbUp()
    public float getStarRating()
    public float getPercentRating()
    public java.lang.Object getRating()
    private java.lang.Object mRatingObj
    private static final java.lang.String TAG
    public static final int RATING_NONE
    public static final int RATING_HEART
    public static final int RATING_THUMB_UP_DOWN
    public static final int RATING_3_STARS
    public static final int RATING_4_STARS
    public static final int RATING_5_STARS
    public static final int RATING_PERCENTAGE
    private static final float RATING_NOT_RATED
androidx.core.provider.FontsContractCompat$FontFamilyResult
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
androidx.slidingpanelayout.R$color
androidx.core.widget.CompoundButtonCompat
    private void <init>()
    public static android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
    public static android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
    private static final java.lang.String TAG
com.android.billingclient.api.BillingClientImpl$16
androidx.core.R$style
androidx.lifecycle.service.R
androidx.core.text.TextUtilsCompat
    public static java.lang.String htmlEncode(java.lang.String)
    private void <init>()
    private static final java.lang.String ARAB_SCRIPT_SUBTAG
    private static final java.lang.String HEBR_SCRIPT_SUBTAG
androidx.appcompat.resources.R$style
c.jahhow.remotecontroller.R$styleable
androidx.recyclerview.widget.LayoutState
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
android.support.v4.media.session.PlaybackStateCompat$Actions
androidx.core.app.NotificationCompat$Action$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter$1
com.google.android.material.bottomsheet.BottomSheetDialog$1
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7
androidx.viewpager.R$styleable
com.google.android.material.bottomappbar.BottomAppBar$FabAlignmentMode
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.activity.R$dimen
androidx.swiperefreshlayout.R$string
c.jahhow.remotecontroller.SwipeCardView
    public static final int IndicatorUp
    public static final int IndicatorRight
    public static final int IndicatorDown
    public static final int IndicatorLeft
androidx.asynclayoutinflater.R$dimen
com.google.android.material.drawable.DrawableUtils
androidx.media.MediaSessionManagerImplBase
androidx.core.view.ViewCompat$FocusDirection
com.google.android.material.math.MathUtils
    private void <init>()
    public static boolean geq(float,float,float)
    public static final float DEFAULT_EPSILON
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.activity.ComponentActivity
    public void <init>(int)
    public java.lang.Object getLastCustomNonConfigurationInstance()
androidx.versionedparcelable.ParcelImpl
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.annotation.StyleableRes
androidx.media.AudioAttributesCompat
    void <init>(androidx.media.AudioAttributesImpl)
    public static androidx.media.AudioAttributesCompat wrap(java.lang.Object)
    public static androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
    static int usageForStreamType(int)
    public static void setForceLegacyBehavior(boolean)
    static int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)
    public int getVolumeControlStream()
    public java.lang.Object unwrap()
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    int getRawLegacyStreamType()
    private static final java.lang.String TAG
    public static final int CONTENT_TYPE_UNKNOWN
    public static final int CONTENT_TYPE_SPEECH
    public static final int CONTENT_TYPE_MUSIC
    public static final int CONTENT_TYPE_MOVIE
    public static final int CONTENT_TYPE_SONIFICATION
    public static final int USAGE_UNKNOWN
    public static final int USAGE_MEDIA
    public static final int USAGE_VOICE_COMMUNICATION
    public static final int USAGE_VOICE_COMMUNICATION_SIGNALLING
    public static final int USAGE_ALARM
    public static final int USAGE_NOTIFICATION
    public static final int USAGE_NOTIFICATION_RINGTONE
    public static final int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
    public static final int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
    public static final int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
    public static final int USAGE_NOTIFICATION_EVENT
    public static final int USAGE_ASSISTANCE_ACCESSIBILITY
    public static final int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
    public static final int USAGE_ASSISTANCE_SONIFICATION
    public static final int USAGE_GAME
    private static final int USAGE_VIRTUAL_SOURCE
    public static final int USAGE_ASSISTANT
    private static final int SUPPRESSIBLE_NOTIFICATION
    private static final int SUPPRESSIBLE_CALL
    static boolean sForceLegacyBehavior
    public static final int FLAG_AUDIBILITY_ENFORCED
    static final int FLAG_SECURE
    static final int FLAG_SCO
    static final int FLAG_BEACON
    public static final int FLAG_HW_AV_SYNC
    static final int FLAG_HW_HOTWORD
    static final int FLAG_BYPASS_INTERRUPTION_POLICY
    static final int FLAG_BYPASS_MUTE
    static final int FLAG_LOW_LATENCY
    static final int FLAG_DEEP_BUFFER
    static final int FLAG_ALL
    static final int FLAG_ALL_PUBLIC
    static final int INVALID_STREAM_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FRAMEWORKS
    static final java.lang.String AUDIO_ATTRIBUTES_USAGE
    static final java.lang.String AUDIO_ATTRIBUTES_CONTENT_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FLAGS
    static final java.lang.String AUDIO_ATTRIBUTES_LEGACY_STREAM_TYPE
androidx.recyclerview.R$id
androidx.transition.R$color
androidx.core.provider.FontsContractCompat$4
androidx.transition.Visibility$Mode
androidx.appcompat.app.AppCompatDialog
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.constraintlayout.solver.LinearSystem
com.google.android.material.snackbar.SnackbarManager$Callback
    public abstract void show()
androidx.core.text.HtmlCompat
c.jahhow.remotecontroller.LoadingFragment
    private static final java.lang.String ARG_LOADING_TEXT
androidx.core.view.accessibility.AccessibilityRecordCompat
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
com.google.android.material.chip.Chip$ChipTouchHelper
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.slidingpanelayout.widget.SlidingPaneLayout
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
androidx.appcompat.app.ActionBar$Tab
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
androidx.core.view.animation.PathInterpolatorApi14
c.jahhow.remotecontroller.TouchDownUpDetector
androidx.fragment.app.FragmentActivity
    public void <init>(int)
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
androidx.annotation.FractionRes
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
androidx.core.provider.FontsContractCompat$4$4
androidx.localbroadcastmanager.content.LocalBroadcastManager$1
androidx.fragment.app.ListFragment$1
androidx.transition.Transition
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static int[] parseMatchOrder(java.lang.String)
    private static boolean isValidMatch(int)
    private static boolean alreadyContains(int[],int)
    private static java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)
    private java.util.ArrayList excludeId(java.util.ArrayList,int,boolean)
    private java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean)
    private java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean)
    public varargs void setMatchOrder(int[])
    public androidx.transition.Transition addTarget(int)
    public androidx.transition.Transition addTarget(java.lang.String)
    public androidx.transition.Transition addTarget(java.lang.Class)
    public androidx.transition.Transition removeTarget(int)
    public androidx.transition.Transition removeTarget(java.lang.String)
    public androidx.transition.Transition removeTarget(java.lang.Class)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeChildren(android.view.View,boolean)
    public androidx.transition.Transition excludeChildren(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.Transition excludeChildren(java.lang.Class,boolean)
    void forceToEnd(android.view.ViewGroup)
    protected void cancel()
    public android.graphics.Rect getEpicenter()
    androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    private static final java.lang.String LOG_TAG
    static final boolean DBG
    public static final int MATCH_INSTANCE
    private static final int MATCH_FIRST
    public static final int MATCH_NAME
    public static final int MATCH_ID
    public static final int MATCH_ITEM_ID
    private static final int MATCH_LAST
    private static final java.lang.String MATCH_INSTANCE_STR
    private static final java.lang.String MATCH_NAME_STR
    private static final java.lang.String MATCH_ID_STR
    private static final java.lang.String MATCH_ITEM_ID_STR
androidx.core.app.NotificationManagerCompat$SideChannelManager
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy
androidx.annotation.FloatRange
com.google.android.material.R
androidx.swiperefreshlayout.R$color
androidx.recyclerview.widget.SnapHelper$2
androidx.media.VolumeProviderCompatApi21$Delegate
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
    public void clearMenuPresenters()
    android.os.Parcelable onSaveInstanceState()
    void onRestoreInstanceState(android.os.Parcelable)
    void applyFrozenState()
    boolean wasLastOpen
    android.os.Bundle frozenMenuState
androidx.core.app.DialogCompat
androidx.core.view.MenuItemCompat$1
androidx.media.R$color
androidx.transition.TransitionUtils
    private void <init>()
    private static final int MAX_IMAGE_SIZE
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot
androidx.core.view.ViewPropertyAnimatorCompat
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public android.view.animation.Interpolator getInterpolator()
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    static final int LISTENER_TAG_ID
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1
com.google.android.material.snackbar.ContentViewCallback
    public abstract void animateContentIn(int,int)
    public abstract void animateContentOut(int,int)
androidx.core.content.res.ComplexColorCompat
    private static final java.lang.String LOG_TAG
android.support.v4.media.MediaBrowserCompat$ItemReceiver
    void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler)
androidx.fragment.app.FragmentTabHost
androidx.media.R$id
androidx.transition.Transition$TransitionListener
    public abstract void onTransitionCancel(androidx.transition.Transition)
androidx.core.view.ViewCompat$4
    void frameworkSet(android.view.View,java.lang.CharSequence)
    boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
    synthetic bridge void frameworkSet(android.view.View,java.lang.Object)
    synthetic bridge boolean shouldUpdate(java.lang.Object,java.lang.Object)
com.google.android.material.chip.ChipGroup$CheckedStateTracker
androidx.appcompat.widget.Toolbar
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean isTitleTruncated()
    public void setContentInsetsAbsolute(int,int)
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    private static final java.lang.String TAG
androidx.constraintlayout.solver.SolverVariable$Type
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread
com.google.android.material.internal.TextScale
    private static final java.lang.String PROPNAME_SCALE
androidx.appcompat.widget.AppCompatCheckedTextView
    public void <init>(android.content.Context)
androidx.legacy.content.WakefulBroadcastReceiver
androidx.viewpager.widget.ViewPager$ViewPositionComparator
androidx.recyclerview.widget.ItemTouchUIUtilImpl
androidx.core.content.pm.PackageInfoCompat
android.support.v4.media.session.MediaSessionCompatApi23$Callback
androidx.transition.ViewOverlayApi14
    private void <init>()
    android.view.ViewGroup getOverlayView()
    public void clear()
    boolean isEmpty()
c.jahhow.remotecontroller.MainActivity
    static final java.lang.String name_CommonSharedPrefer
    static final java.lang.String KeyPrefer_IP
    static final java.lang.String KeyPrefer_Port
    static final java.lang.String KeyPrefer_Controller
    static final java.lang.String KeyPrefer_SwipeDemo
    static final java.lang.String KeyPrefer_Swiped
    static final java.lang.String KeyPrefer_InputText
    static final java.lang.String KeyPrefer_VibrateOnDown
    static final java.lang.String KeyPrefer_ShowHelpButton
    static final java.lang.String KeyPrefer_ShowHelpOnCreate
    static final java.lang.String KeyPrefer_ShowHelpInputText
    static final java.lang.String KeyPrefer_ShowTcpIpGuide
    static final java.lang.String KeyPrefer_Connector
    private static final java.lang.String JahhowAppWebsite
    private static final java.lang.String SendTextEncode
android.support.v4.media.session.MediaControllerCompatApi23
androidx.fragment.app.FragmentManagerViewModel
    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
    private static final java.lang.String TAG
androidx.customview.widget.ExploreByTouchHelper
androidx.annotation.CheckResult
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2
androidx.core.graphics.drawable.WrappedDrawableApi21
    private static final java.lang.String TAG
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
com.google.android.material.resources.TextAppearanceConfig
androidx.core.app.NotificationCompat$Action
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.appcompat.R$style
    private void <init>()
androidx.recyclerview.widget.AsyncDifferConfig
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1
com.google.android.material.expandable.ExpandableWidget
    public abstract boolean setExpanded(boolean)
androidx.appcompat.widget.AppCompatHintHelper
    private void <init>()
androidx.core.content.res.ConfigurationHelper
com.android.billingclient.api.PriceChangeConfirmationListener
c.jahhow.remotecontroller.AirMouseLayout
    private static final float expSmoothTimeConstant
androidx.appcompat.resources.R$id
androidx.transition.AnimatorUtils
    private void <init>()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
    public int getRow()
    public int getColumn()
com.android.billingclient.BuildConfig
androidx.constraintlayout.widget.R$styleable
c.jahhow.remotecontroller.R$bool
androidx.recyclerview.widget.RecyclerView$LayoutManager
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public void postOnAnimation(java.lang.Runnable)
    public void scrollToPosition(int)
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public int getItemCount()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
    void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
    protected void onBoundsChange(android.graphics.Rect)
androidx.recyclerview.R
androidx.viewpager.widget.ViewPager
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
androidx.lifecycle.SavedStateHandleController
    static final java.lang.String TAG_SAVED_STATE_HANDLE_CONTROLLER
androidx.customview.R$id
androidx.appcompat.widget.SwitchCompat$1
com.google.android.material.internal.ScrimInsetsFrameLayout
androidx.vectordrawable.graphics.drawable.Animatable2Compat
    public abstract void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract void clearAnimationCallbacks()
androidx.core.view.ViewCompat$FocusRelativeDirection
androidx.core.app.FrameMetricsAggregator
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy
androidx.fragment.R$drawable
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr
androidx.media.R
androidx.constraintlayout.solver.widgets.Rectangle
com.google.android.material.chip.Chip
androidx.viewpager.R$layout
androidx.legacy.coreutils.R
androidx.appcompat.R$anim
androidx.transition.ChangeTransform$PathAnimatorMatrix
com.google.android.material.appbar.AppBarLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public boolean setLiftable(boolean)
    public boolean setLifted(boolean)
    androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    static final int PENDING_ACTION_NONE
    static final int PENDING_ACTION_EXPANDED
    static final int PENDING_ACTION_COLLAPSED
    static final int PENDING_ACTION_ANIMATE_ENABLED
    static final int PENDING_ACTION_FORCE
    private static final int INVALID_SCROLL_RANGE
androidx.appcompat.widget.PopupMenu$3
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
androidx.versionedparcelable.VersionedParcel$1
androidx.customview.widget.ExploreByTouchHelper$2
androidx.viewpager.R$string
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
androidx.core.app.ActivityRecreator
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.tabs.TabLayout$AdapterChangeListener
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder
androidx.transition.ChangeTransform$Transforms
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
androidx.versionedparcelable.NonParcelField
androidx.fragment.app.FragmentPagerAdapter
androidx.core.view.GravityCompat
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.legacy.coreui.R$styleable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1
androidx.recyclerview.widget.ScrollbarHelper
    private void <init>()
androidx.legacy.coreutils.R$style
androidx.annotation.IntegerRes
androidx.annotation.InspectableProperty$ValueType
android.support.v4.media.MediaMetadataCompat$RatingKey
androidx.core.R
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
    public int getColumnIndex()
    public int getColumnSpan()
    public int getRowIndex()
    public int getRowSpan()
    public boolean isHeading()
    public boolean isSelected()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
    public int getPlaybackType()
    public int getAudioStream()
    public int getVolumeControl()
    public int getMaxVolume()
    public int getCurrentVolume()
    public static final int PLAYBACK_TYPE_LOCAL
    public static final int PLAYBACK_TYPE_REMOTE
androidx.lifecycle.ServiceLifecycleDispatcher
androidx.swiperefreshlayout.R$dimen
androidx.transition.ChangeImageTransform$2
androidx.core.view.ViewPropertyAnimatorListenerAdapter
    public void onAnimationEnd(android.view.View)
androidx.constraintlayout.widget.R
androidx.transition.PropertyValuesHolderUtils
    private void <init>()
androidx.transition.ChangeTransform
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
com.google.android.material.internal.Experimental
androidx.core.app.NotificationManagerCompat$NotifyTask
androidx.core.content.pm.ShortcutInfoCompat
androidx.asynclayoutinflater.R$attr
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
    public static void setTag(android.view.View,java.lang.Object)
    public static java.lang.Object getTag(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4
androidx.constraintlayout.widget.Guideline
androidx.core.view.NestedScrollingParent
    public abstract int getNestedScrollAxes()
com.android.billingclient.api.BillingClient$BillingResponseCode
androidx.lifecycle.viewmodel.savedstate.R
androidx.core.app.NotificationCompat$Extender
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style
    private void <init>()
com.google.android.material.chip.ChipGroup$LayoutParams
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1
androidx.core.graphics.TypefaceCompatApi24Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup
    private static final int MIN_SIZE
androidx.core.provider.FontsContractCompat$4$1
androidx.viewpager.R$dimen
androidx.transition.ViewOverlayApi18
    public void clear()
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.appcompat.widget.DropDownListView
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.appcompat.widget.MenuPopupWindow
    private static final java.lang.String TAG
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.loader.content.ModernAsyncTask
androidx.coordinatorlayout.widget.CoordinatorLayout
    public boolean doViewsOverlap(android.view.View,android.view.View)
    static final java.lang.String TAG
    private static final int TYPE_ON_INTERCEPT
    private static final int TYPE_ON_TOUCH
    static final int EVENT_PRE_DRAW
    static final int EVENT_NESTED_SCROLL
    static final int EVENT_VIEW_REMOVED
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
androidx.swiperefreshlayout.widget.CircleImageView
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable
androidx.swiperefreshlayout.R$attr
androidx.transition.Styleable
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
    public abstract void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
    public abstract void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    public abstract boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    public abstract android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    public abstract android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public abstract android.support.v4.media.MediaMetadataCompat getMetadata()
    public abstract java.util.List getQueue()
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
    public abstract void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract java.lang.CharSequence getQueueTitle()
    public abstract android.os.Bundle getExtras()
    public abstract int getRatingType()
    public abstract boolean isCaptioningEnabled()
    public abstract int getRepeatMode()
    public abstract int getShuffleMode()
    public abstract long getFlags()
    public abstract android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    public abstract android.app.PendingIntent getSessionActivity()
    public abstract void setVolumeTo(int,int)
    public abstract void adjustVolume(int,int)
    public abstract void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public abstract boolean isSessionReady()
    public abstract java.lang.String getPackageName()
    public abstract java.lang.Object getMediaController()
androidx.transition.Styleable$ChangeBounds
androidx.transition.R$integer
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate
androidx.fragment.R$integer
com.google.android.material.R$animator
    private void <init>()
androidx.appcompat.R$attr
    private void <init>()
androidx.appcompat.view.menu.ListMenuItemView
    public boolean showsIcon()
    private static final java.lang.String TAG
androidx.appcompat.view.menu.MenuPopup
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.google.android.material.shape.CornerTreatment
androidx.legacy.coreui.R$style
com.google.android.gms.internal.play_billing.zzb
    public final int zzb(int,java.lang.String,java.lang.String)
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public final int zzb(int,java.lang.String,java.lang.String,android.os.Bundle)
    public final android.os.Bundle zzb(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public final android.os.Bundle zzc(int,java.lang.String,java.lang.String,android.os.Bundle)
androidx.transition.ObjectAnimatorUtils
    private void <init>()
androidx.loader.R
androidx.viewpager.widget.ViewPager$DecorView
androidx.appcompat.resources.R$drawable
    private void <init>()
androidx.core.graphics.drawable.DrawableCompat
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    private void <init>()
    private static final java.lang.String TAG
androidx.cardview.widget.CardViewImpl
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
androidx.legacy.coreutils.R$styleable
androidx.viewpager.R$id
com.google.android.material.snackbar.BaseTransientBottomBar$Duration
com.google.android.material.appbar.AppBarLayout$1
com.google.android.material.floatingactionbutton.FloatingActionButton
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void show()
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void hide()
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public boolean setExpanded(boolean)
    public boolean isOrWillBeHidden()
    public void clearCustomSize()
    private int borderWidth
    private static final java.lang.String LOG_TAG
    private static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY
    public static final int SIZE_MINI
    public static final int SIZE_NORMAL
    public static final int SIZE_AUTO
    public static final int NO_CUSTOM_SIZE
    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
androidx.legacy.v4.R
androidx.constraintlayout.solver.widgets.Guideline
androidx.media.AudioAttributesCompat$AttributeUsage
androidx.cursoradapter.R
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
androidx.recyclerview.widget.ItemTouchHelper$1
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
androidx.viewpager.R$attr
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
com.google.android.material.tabs.TabLayout$Tab
com.google.android.material.navigation.NavigationView$SavedState$1
androidx.legacy.coreutils.R$layout
androidx.core.provider.FontsContractCompat
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    private static void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
com.google.android.material.bottomnavigation.BottomNavigationPresenter
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.content.FileProvider$SimplePathStrategy
androidx.lifecycle.Transformations$1
androidx.media.VolumeProviderCompat
c.jahhow.remotecontroller.R$animator
androidx.constraintlayout.widget.ConstraintSet$1
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26
androidx.core.util.TimeUtils
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
androidx.core.app.AppOpsManagerCompat
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
androidx.legacy.coreutils.R$string
com.google.android.material.R$dimen
    private void <init>()
androidx.activity.R$layout
androidx.recyclerview.widget.LinearLayoutManager
    public void <init>(android.content.Context)
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public void scrollToPosition(int)
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public boolean isSmoothScrollbarEnabled()
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
com.google.android.material.resources.TextAppearance$1
androidx.appcompat.widget.DecorContentParent
    public abstract java.lang.CharSequence getTitle()
    public abstract void setUiOptions(int)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void saveToolbarHierarchyState(android.util.SparseArray)
    public abstract void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.legacy.v4.R$attr
androidx.viewpager.R$style
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.core.widget.AutoScrollHelper
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase
androidx.media.MediaBrowserServiceCompat$Result
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
androidx.core.text.util.FindAddress$ZipRange
androidx.transition.FragmentTransitionSupport$1
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup
    public abstract int getHorizontalOriginalOffset()
androidx.swiperefreshlayout.R$style
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment
    public void <init>(float,float,float)
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
    private float roundedCornerRadius
    private float fabMargin
    private float fabDiameter
    private float cradleVerticalOffset
    private float horizontalOffset
    private static final int ARC_QUARTER
    private static final int ARC_HALF
    private static final int ANGLE_UP
    private static final int ANGLE_LEFT
androidx.media.MediaBrowserServiceCompatApi26
c.jahhow.remotecontroller.TouchPadView$DownEventList
    static final int NOT_FOUND
android.support.v4.media.session.MediaSessionCompatApi22
com.google.android.material.button.MaterialButton
    public void <init>(android.content.Context)
    public static final int ICON_GRAVITY_START
    public static final int ICON_GRAVITY_TEXT_START
    private static final java.lang.String LOG_TAG
androidx.appcompat.app.ToolbarActionBar$2
androidx.transition.Explode
android.support.v4.media.session.ParcelableVolumeInfo
    public void <init>(int,int,int,int,int)
androidx.transition.Visibility
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getMode()
    public boolean isVisible(androidx.transition.TransitionValues)
    static final java.lang.String PROPNAME_VISIBILITY
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_SCREEN_LOCATION
    public static final int MODE_IN
    public static final int MODE_OUT
com.google.android.material.tabs.TabItem
androidx.transition.ImageViewUtils$1
android.support.v4.media.MediaBrowserCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
androidx.constraintlayout.solver.LinearSystem$Row
androidx.recyclerview.widget.RecyclerView$Orientation
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge int getTopAndBottomOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
    public synthetic bridge boolean setTopAndBottomOffset(int)
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
    public void <init>(android.content.Context)
androidx.transition.SidePropagation
androidx.transition.MatrixUtils$1
androidx.loader.content.ModernAsyncTask$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.appcompat.widget.Toolbar$SavedState
    public void <init>(android.os.Parcel)
androidx.annotation.NavigationRes
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24
androidx.media.MediaBrowserServiceCompat
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState
    public void <init>(android.os.Parcel)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    private java.util.List extrasCharSequenceList(java.lang.String)
    private boolean getBooleanProperty(int)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public int getChildCount()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public void addChild(android.view.View,int)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void setBoundsInParent(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public void setFocusable(boolean)
    public void setFocused(boolean)
    public boolean isVisibleToUser()
    public void setVisibleToUser(boolean)
    public boolean isAccessibilityFocused()
    public void setAccessibilityFocused(boolean)
    public void setSelected(boolean)
    public void setClickable(boolean)
    public void setLongClickable(boolean)
    public void setEnabled(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setPackageName(java.lang.CharSequence)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public java.util.List getActionList()
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public int getInputType()
    public void setInputType(int)
    public void setMaxTextLength(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public void setDismissable(boolean)
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public boolean isShowingHintText()
    public boolean isHeading()
    public boolean isTextEntryKey()
    public void setTextEntryKey(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final java.lang.String SPANS_ID_KEY
    private static final java.lang.String SPANS_START_KEY
    private static final java.lang.String SPANS_END_KEY
    private static final java.lang.String SPANS_FLAGS_KEY
    private static final java.lang.String SPANS_ACTION_ID_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.view.menu.MenuView
    public abstract int getWindowAnimations()
com.google.android.material.shape.MaterialShapeDrawable
    public void <init>()
    public void <init>(com.google.android.material.shape.ShapePathModel)
    private static int modulateAlpha(int,int)
    private void setCornerPathAndTransform(int,int,int)
    private void setEdgeTransform(int,int,int)
    private void appendCornerPath(int,android.graphics.Path)
    private void appendEdgePath(int,android.graphics.Path)
    private com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int)
    private com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int)
    private void getCoordinatesOfCorner(int,int,int,android.graphics.PointF)
    private float angleOfCorner(int,int,int)
    private float angleOfEdge(int,int,int)
    private void getPath(int,int,android.graphics.Path)
    private void updateTintFilter()
    public com.google.android.material.shape.ShapePathModel getShapedViewModel()
    public void setShapedViewModel(com.google.android.material.shape.ShapePathModel)
    public void setTintList(android.content.res.ColorStateList)
    public void setTintMode(android.graphics.PorterDuff$Mode)
    public void setTint(int)
    public int getOpacity()
    public void setAlpha(int)
    public void setColorFilter(android.graphics.ColorFilter)
    public android.graphics.Region getTransparentRegion()
    public boolean isPointInTransparentRegion(int,int)
    public boolean isShadowEnabled()
    public void setShadowEnabled(boolean)
    public float getInterpolation()
    public int getShadowElevation()
    public void setShadowElevation(int)
    public int getShadowRadius()
    public void setShadowRadius(int)
    public float getScale()
    public void setScale(float)
    public void setUseTintColorForShadow(boolean)
    public void setShadowColor(int)
    public android.graphics.Paint$Style getPaintStyle()
    public void setPaintStyle(android.graphics.Paint$Style)
    public float getStrokeWidth()
    public void setStrokeWidth(float)
    public void draw(android.graphics.Canvas)
    public void getPathForSize(int,int,android.graphics.Path)
    private final android.graphics.Paint paint
    private final android.graphics.Matrix[] cornerTransforms
    private final android.graphics.Matrix[] edgeTransforms
    private final com.google.android.material.shape.ShapePath[] cornerPaths
    private final android.graphics.Matrix matrix
    private final android.graphics.Path path
    private final android.graphics.PointF pointF
    private final com.google.android.material.shape.ShapePath shapePath
    private final android.graphics.Region transparentRegion
    private final android.graphics.Region scratchRegion
    private final float[] scratch
    private final float[] scratch2
    private com.google.android.material.shape.ShapePathModel shapedViewModel
    private boolean shadowEnabled
    private boolean useTintColorForShadow
    private float interpolation
    private int shadowColor
    private int shadowElevation
    private int shadowRadius
    private int alpha
    private float scale
    private float strokeWidth
    private android.graphics.Paint$Style paintStyle
    private android.graphics.PorterDuffColorFilter tintFilter
    private android.graphics.PorterDuff$Mode tintMode
    private android.content.res.ColorStateList tintList
androidx.appcompat.widget.SuggestionsAdapter
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
androidx.recyclerview.widget.RecyclerView$ItemAnimator
    public void setMoveDuration(long)
    public void setAddDuration(long)
    public void setRemoveDuration(long)
    public void setChangeDuration(long)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5
androidx.constraintlayout.solver.widgets.Chain
androidx.core.internal.view.SupportMenu
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.google.android.material.internal.ParcelableSparseArray
com.google.android.material.textfield.TextInputLayout
    public void setBoxCornerRadiiResources(int,int,int,int)
    public void setBoxCornerRadii(float,float,float,float)
    public boolean isHintEnabled()
    public boolean isErrorEnabled()
    public boolean isCounterEnabled()
    public boolean isHintAnimationEnabled()
    public boolean isPasswordVisibilityToggleEnabled()
    boolean cutoutIsOpen()
    final boolean isHintExpanded()
    final boolean isHelperTextDisplayed()
    private static final int LABEL_SCALE_ANIMATION_DURATION
    private static final int INVALID_MAX_LENGTH
    private static final java.lang.String LOG_TAG
    public static final int BOX_BACKGROUND_NONE
    public static final int BOX_BACKGROUND_FILLED
    public static final int BOX_BACKGROUND_OUTLINE
com.google.android.material.internal.CircularBorderDrawable$CircularBorderState
com.android.billingclient.api.BillingClient$UnderAgeOfConsent
androidx.transition.VisibilityPropagation
androidx.core.view.WindowInsetsCompat
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.TooltipPopup
    private static final java.lang.String TAG
androidx.fragment.app.FragmentStore
    int getActiveFragmentCount()
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatActivity
    public void <init>(int)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean supportRequestWindowFeature(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public void setSupportProgressBarVisibility(boolean)
    public void setSupportProgressBarIndeterminateVisibility(boolean)
    public void setSupportProgressBarIndeterminate(boolean)
    public void setSupportProgress(int)
    public androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.core.view.LayoutInflaterFactory
androidx.recyclerview.widget.SnapHelper$1
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
    static final int FLAG_DISAPPEARED
    static final int FLAG_APPEAR
    static final int FLAG_PRE
    static final int FLAG_POST
    static final int FLAG_APPEAR_AND_DISAPPEAR
    static final int FLAG_PRE_AND_POST
    static final int FLAG_APPEAR_PRE_AND_POST
androidx.transition.ChangeClipBounds$1
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
    public void setSpanIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    int findReferenceIndexFromCache(int)
android.support.v4.media.session.MediaControllerCompat
c.jahhow.remotecontroller.R
com.android.billingclient.api.BillingClientImpl$24
androidx.appcompat.widget.AppCompatRatingBar
    public void <init>(android.content.Context)
androidx.recyclerview.widget.FastScroller
    public boolean isDragging()
    boolean isVisible()
    boolean isHidden()
    public void hide()
    android.graphics.drawable.Drawable getHorizontalTrackDrawable()
    android.graphics.drawable.Drawable getHorizontalThumbDrawable()
    android.graphics.drawable.Drawable getVerticalTrackDrawable()
    android.graphics.drawable.Drawable getVerticalThumbDrawable()
    private static final int STATE_HIDDEN
    private static final int STATE_VISIBLE
    private static final int STATE_DRAGGING
    private static final int DRAG_NONE
    private static final int DRAG_X
    private static final int DRAG_Y
    private static final int ANIMATION_STATE_OUT
    private static final int ANIMATION_STATE_FADING_IN
    private static final int ANIMATION_STATE_IN
    private static final int ANIMATION_STATE_FADING_OUT
    private static final int SHOW_DURATION_MS
    private static final int HIDE_DELAY_AFTER_VISIBLE_MS
    private static final int HIDE_DELAY_AFTER_DRAGGING_MS
    private static final int HIDE_DURATION_MS
    private static final int SCROLLBAR_FULL_OPAQUE
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
androidx.legacy.coreutils.R$dimen
androidx.appcompat.widget.AppCompatSpinner$DialogPopup
    public int getHorizontalOriginalOffset()
androidx.core.R$drawable
androidx.print.PrintHelper$OnPrintFinishCallback
androidx.core.text.BidiFormatter
androidx.core.view.inputmethod.InputConnectionCompat$1
androidx.print.PrintHelper$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1
androidx.loader.content.AsyncTaskLoader
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.recyclerview.widget.DiffUtil$Snake
com.google.android.material.chip.Chip$2
android.support.v4.media.session.PlaybackStateCompatApi22
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
    private void <init>()
androidx.constraintlayout.widget.ConstraintSet$Constraint
androidx.print.PrintHelper$PrintUriAdapter
androidx.transition.TranslationAnimationCreator$TransitionPositionListener
com.google.android.material.bottomnavigation.BottomNavigationItemView
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    public static final int INVALID_ITEM_POSITION
androidx.core.provider.FontRequest
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback
androidx.fragment.R$id
    private void <init>()
androidx.recyclerview.R$color
androidx.media.MediaSessionManager$RemoteUserInfo
androidx.core.graphics.TypefaceCompatApi28Impl
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy
androidx.activity.R$string
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
android.support.v4.media.MediaBrowserCompat$ItemCallback
    public void <init>()
    final java.lang.Object mItemCallbackObj
androidx.recyclerview.widget.ItemTouchHelper
com.google.android.material.tabs.TabLayout$1
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
android.support.v4.media.session.MediaSessionCompat$3
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
com.android.billingclient.api.BillingClient$FeatureType
androidx.loader.app.LoaderManagerImpl$LoaderInfo
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
    public void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop
    void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    com.google.android.material.internal.CircularBorderDrawable newCircularDrawable()
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape()
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
androidx.transition.FragmentTransitionSupport$2
    public void onTransitionCancel(androidx.transition.Transition)
androidx.recyclerview.widget.ItemTouchHelper$5
androidx.core.app.NotificationCompat$Builder
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
com.google.android.material.transformation.FabTransformationScrimBehavior
    public static final long EXPAND_DELAY
    public static final long EXPAND_DURATION
    public static final long COLLAPSE_DELAY
    public static final long COLLAPSE_DURATION
com.google.android.material.snackbar.BaseTransientBottomBar$5
androidx.localbroadcastmanager.R
com.google.android.material.internal.CircularBorderDrawableLollipop
com.google.android.material.R$integer
    private void <init>()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB
    public void refreshVisibility()
androidx.core.graphics.TypefaceCompatApi21Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.versionedparcelable.VersionedParcelize
androidx.transition.ViewOverlayApi14$OverlayViewGroup$TouchInterceptor
androidx.appcompat.widget.AppCompatDrawableManager
    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.transition.TransitionUtils$MatrixEvaluator
androidx.recyclerview.widget.ChildHelper
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.DividerItemDecoration
com.android.billingclient.api.BillingClientImpl$9
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction
    public static java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
    private void <init>()
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback
androidx.swiperefreshlayout.widget.CircularProgressDrawable
com.google.android.material.tabs.TabLayout$TabGravity
androidx.loader.content.ModernAsyncTask$Status
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.view.ViewCompat
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static boolean isImportantForAutofill(android.view.View)
    public static androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)
    static androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    public static int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static int getAvailableActionIdFromResources(android.view.View)
    public static void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public static void removeAccessibilityAction(android.view.View,int)
    private static void removeActionWithId(int,android.view.View)
    private static java.util.List getActionList(android.view.View)
    public static void enableAccessibleClickableSpanSupport(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static void setZ(android.view.View,float)
    public static void setScrollIndicators(android.view.View,int)
    public static int getScrollIndicators(android.view.View)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    public static void setScreenReaderFocusable(android.view.View,boolean)
    public static void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
    public static void setAccessibilityHeading(android.view.View,boolean)
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
com.google.android.material.shape.ShapePath$PathQuadOperation
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
androidx.lifecycle.ViewModelProvider
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
androidx.vectordrawable.animated.R$string
androidx.core.os.CancellationSignal
    public void throwIfCanceled()
    public java.lang.Object getCancellationSignalObject()
androidx.swiperefreshlayout.R$drawable
androidx.core.app.NotificationCompat$BadgeIconType
android.support.v4.media.MediaBrowserCompatApi21
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
androidx.recyclerview.widget.RecyclerView$SmoothScroller
    public void <init>()
    void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public android.graphics.PointF computeScrollVectorForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public int getChildPosition(android.view.View)
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void instantScrollToPosition(int)
    protected void normalize(android.graphics.PointF)
    protected abstract void onStart()
    protected abstract void onStop()
    protected abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    protected abstract void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    private int mTargetPosition
    private androidx.recyclerview.widget.RecyclerView mRecyclerView
    private androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
    private boolean mPendingInitialRun
    private boolean mRunning
    private android.view.View mTargetView
    private final androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction
    private boolean mStarted
com.android.billingclient.api.BillingClientImpl$8$1
androidx.loader.app.LoaderManagerImpl
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
androidx.loader.app.LoaderManager
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
androidx.appcompat.widget.Toolbar$LayoutParams
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
com.google.android.material.shape.TriangleEdgeTreatment
androidx.transition.Fade
    public void <init>()
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String PROPNAME_TRANSITION_ALPHA
    private static final java.lang.String LOG_TAG
    public static final int IN
    public static final int OUT
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.loader.R$integer
androidx.recyclerview.widget.AsyncListDiffer
androidx.core.graphics.TypefaceCompatApi26Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
androidx.core.view.DragStartHelper$2
android.support.v4.os.IResultReceiver$Stub
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_send
androidx.arch.core.util.Function
androidx.recyclerview.widget.OrientationHelper$1
    public void offsetChild(android.view.View,int)
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
androidx.recyclerview.widget.RecyclerView$LayoutManager$2
    public int getChildCount()
    public android.view.View getParent()
com.android.billingclient.api.BillingClient$ChildDirected
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.graphics.Bitmap getBitmap()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
androidx.legacy.v4.R$drawable
com.google.android.material.bottomnavigation.BottomNavigationMenu
    public static final int MAX_ITEM_COUNT
androidx.transition.ViewGroupUtilsApi18
    private void <init>()
    private static final java.lang.String TAG
androidx.core.content.res.GradientColorInflaterCompat
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
androidx.constraintlayout.widget.Group
com.google.android.material.shadow.ShadowDrawableWrapper
    public void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float)
    private static int toEven(float)
    private void drawShadow(android.graphics.Canvas)
    private void buildShadowCorners()
    private void buildComponents(android.graphics.Rect)
    public void setAddPaddingForCorners(boolean)
    public void setAlpha(int)
    protected void onBoundsChange(android.graphics.Rect)
    public int getOpacity()
    public void setCornerRadius(float)
    public void draw(android.graphics.Canvas)
    public float getCornerRadius()
    public void setMaxShadowSize(float)
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    final android.graphics.Paint cornerShadowPaint
    final android.graphics.Paint edgeShadowPaint
    final android.graphics.RectF contentBounds
    float cornerRadius
    android.graphics.Path cornerShadowPath
    float maxShadowSize
    float rawMaxShadowSize
    float shadowSize
    float rawShadowSize
    private boolean dirty
    private final int shadowStartColor
    private final int shadowMiddleColor
    private final int shadowEndColor
    private boolean addPaddingForCorners
    private float rotation
    private boolean printedShadowClipWarning
    static final float SHADOW_MULTIPLIER
    static final float SHADOW_TOP_SCALE
    static final float SHADOW_HORIZ_SCALE
    static final float SHADOW_BOTTOM_SCALE
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
    public int getGranularity()
    public boolean getExtendSelection()
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar
    public void <init>(android.view.View)
    private void ensureTabsExist()
    private void cleanupTabs()
    private void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
    public float getElevation()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setCustomView(int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setTitle(int)
    public void setSubtitle(int)
    public void setSelectedNavigationItem(int)
    public void removeAllTabs()
    public void setTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setDisplayOptions(int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public boolean isShowing()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public int getTabCount()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public boolean hasIcon()
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public boolean hasLogo()
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
    private static final java.lang.String TAG
    private static final int INVALID_POSITION
    private static final long FADE_OUT_DURATION_MS
    private static final long FADE_IN_DURATION_MS
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9
androidx.customview.view.AbsSavedState
    protected void <init>(android.os.Parcel)
androidx.print.R
androidx.core.os.LocaleListCompat
com.google.android.material.button.MaterialButton$IconGravity
androidx.transition.Slide$6
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.os.LocaleListPlatformWrapper
androidx.transition.GhostViewApi14$1
com.google.android.material.ripple.RippleUtils
    private void <init>()
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.core.view.ViewCompat$UnhandledKeyEventManager
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.transition.R$style
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy
androidx.core.internal.view.SupportMenuItem
    public abstract boolean requiresActionButton()
    public abstract boolean requiresOverflow()
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
androidx.appcompat.widget.AppCompatToggleButton
    public void <init>(android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength
androidx.customview.R$layout
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.media.MediaBrowserServiceCompat$1
androidx.vectordrawable.R$attr
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
    void invalidateAnchorPositionInfo()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6
androidx.asynclayoutinflater.R$styleable
androidx.core.app.BundleCompat
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.google.android.material.snackbar.BaseTransientBottomBar$9
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
com.google.android.material.tabs.TabLayout$OnTabSelectedListener
com.google.android.material.shape.ShapePath$PathLineOperation
com.google.android.material.bottomsheet.BottomSheetDialog$2
androidx.appcompat.view.menu.MenuItemImpl
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    public boolean requiresOverflow()
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils
    public static void navigateUpFromSameTask(android.app.Activity)
    public static android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
    private void <init>()
    private static final java.lang.String TAG
    public static final java.lang.String PARENT_ACTIVITY
androidx.recyclerview.widget.SortedList$Callback
androidx.core.graphics.ColorUtils
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
androidx.fragment.app.FragmentManager$BackStackEntry
    public abstract int getId()
    public abstract java.lang.String getName()
    public abstract int getBreadCrumbTitleRes()
    public abstract int getBreadCrumbShortTitleRes()
    public abstract java.lang.CharSequence getBreadCrumbTitle()
    public abstract java.lang.CharSequence getBreadCrumbShortTitle()
androidx.drawerlayout.R
androidx.constraintlayout.widget.Placeholder
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
    int size()
androidx.media.R$attr
androidx.vectordrawable.R$drawable
androidx.core.view.DragStartHelper
androidx.core.content.res.ResourcesCompat
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static float getFloat(android.content.res.Resources,int)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
    private void <init>()
    private static final java.lang.String TAG
androidx.swiperefreshlayout.R
com.android.billingclient.api.RewardLoadParams
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21
androidx.versionedparcelable.VersionedParcel
    private void writeCollection(java.util.Collection,int)
    private void writeCollection(java.util.Collection)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeMap(java.util.Map,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.util.Map readMap(java.util.Map,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
    private static final int TYPE_INTEGER
    private static final int TYPE_FLOAT
androidx.transition.ChangeTransform$1
androidx.core.view.ViewCompat$3
    void frameworkSet(android.view.View,java.lang.Boolean)
    boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
    synthetic bridge void frameworkSet(android.view.View,java.lang.Object)
    synthetic bridge boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.arch.core.executor.TaskExecutor
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.text.TextDirectionHeuristicCompat
    public abstract boolean isRtl(char[],int,int)
androidx.media.MediaBrowserServiceCompat$BrowserRoot
androidx.customview.widget.ExploreByTouchHelper$1
androidx.core.graphics.PathSegment
androidx.core.app.SharedElementCallback
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
androidx.vectordrawable.animated.R$layout
androidx.constraintlayout.solver.widgets.Helper
c.jahhow.remotecontroller.R$menu
androidx.recyclerview.widget.SortedListAdapterCallback
androidx.core.graphics.drawable.RoundedBitmapDrawable
androidx.transition.Styleable$ArcMotion
androidx.swiperefreshlayout.R$id
com.google.android.material.tabs.TabLayout$TabIndicatorGravity
androidx.constraintlayout.widget.Constraints
com.google.android.material.chip.ChipDrawable$1
androidx.media.MediaBrowserServiceCompatApi21
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
android.support.v4.media.MediaMetadataCompatApi21
    public static java.util.Set keySet(java.lang.Object)
    public static android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String)
    public static long getLong(java.lang.Object,java.lang.String)
    public static java.lang.Object getRating(java.lang.Object,java.lang.String)
    public static java.lang.CharSequence getText(java.lang.Object,java.lang.String)
    public static java.lang.Object createFromParcel(android.os.Parcel)
    private void <init>()
com.google.android.material.internal.CircularBorderDrawable$1
androidx.recyclerview.widget.PagerSnapHelper
androidx.transition.ViewUtilsApi21
    private void fetchSetAnimationMatrix()
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sSetAnimationMatrixMethod
    private static boolean sSetAnimationMatrixMethodFetched
androidx.transition.R$drawable
androidx.transition.Styleable$ChangeTransform
com.google.android.material.snackbar.Snackbar
com.google.android.material.R$color
    private void <init>()
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.core.view.PointerIconCompat
    public static androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
    public static androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
    public static final int TYPE_NULL
    public static final int TYPE_ARROW
    public static final int TYPE_CONTEXT_MENU
    public static final int TYPE_HAND
    public static final int TYPE_HELP
    public static final int TYPE_WAIT
    public static final int TYPE_CELL
    public static final int TYPE_CROSSHAIR
    public static final int TYPE_TEXT
    public static final int TYPE_VERTICAL_TEXT
    public static final int TYPE_ALIAS
    public static final int TYPE_COPY
    public static final int TYPE_NO_DROP
    public static final int TYPE_ALL_SCROLL
    public static final int TYPE_HORIZONTAL_DOUBLE_ARROW
    public static final int TYPE_VERTICAL_DOUBLE_ARROW
    public static final int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
    public static final int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
    public static final int TYPE_ZOOM_IN
    public static final int TYPE_ZOOM_OUT
    public static final int TYPE_GRAB
    public static final int TYPE_GRABBING
    public static final int TYPE_DEFAULT
androidx.legacy.v4.R$string
androidx.appcompat.view.SupportMenuInflater$MenuState
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
com.android.billingclient.api.BillingClientImpl$15
android.support.v4.media.MediaBrowserCompat$CustomActionCallback
    public void <init>()
androidx.fragment.app.ListFragment$2
androidx.annotation.ColorInt
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
androidx.transition.Styleable$Fade
androidx.legacy.v4.R$dimen
androidx.appcompat.app.AppCompatDialogFragment
androidx.legacy.v4.R$layout
androidx.viewpager.widget.ViewPager$ItemInfo
com.android.billingclient.api.BillingBroadcastManager
    void destroy()
androidx.core.net.TrafficStatsCompat
androidx.viewpager.widget.ViewPager$1
androidx.core.view.ViewCompat$AccessibilityViewProperty
    void set(android.view.View,java.lang.Object)
    boolean shouldUpdate(java.lang.Object,java.lang.Object)
    abstract void frameworkSet(android.view.View,java.lang.Object)
    boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean)
androidx.media.VolumeProviderCompat$Callback
androidx.core.app.ActivityOptionsCompat
androidx.cardview.R$style
    private void <init>()
androidx.customview.widget.FocusStrategy$BoundsAdapter
androidx.transition.RectEvaluator
    void <init>(android.graphics.Rect)
com.android.billingclient.api.BillingClientImpl
    private final com.android.billingclient.api.BillingClientImpl$PurchaseHistoryResult zza(java.lang.String)
    private final com.android.billingclient.api.BillingResult zzb(java.lang.String)
    private static android.os.Bundle zzb()
    private final void zza(com.android.billingclient.api.ConsumeParams,com.android.billingclient.api.ConsumeResponseListener)
    static synthetic void access$600(com.android.billingclient.api.BillingClientImpl,com.android.billingclient.api.ConsumeParams,com.android.billingclient.api.ConsumeResponseListener)
    static synthetic com.android.billingclient.api.BillingClientImpl$PurchaseHistoryResult access$700(com.android.billingclient.api.BillingClientImpl,java.lang.String)
    static synthetic int access$800(com.android.billingclient.api.BillingClientImpl)
    static synthetic int access$900(com.android.billingclient.api.BillingClientImpl)
    static synthetic android.os.Bundle access$1100(com.android.billingclient.api.BillingClientImpl)
    void setExecutorService(java.util.concurrent.ExecutorService)
    public com.android.billingclient.api.BillingResult isFeatureSupported(java.lang.String)
    public void endConnection()
    public void launchPriceChangeConfirmationFlow(android.app.Activity,com.android.billingclient.api.PriceChangeFlowParams,com.android.billingclient.api.PriceChangeConfirmationListener)
    public void consumeAsync(com.android.billingclient.api.ConsumeParams,com.android.billingclient.api.ConsumeResponseListener)
    public void queryPurchaseHistoryAsync(java.lang.String,com.android.billingclient.api.PurchaseHistoryResponseListener)
    public void loadRewardedSku(com.android.billingclient.api.RewardLoadParams,com.android.billingclient.api.RewardResponseListener)
com.google.android.material.tabs.TabLayout$TabView
androidx.activity.ImmLeaksCleaner
    private static final int NOT_INITIALIAZED
    private static final int INIT_SUCCESS
    private static final int INIT_FAILED
androidx.recyclerview.widget.AsyncListUtil$1
androidx.appcompat.widget.ScrollingTabContainerView$TabView
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.core.app.NotificationCompat$Action$Extender
com.google.android.material.circularreveal.CircularRevealLinearLayout
com.google.android.material.shape.ShapePath
com.google.android.material.circularreveal.CircularRevealHelper$Strategy
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener
android.support.v4.media.MediaMetadataCompat$BitmapKey
com.google.android.material.bottomnavigation.LabelVisibilityMode
androidx.core.text.PrecomputedTextCompat
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public android.text.PrecomputedText getPrecomputedText()
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private final android.text.PrecomputedText mWrapped
    private static final char LINE_FEED
androidx.appcompat.app.ActionBar$TabListener
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper
com.google.android.material.shape.ShapePath$PathArcOperation
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags
    void setFlags(int,int)
com.google.android.material.resources.TextAppearance
android.support.v4.media.session.MediaControllerCompat$Callback
    public void onSessionReady()
    public void onCaptioningEnabledChanged(boolean)
    public void onRepeatModeChanged(int)
    public void onShuffleModeChanged(int)
    public android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
    void setHandler(android.os.Handler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
androidx.appcompat.view.menu.BaseMenuPresenter
    public boolean flagActionItems()
androidx.appcompat.widget.AbsActionBarView
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
androidx.annotation.ColorLong
androidx.drawerlayout.R$style
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24
androidx.transition.Slide$2
androidx.core.app.NotificationCompat$StreamType
com.google.android.material.R$drawable
    private void <init>()
androidx.core.view.LayoutInflaterCompat
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
androidx.appcompat.widget.SwitchCompat
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat
    public static int getActionMasked(android.view.MotionEvent)
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
androidx.vectordrawable.animated.R$id
androidx.core.view.DragAndDropPermissionsCompat
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1
androidx.appcompat.view.StandaloneActionMode
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public boolean isUiFocusable()
androidx.transition.GhostViewUtils
androidx.transition.Styleable$PatternPathMotion
androidx.core.os.MessageCompat
com.google.android.material.internal.CollapsingTextHelper
    public void setCollapsedTextSize(float)
    public int getExpandedTextGravity()
    public int getCollapsedTextGravity()
    public void setExpandedTextAppearance(int)
    public void setCollapsedTypeface(android.graphics.Typeface)
    public void setExpandedTypeface(android.graphics.Typeface)
    public android.graphics.Typeface getCollapsedTypeface()
    public android.graphics.Typeface getExpandedTypeface()
    public float getCollapsedTextSize()
    public float getExpandedTextSize()
    public java.lang.CharSequence getText()
    public android.content.res.ColorStateList getExpandedTextColor()
    private static final boolean DEBUG_DRAW
androidx.legacy.v4.R$styleable
com.google.android.material.bottomsheet.BottomSheetBehavior$1
androidx.customview.R$dimen
com.google.android.material.internal.CircularBorderDrawable
    public void <init>()
    private android.graphics.Shader createGradientShader()
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    public void setGradientColors(int,int,int,int)
    public void setBorderWidth(float)
    public void draw(android.graphics.Canvas)
    public boolean getPadding(android.graphics.Rect)
    public void setAlpha(int)
    public void setColorFilter(android.graphics.ColorFilter)
    public int getOpacity()
    protected void onBoundsChange(android.graphics.Rect)
    public boolean isStateful()
    protected boolean onStateChange(int[])
    final android.graphics.Paint paint
    final android.graphics.Rect rect
    final android.graphics.RectF rectF
    final com.google.android.material.internal.CircularBorderDrawable$CircularBorderState state
    float borderWidth
    private int topOuterStrokeColor
    private int topInnerStrokeColor
    private int bottomOuterStrokeColor
    private int bottomInnerStrokeColor
    private android.content.res.ColorStateList borderTint
    private int currentBorderTintColor
    private boolean invalidateShader
    private float rotation
    private static final float DRAW_STROKE_WIDTH_MULTIPLE
androidx.core.provider.FontsContractCompat$4$5
androidx.asynclayoutinflater.R$style
com.google.android.material.transformation.ExpandableBehavior
    public static com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class)
    private static final int STATE_UNINITIALIZED
    private static final int STATE_EXPANDED
    private static final int STATE_COLLAPSED
androidx.appcompat.widget.AppCompatRadioButton
    public void <init>(android.content.Context)
androidx.core.content.ContextCompat$LegacyServiceMapHolder
androidx.core.graphics.drawable.WrappedDrawable
    public abstract android.graphics.drawable.Drawable getWrappedDrawable()
    public abstract void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatBackgroundHelper
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.lifecycle.ClassesInfoCache
    public boolean hasLifecycleMethods(java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl
    public void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
    public void attachBaseContext(android.content.Context)
    public void onPostCreate(android.os.Bundle)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
    public final androidx.appcompat.app.ActionBar peekSupportActionBar()
    public android.view.MenuInflater getMenuInflater()
    public android.view.View findViewById(int)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void onStart()
    public void onPostResume()
    public void onSaveInstanceState(android.os.Bundle)
    public void setTheme(int)
    public void onSubDecorInstalled()
    public final java.lang.CharSequence getTitle()
    public androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    public boolean isHandleNativeActionModesEnabled()
    public boolean onBackPressed()
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void closePanel(int)
    public void dismissPopups()
    public int getLocalNightMode()
    public int mapNightMode(int)
    public final void cleanupAutoManagers()
    public final android.view.ViewGroup createSubDecor()
    public final void applyFixedSizeWindow()
    public final boolean shouldInheritContext(android.view.ViewParent)
    public final androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    public final boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final void reopenMenu(boolean)
    public final boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean onKeyDownPanel(int,android.view.KeyEvent)
    public final boolean onKeyUpPanel(int,android.view.KeyEvent)
    public final int sanitizeWindowFeatureId(int)
    public final int calculateNightMode()
    public final boolean updateForNightMode(int,boolean)
    public final void updateResourcesConfigurationForNightMode(int,boolean)
    public final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
    public final boolean isActivityManifestHandlingUiMode()
androidx.fragment.app.FragmentTransition
    public static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
    public static androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
    public static void configureTransitionsReordered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
    public static void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
    public static void configureTransitionsOrdered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
    public static void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
    public static java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
    public static void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public static void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
    public abstract boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public abstract void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public abstract void onRequestDisallowInterceptTouchEvent(boolean)
com.android.billingclient.api.BillingClient
    public static com.android.billingclient.api.BillingClient$Builder newBuilder(android.content.Context)
    public abstract boolean isReady()
    public abstract void startConnection(com.android.billingclient.api.BillingClientStateListener)
    public abstract com.android.billingclient.api.Purchase$PurchasesResult queryPurchases(java.lang.String)
    public abstract void querySkuDetailsAsync(com.android.billingclient.api.SkuDetailsParams,com.android.billingclient.api.SkuDetailsResponseListener)
    public abstract void acknowledgePurchase(com.android.billingclient.api.AcknowledgePurchaseParams,com.android.billingclient.api.AcknowledgePurchaseResponseListener)
androidx.appcompat.widget.AppCompatSeekBar
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.internal.TextScale$1
    public final synthetic com.google.android.material.internal.TextScale this$0
c.jahhow.remotecontroller.SelectBluetoothDeviceFragment
    public static synthetic c.jahhow.remotecontroller.MainViewModel access$100(c.jahhow.remotecontroller.SelectBluetoothDeviceFragment)
    public static synthetic android.widget.Button access$200(c.jahhow.remotecontroller.SelectBluetoothDeviceFragment)
    public static synthetic android.widget.ProgressBar access$300(c.jahhow.remotecontroller.SelectBluetoothDeviceFragment)
    public static synthetic java.util.UUID access$400()
    public static synthetic android.bluetooth.BluetoothAdapter access$500(c.jahhow.remotecontroller.SelectBluetoothDeviceFragment)
    public static synthetic c.jahhow.remotecontroller.MainActivity access$600(c.jahhow.remotecontroller.SelectBluetoothDeviceFragment)
    public static final synthetic boolean $assertionsDisabled
androidx.arch.core.executor.ArchTaskExecutor$1
    public void <init>()
androidx.lifecycle.ProcessLifecycleOwner$2
    public void onCreate()
    public void onStart()
    public void onResume()
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl
    public float getRadius()
    public void setShadowPadding(int,int,int,int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public boolean isCompatPaddingEnabled()
androidx.core.view.MarginLayoutParamsCompat
androidx.core.view.ActionProvider$VisibilityListener
    public abstract void onActionProviderVisibilityChanged(boolean)
c.jahhow.remotecontroller.ControllerSwitcherFragment
    public final boolean shouldShowPurchaseFragment()
    public static final synthetic boolean $assertionsDisabled
androidx.core.widget.NestedScrollView$OnScrollChangeListener
    public abstract void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.cardview.widget.CardViewBaseImpl
    public final androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
c.jahhow.remotecontroller.SelectBluetoothDeviceFragment$1
    public final synthetic c.jahhow.remotecontroller.SelectBluetoothDeviceFragment this$0
    public static final synthetic boolean $assertionsDisabled
com.google.android.material.bottomnavigation.BottomNavigationMenuView
    public void <init>(android.content.Context,android.util.AttributeSet)
    public static synthetic com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
    public void <init>(android.content.Context)
    public final void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
    public android.animation.Animator$AnimatorListener mAnimatorListener
    public java.util.ArrayList mAnimationCallbacks
com.google.android.material.animation.MatrixEvaluator
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
    public static float cross(float,float,float,float)
    public final void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public final float getMatrixScale(android.graphics.Matrix)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
    public androidx.core.provider.FontRequest getRequest()
    public int getFetchStrategy()
    public int getTimeout()
androidx.transition.ViewUtils
    public static void setTransitionAlpha(android.view.View,float)
    public static void saveNonTransitionAlpha(android.view.View)
    public static void clearNonTransitionAlpha(android.view.View)
    public static void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
    public static void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
    public static void fetchViewFlagsField()
    public static final android.util.Property CLIP_BOUNDS
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
    public final java.lang.String mAction
    public final android.os.Bundle mExtras
    public final android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.bottomappbar.BottomAppBar$Behavior
    public final boolean updateFabPositionAndVisibility(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.bottomappbar.BottomAppBar)
com.google.android.material.animation.AnimatorSetCompat
androidx.cardview.widget.CardViewApi21Impl
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
androidx.transition.ChangeBounds$4
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
    public abstract android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public abstract boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
    public abstract boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.collection.SimpleArrayMap
    public static int binarySearchHashes(int[],int,int)
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
androidx.transition.PathProperty
    public java.lang.Float get()
    public void set(java.lang.Object,java.lang.Float)
androidx.core.graphics.TypefaceCompat
    public static android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
    public static android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
    public static android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
androidx.core.graphics.TypefaceCompatUtil
androidx.appcompat.app.AppCompatDelegateImpl$1
    public final boolean shouldWrapException(java.lang.Throwable)
androidx.appcompat.app.ResourcesFlusher
androidx.appcompat.widget.AppCompatSpinner$SavedState$1
    public androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.recyclerview.widget.OrientationHelper
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void onLayoutComplete()
    public int getTotalSpaceChange()
android.support.v4.media.MediaDescriptionCompatApi23$Builder
androidx.media.AudioAttributesImplBase
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
com.google.android.material.internal.ThemeEnforcement
    public static varargs androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static varargs boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static void checkAppCompatTheme(android.content.Context)
    public static void checkMaterialTheme(android.content.Context)
    public static boolean isTheme(android.content.Context,int[])
c.jahhow.remotecontroller.MyCardViewSetup
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector
    public void doBeforeTextChanged(android.widget.AutoCompleteTextView)
    public void doAfterTextChanged(android.widget.AutoCompleteTextView)
    public void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
android.support.v4.media.session.ParcelableVolumeInfo$1
    public android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator
    public int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
    public int getTotalDuration()
androidx.appcompat.app.AlertController$2
    public void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
    public final synthetic androidx.appcompat.app.AlertController this$0
com.android.billingclient.api.BillingResults
    public static final com.android.billingclient.api.BillingResult FEATURE_NOT_SUPPORTED
    public static final com.android.billingclient.api.BillingResult GET_PURCHASE_HISTORY_NOT_SUPPORTED
    public static final com.android.billingclient.api.BillingResult ITEM_UNAVAILABLE
    public static final com.android.billingclient.api.BillingResult UNKNOWN_FEATURE
androidx.core.view.accessibility.AccessibilityEventCompat
com.android.billingclient.api.SkuDetailsParams
c.jahhow.remotecontroller.AirMouseFragment
    public final double NormalizeRadian(double)
    public final void MatrixMultiply(float[],float[],float[])
    public final float upperBoundZ
    public final float square_1minusUpperBoundZ
androidx.core.widget.ListViewCompat
androidx.core.content.res.FontResourcesParserCompat
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
    public int getSpanIndex(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener
    public abstract void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public abstract void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.appcompat.widget.DrawableUtils
    public static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
    public static final android.graphics.Rect INSETS_NONE
    public static java.lang.Class sInsetsClazz
androidx.core.math.MathUtils
androidx.core.app.ComponentActivity
    public androidx.collection.SimpleArrayMap mExtraDataMap
androidx.core.os.TraceCompat
androidx.transition.ViewOverlayApi14$OverlayViewGroup
    public void add(android.graphics.drawable.Drawable)
    public void remove(android.graphics.drawable.Drawable)
    public boolean isEmpty()
    public final void getOffset(int[])
    public static java.lang.reflect.Method sInvalidateChildInParentFastMethod
com.android.billingclient.api.BillingClientImpl$BillingServiceConnection
    public void <init>(com.android.billingclient.api.BillingClientImpl,com.android.billingclient.api.BillingClientStateListener)
    public static synthetic java.lang.Object access$1300(com.android.billingclient.api.BillingClientImpl$BillingServiceConnection)
    public static synthetic com.android.billingclient.api.BillingClientStateListener access$1400(com.android.billingclient.api.BillingClientImpl$BillingServiceConnection)
    public static synthetic boolean access$1500(com.android.billingclient.api.BillingClientImpl$BillingServiceConnection)
    public static synthetic void access$2200(com.android.billingclient.api.BillingClientImpl$BillingServiceConnection,com.android.billingclient.api.BillingResult)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable
    public void cancel()
    public void post()
androidx.fragment.app.FragmentActivity$HostCallbacks
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public java.lang.Object onGetHost()
androidx.core.app.ActivityCompat
    public static androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.recyclerview.widget.AdapterHelper
    public void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    public boolean hasAnyUpdateTypes(int)
    public int findPositionOffset(int)
    public int applyPendingUpdatesToPosition(int)
    public boolean hasUpdates()
    public final void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.core.widget.NestedScrollView$SavedState$1
    public androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    public androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.appcompat.app.AlertController$AlertParams
    public void apply(androidx.appcompat.app.AlertController)
    public final void createListView(androidx.appcompat.app.AlertController)
    public androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
    public boolean mRecycleOnMeasure
androidx.core.widget.TextViewCompat
androidx.recyclerview.widget.StaggeredGridLayoutManager
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public void updateMeasureSpecs(int)
    public android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final void createOrientationHelpers()
    public final boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public final void resolveShouldLayoutReverse()
    public final void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    public final void repositionToWrapContentIfNecessary()
    public final void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    public final void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    public final void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    public final void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    public final void appendViewToAllSpans(android.view.View)
    public final void prependViewToAllSpans(android.view.View)
    public final int getMaxStart(int)
    public final int getMinEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    public final int calculateScrollDirectionForPosition(int)
    public final int findFirstReferenceChildPosition(int)
    public final int findLastReferenceChildPosition(int)
    public final int convertFocusDirectionToLayoutDirection(int)
androidx.core.view.accessibility.AccessibilityViewCommand
androidx.activity.OnBackPressedCallback
    public final void setEnabled(boolean)
    public final boolean isEnabled()
    public final void remove()
    public abstract void handleOnBackPressed()
    public void removeCancellable(androidx.activity.Cancellable)
android.support.v4.media.session.PlaybackStateCompat
    public java.lang.Object mStateObj
androidx.transition.ChangeBounds$2
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.core.graphics.PathParser
androidx.core.util.ObjectsCompat
android.support.v4.os.ResultReceiver$1
    public android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
    public android.support.v4.os.ResultReceiver[] newArray(int)
androidx.recyclerview.widget.RecyclerView$SavedState
    public void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.savedstate.Recreator
    public final void reflectiveNew(java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl$2
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
    public static androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
androidx.core.content.PermissionChecker
androidx.appcompat.widget.AppCompatSeekBarHelper
    public void setTickMark(android.graphics.drawable.Drawable)
    public void jumpDrawablesToCurrentState()
    public void drawableStateChanged()
androidx.recyclerview.widget.RecyclerView$ViewFlinger
    public void fling(int,int)
    public void smoothScrollBy(int,int,int,android.view.animation.Interpolator)
    public void stop()
    public final void disableRunOnAnimationRequests()
    public final void enableRunOnAnimationRequests()
    public final float distanceInfluenceForSnapDuration(float)
    public final int computeScrollDuration(int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.RecyclerView$State
    public void assertLayoutStep(int)
    public void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean isPreLayout()
    public boolean willRunPredictiveAnimations()
    public int getTargetScrollPosition()
    public boolean hasTargetScrollPosition()
    public int mFocusedItemPosition
    public long mFocusedItemId
    public int mFocusedSubChildId
androidx.core.text.PrecomputedTextCompat$Params$Builder
com.google.android.gms.internal.play_billing.zza
    public abstract int zza(int,java.lang.String,java.lang.String)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String)
    public abstract android.os.Bundle zza(int,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract android.os.Bundle zzc(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public abstract android.os.Bundle zza(int,java.lang.String,java.lang.String,android.os.Bundle,android.os.Bundle)
    public abstract android.os.Bundle zzd(int,java.lang.String,java.lang.String,android.os.Bundle)
androidx.cardview.widget.CardViewDelegate
    public abstract void setCardBackground(android.graphics.drawable.Drawable)
    public abstract android.graphics.drawable.Drawable getCardBackground()
    public abstract boolean getUseCompatPadding()
    public abstract boolean getPreventCornerOverlap()
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setMinWidthHeightInternal(int,int)
    public abstract android.view.View getCardView()
androidx.transition.AutoTransition
    public final void init()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
    public final void checkPaneVisibility(android.view.View,boolean)
    public final void registerForLayoutCallback(android.view.View)
com.google.android.material.transformation.FabTransformationSheetBehavior
    public final void updateImportantForAccessibility(android.view.View,boolean)
com.android.billingclient.api.BillingBroadcastManager$BillingBroadcastReceiver
    public void <init>(com.android.billingclient.api.BillingBroadcastManager,com.android.billingclient.api.PurchasesUpdatedListener)
    public static synthetic com.android.billingclient.api.PurchasesUpdatedListener access$100(com.android.billingclient.api.BillingBroadcastManager$BillingBroadcastReceiver)
    public void register(android.content.Context,android.content.IntentFilter)
androidx.appcompat.app.AlertController$4
    public final synthetic androidx.appcompat.app.AlertController this$0
androidx.transition.TransitionManager
    public static void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
    public static void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
androidx.appcompat.widget.Toolbar$SavedState$1
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
androidx.lifecycle.Lifecycle
    public abstract void removeObserver(androidx.lifecycle.LifecycleObserver)
    public abstract androidx.lifecycle.Lifecycle$State getCurrentState()
    public java.util.concurrent.atomic.AtomicReference mInternalScopeRef
androidx.savedstate.SavedStateRegistryController
    public static androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
    public void performSave(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout$SavedState$1
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
androidx.appcompat.view.ActionMode
    public void setTag(java.lang.Object)
    public java.lang.Object getTag()
    public boolean getTitleOptionalHint()
androidx.versionedparcelable.VersionedParcelParcel
    public void writeByteArray(byte[])
    public void writeInt(int)
    public void writeString(java.lang.String)
    public void writeParcelable(android.os.Parcelable)
    public void writeBoolean(boolean)
    public void writeCharSequence(java.lang.CharSequence)
    public java.lang.CharSequence readCharSequence()
    public int readInt()
    public byte[] readByteArray()
    public android.os.Parcelable readParcelable()
    public boolean readBoolean()
androidx.recyclerview.widget.RecyclerView$OnFlingListener
    public abstract boolean onFling(int,int)
c.jahhow.remotecontroller.ArrowButtonFragment$2
    public final synthetic c.jahhow.remotecontroller.ArrowButtonFragment this$0
com.google.android.material.textfield.IndicatorViewController
    public static synthetic int access$002(com.google.android.material.textfield.IndicatorViewController,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
    public static synthetic android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    public void showHelper(java.lang.CharSequence)
    public void hideHelperText()
    public void showError(java.lang.CharSequence)
    public boolean isCaptionView(int)
    public void setErrorEnabled(boolean)
    public boolean isErrorEnabled()
    public boolean isHelperTextEnabled()
    public void setHelperTextEnabled(boolean)
    public java.lang.CharSequence getErrorText()
    public java.lang.CharSequence getHelperText()
    public void setTypefaces(android.graphics.Typeface)
    public android.content.res.ColorStateList getErrorViewTextColors()
    public void setErrorViewTextColor(android.content.res.ColorStateList)
    public int getHelperTextViewCurrentTextColor()
    public void setHelperTextViewTextColor(android.content.res.ColorStateList)
    public final void setCaptionViewVisibilities(int,int)
    public final android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
    public final android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    public final boolean canAdjustIndicatorPadding()
    public final void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
    public final boolean isCaptionStateError(int)
    public final void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
androidx.recyclerview.widget.GapWorker
    public static boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
    public void add(androidx.recyclerview.widget.RecyclerView)
    public void remove(androidx.recyclerview.widget.RecyclerView)
    public final void buildTaskList()
    public final void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public final void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
    public final void flushTasksWithDeadline(long)
com.google.android.material.internal.NavigationMenuItemView
    public final boolean shouldExpandActionArea()
    public final void adjustAppearance()
    public final android.graphics.drawable.StateListDrawable createDefaultBackground()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty
    public java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView
    public final void consumeTextFutureAndSetBlocking()
androidx.collection.ArrayMap
    public boolean retainAll(java.util.Collection)
com.google.android.material.appbar.AppBarLayout$BaseBehavior
    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public static synthetic int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    public final boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
    public final int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public final android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
com.android.billingclient.api.SkuDetails
    public java.lang.String getSku()
    public java.lang.String getType()
    public boolean isRewarded()
    public java.lang.String getSkuDetailsToken()
    public java.lang.String rewardToken()
com.google.android.material.animation.MotionTiming
    public static com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
    public static android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
    public long getDelay()
    public long getDuration()
    public int getRepeatCount()
    public int getRepeatMode()
androidx.appcompat.widget.AppCompatImageHelper
    public android.content.res.ColorStateList getSupportImageTintList()
    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
android.support.v4.media.session.IMediaSession
    public abstract void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.recyclerview.widget.ChildHelper$Callback
    public abstract int getChildCount()
    public abstract void addView(android.view.View,int)
    public abstract int indexOfChild(android.view.View)
    public abstract void removeViewAt(int)
    public abstract android.view.View getChildAt(int)
    public abstract void removeAllViews()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public abstract void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public abstract void detachViewFromParent(int)
    public abstract void onEnteredHiddenState(android.view.View)
    public abstract void onLeftHiddenState(android.view.View)
c.jahhow.remotecontroller.InputTextFragment
    public static synthetic c.jahhow.remotecontroller.MainActivity access$000(c.jahhow.remotecontroller.InputTextFragment)
    public static synthetic boolean access$102(c.jahhow.remotecontroller.InputTextFragment,boolean)
    public static synthetic com.google.android.material.textfield.TextInputEditText access$200(c.jahhow.remotecontroller.InputTextFragment)
    public static synthetic boolean access$300(c.jahhow.remotecontroller.InputTextFragment,int)
    public static synthetic android.widget.ImageView access$400(c.jahhow.remotecontroller.InputTextFragment)
    public static synthetic android.view.View access$500(c.jahhow.remotecontroller.InputTextFragment)
androidx.appcompat.app.AppCompatDelegateImpl$5
    public void onDetachedFromWindow()
androidx.fragment.app.FragmentController
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void attachHost(androidx.fragment.app.Fragment)
    public android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public android.os.Parcelable saveAllState()
    public void restoreSaveState(android.os.Parcelable)
    public void dispatchCreate()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroy()
    public void dispatchMultiWindowModeChanged(boolean)
    public void dispatchPictureInPictureModeChanged(boolean)
    public void dispatchConfigurationChanged(android.content.res.Configuration)
    public void dispatchLowMemory()
    public boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    public boolean dispatchContextItemSelected(android.view.MenuItem)
    public void dispatchOptionsMenuClosed(android.view.Menu)
    public boolean execPendingActions()
com.google.android.material.internal.DescendantOffsetUtils
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer$Callback
    public abstract androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public abstract void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.google.android.material.bottomsheet.BottomSheetBehavior
    public static synthetic boolean access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic int access$100(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public final void reset()
    public final float getYVelocity()
    public com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback callback
androidx.appcompat.widget.ActionMenuPresenter
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
    public void onConfigurationChanged()
    public void setReserveOverflow(boolean)
    public void setExpandedActionViewsExclusive(boolean)
    public void setOverflowIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getOverflowIcon()
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean isOverflowMenuShowPending()
    public void setMenuView(androidx.appcompat.widget.ActionMenuView)
    public final android.view.View findViewForItem(android.view.MenuItem)
androidx.core.widget.TextViewCompat$OreoCallback
    public final void recomputeProcessTextMenuItems(android.view.Menu)
    public final java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
    public final boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
    public final android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
    public final boolean isEditable(android.widget.TextView)
com.google.android.material.circularreveal.CircularRevealHelper
    public void buildCircularRevealCache()
    public void destroyCircularRevealCache()
    public void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
    public void setCircularRevealScrimColor(int)
    public int getCircularRevealScrimColor()
    public android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
    public void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
    public void draw(android.graphics.Canvas)
    public boolean isOpaque()
androidx.transition.TransitionManager$MultiListener
    public final void removeListeners()
com.google.android.material.appbar.HeaderScrollingViewBehavior
    public static int resolveGravity(int)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView
    public final boolean isOutOfBounds(int,int)
androidx.fragment.app.BackStackRecord
    public void dump(java.lang.String,java.io.PrintWriter)
    public void runOnCommitRunnables()
    public void commitNowAllowingStateLoss()
    public androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
    public boolean isPostponed()
    public void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    public java.lang.String getName()
android.support.v4.media.session.IMediaControllerCallback
    public abstract void onEvent(java.lang.String,android.os.Bundle)
    public abstract void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
    public abstract void onRepeatModeChanged(int)
    public abstract void onShuffleModeChangedRemoved(boolean)
    public abstract void onCaptioningEnabledChanged(boolean)
    public abstract void onShuffleModeChanged(int)
    public abstract void onSessionReady()
com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener
    public abstract void onViewAttachedToWindow(android.view.View)
    public abstract void onViewDetachedFromWindow(android.view.View)
androidx.fragment.app.BackStackState$1
    public androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.BackStackState[] newArray(int)
c.jahhow.remotecontroller.BluetoothConnectorFragment
    public static synthetic c.jahhow.remotecontroller.MainViewModel access$200(c.jahhow.remotecontroller.BluetoothConnectorFragment)
    public static final synthetic boolean $assertionsDisabled
com.google.android.material.appbar.ViewOffsetHelper
    public void onViewLayout()
    public boolean setTopAndBottomOffset(int)
    public boolean setLeftAndRightOffset(int)
    public int getTopAndBottomOffset()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback
    public androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
    public android.graphics.drawable.Drawable$Callback unwrap()
c.jahhow.remotecontroller.SelectBluetoothDeviceFragment$3
    public final synthetic c.jahhow.remotecontroller.SelectBluetoothDeviceFragment this$0
    public static final synthetic boolean $assertionsDisabled
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom1(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public int right
    public int bottom
com.google.android.material.animation.MotionSpec
    public static void addTimingFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
    public boolean hasTiming(java.lang.String)
    public void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
    public long getTotalDuration()
com.google.android.material.bottomappbar.BottomAppBar
    public static synthetic android.animation.Animator access$002(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    public static synthetic void access$100(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic void access$200(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic android.animation.Animator access$302(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    public static synthetic void access$1000(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static synthetic boolean access$1200(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic void access$1300(com.google.android.material.bottomappbar.BottomAppBar)
    public final void maybeAnimateModeChange(int)
    public final void createCradleTranslationAnimation(int,java.util.List)
    public final void createFabTranslationXAnimation(int,java.util.List)
    public final void maybeAnimateMenuView(int,boolean)
    public final void createMenuViewTranslationAnimation(int,boolean,java.util.List)
    public final float getFabTranslationY(boolean)
    public final void cancelAnimations()
    public final boolean isAnimationRunning()
    public final void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public final void removeFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public final com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
    public final com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment topEdgeTreatment
androidx.core.widget.EdgeEffectCompat
androidx.appcompat.widget.ActionBarOverlayLayout
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void postRemoveActionBarHideOffset()
    public final void postAddActionBarHideOffset()
    public final void removeActionBarHideOffset()
    public final void addActionBarHideOffset()
androidx.fragment.app.FragmentStateManager$1
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
    public static synthetic android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
androidx.transition.ViewGroupUtilsApi14
c.jahhow.remotecontroller.TurnOnBluetoothFragment$1
    public final synthetic c.jahhow.remotecontroller.TurnOnBluetoothFragment this$0
androidx.core.app.BundleCompat$BundleCompatBaseImpl
androidx.recyclerview.widget.RecyclerView$5
    public void addView(android.view.View,int)
    public int indexOfChild(android.view.View)
    public void removeAllViews()
    public void detachViewFromParent(int)
androidx.lifecycle.ReportFragment$ActivityInitializationListener
    public abstract void onCreate()
    public abstract void onStart()
    public abstract void onResume()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache
    public static int generateCacheKey(int,android.graphics.PorterDuff$Mode)
androidx.collection.MapCollections
    public static boolean containsAllHelper(java.util.Map,java.util.Collection)
    public static boolean removeAllHelper(java.util.Map,java.util.Collection)
    public java.util.Set getEntrySet()
    public java.util.Set getKeySet()
    public java.util.Collection getValues()
com.google.android.material.button.MaterialButtonHelper
    public void setBackgroundOverwritten()
    public boolean isBackgroundOverwritten()
    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportBackgroundTintList()
    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    public void updateMaskBounds(int,int)
    public void setRippleColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getRippleColor()
    public void setStrokeColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getStrokeColor()
    public void setStrokeWidth(int)
    public int getStrokeWidth()
    public void setCornerRadius(int)
    public int getCornerRadius()
    public final android.graphics.drawable.Drawable createBackgroundCompat()
    public final android.graphics.drawable.GradientDrawable unwrapStrokeDrawable()
    public final android.graphics.drawable.GradientDrawable unwrapBackgroundDrawable()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
    public abstract void onWindowVisibilityChanged(int)
    public abstract void showForSystem()
    public abstract void hideForSystem()
    public abstract void enableContentAnimations(boolean)
    public abstract void onContentScrollStarted()
    public abstract void onContentScrollStopped()
androidx.lifecycle.LiveData
    public void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public java.lang.Object getValue()
    public boolean hasActiveObservers()
    public final java.lang.Runnable mPostValueRunnable
androidx.appcompat.view.menu.MenuPopupHelper
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setAnchorView(android.view.View)
    public void setForceShowIcon(boolean)
    public void setGravity(int)
    public void show()
    public boolean tryShow(int,int)
    public void dismiss()
    public final androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.appcompat.widget.SearchView$OnQueryTextListener
    public abstract boolean onQueryTextSubmit(java.lang.String)
    public abstract boolean onQueryTextChange(java.lang.String)
androidx.appcompat.view.ContextThemeWrapper
    public void <init>(android.content.Context,android.content.res.Resources$Theme)
    public int getThemeResId()
    public void onApplyThemeResource(android.content.res.Resources$Theme,int)
    public final android.content.res.Resources getResourcesInternal()
androidx.core.view.ViewPropertyAnimatorCompat$1
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.lifecycle.LiveData$ObserverWrapper
    public void <init>(androidx.lifecycle.LiveData)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.google.android.material.internal.ViewUtils
androidx.appcompat.widget.TooltipCompat
androidx.appcompat.widget.AppCompatDrawableManager$1
    public final android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
androidx.fragment.app.FragmentTransitionCompat21$5
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.HeaderBehavior
    public final void ensureVelocityTracker()
androidx.lifecycle.SavedStateHandle
    public androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider()
    public final java.util.Map mLiveDatas
    public static final java.lang.Class[] ACCEPTABLE_CLASSES
com.google.android.material.animation.DrawableAlphaProperty
    public java.lang.Integer get(android.graphics.drawable.Drawable)
    public void set(android.graphics.drawable.Drawable,java.lang.Integer)
com.google.android.material.transformation.FabTransformationBehavior
    public final void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
    public final float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
    public final android.view.ViewGroup calculateChildContentContainer(android.view.View)
    public final int getBackgroundTint(android.view.View)
    public final void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
androidx.core.view.MenuItemCompat
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
    public abstract void onTouchExplorationStateChanged(boolean)
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1
    public com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int)
androidx.appcompat.app.ActionBar
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean onMenuKeyEvent()
    public void onDestroy()
androidx.arch.core.executor.DefaultTaskExecutor$1
    public final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.core.util.Pools$SimplePool
    public final boolean isInPool(java.lang.Object)
com.google.android.material.textfield.CutoutDrawable
    public boolean hasCutout()
    public void removeCutout()
    public final void setPaintStyles()
    public final void preDraw(android.graphics.Canvas)
    public final void saveCanvasLayer(android.graphics.Canvas)
    public final void postDraw(android.graphics.Canvas)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
    public final boolean doCheck(java.lang.CharSequence,int,int)
androidx.savedstate.Recreator$SavedStateProvider
    public void add(java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal
    public static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    public static long createCacheKey(android.util.TypedValue)
    public static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
    public static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    public synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    public boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public android.graphics.PorterDuff$Mode getTintMode(int)
    public final android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
    public final void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public final void checkVectorDrawableSetup(android.content.Context)
androidx.collection.SparseArrayCompat
    public int indexOfKey(int)
    public void clear()
android.support.v4.media.session.MediaSessionCompat$QueueItem$1
    public android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int)
c.jahhow.remotecontroller.MainViewModel
    public java.net.Socket socket
    public android.bluetooth.BluetoothSocket bluetoothSocket
androidx.fragment.app.FragmentManager$5
    public final synthetic androidx.fragment.app.FragmentManager this$0
androidx.transition.Visibility$1
    public final synthetic androidx.transition.Visibility this$0
androidx.recyclerview.widget.RecyclerView
    public static androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
    public static synthetic void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
    public void postAnimationRunner()
    public void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void saveOldPositions()
    public void clearOldPositions()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    public final void initAutofill()
    public final void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
    public final java.lang.String getFullClassName(android.content.Context,java.lang.String)
    public final void initChildrenHelper()
    public final void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
    public final void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean hasUpdatedView()
    public final void pullGlows(float,float,float,float)
    public final void releaseGlows()
    public final boolean isPreferredNextFocus(android.view.View,android.view.View,int)
    public final boolean dispatchOnItemTouchIntercept(android.view.MotionEvent)
    public final boolean dispatchOnItemTouch(android.view.MotionEvent)
    public final void dispatchContentChangedIfNecessary()
    public final boolean predictiveItemAnimationsEnabled()
    public final void saveFocusInfo()
    public final void resetFocusInfo()
    public final android.view.View findNextViewToFocus()
    public final void recoverFocusFromState()
    public final int getDeepestFocusedViewWithId(android.view.View)
    public final void dispatchLayoutStep1()
    public final void dispatchLayoutStep2()
    public final void dispatchLayoutStep3()
    public final void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void findMinMaxChildLayoutPositions(int[])
    public final boolean didChildRangeChange(int,int)
    public final void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
    public final java.lang.Runnable mUpdateChildViewsRunnable
    public androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
    public androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
    public static final boolean POST_UPDATES_ON_ANIMATION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
    public void <init>(int,java.lang.CharSequence)
    public void <init>(int,java.lang.CharSequence,java.lang.Class)
    public boolean perform(android.view.View,android.os.Bundle)
    public final int mId
    public final java.lang.CharSequence mLabel
    public final androidx.core.view.accessibility.AccessibilityViewCommand mCommand
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.fragment.app.FragmentTransitionCompat21$2
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.core.app.TaskStackBuilder
    public static androidx.core.app.TaskStackBuilder create(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
    public void startActivities()
    public void startActivities(android.os.Bundle)
androidx.fragment.app.FragmentAnim
androidx.cardview.widget.RoundRectDrawable
    public void setPadding(float,boolean,boolean)
    public float getPadding()
    public void setRadius(float)
    public float getRadius()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
    public abstract void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
    public abstract void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
    public abstract void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
    public abstract void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDelegate
    public static int getDefaultNightMode()
    public abstract androidx.appcompat.app.ActionBar getSupportActionBar()
    public abstract android.view.MenuInflater getMenuInflater()
    public abstract void onPostCreate(android.os.Bundle)
    public abstract void onConfigurationChanged(android.content.res.Configuration)
    public abstract void onStart()
    public abstract void onPostResume()
    public void setTheme(int)
    public abstract android.view.View findViewById(int)
    public void attachBaseContext(android.content.Context)
    public abstract void onSaveInstanceState(android.os.Bundle)
    public int getLocalNightMode()
    public static int sDefaultNightMode
androidx.recyclerview.widget.ViewBoundsCheck
    public boolean isViewWithinBoundFlags(android.view.View,int)
androidx.core.util.DebugUtils
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator
    public int compare(android.view.View,android.view.View)
androidx.lifecycle.LiveData$LifecycleBoundObserver
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
android.support.v4.media.session.PlaybackStateCompat$1
    public android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.PlaybackStateCompat[] newArray(int)
androidx.core.util.Pools$Pool
androidx.recyclerview.widget.RecyclerView$Adapter
    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public abstract int getItemViewType(int)
    public abstract long getItemId(int)
    public abstract int getItemCount()
    public final boolean hasStableIds()
    public abstract void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public abstract void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public abstract void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public abstract void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo
    public void set(float,float,float)
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
    public abstract void onFitSystemWindows(android.graphics.Rect)
androidx.fragment.app.Fragment
    public final java.lang.CharSequence getText(int)
    public final void requestPermissions(java.lang.String[],int)
    public java.lang.Runnable mPostponedDurationRunnable
androidx.transition.ViewUtils$2
    public android.graphics.Rect get(android.view.View)
    public void set(android.view.View,android.graphics.Rect)
androidx.core.widget.NestedScrollView
    public final void initScrollView()
    public final boolean canScroll()
    public final boolean inChild(int,int)
    public final void initOrResetVelocityTracker()
    public final void initVelocityTrackerIfNotExists()
    public final android.view.View findFocusableViewInBounds(boolean,int,int)
    public final boolean isOffScreen(android.view.View)
    public final boolean scrollToChildRect(android.graphics.Rect,boolean)
    public final void endDrag()
androidx.core.provider.SelfDestructiveThread$3
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
com.android.billingclient.api.AcknowledgePurchaseParams
    public void <init>()
    public static com.android.billingclient.api.AcknowledgePurchaseParams$Builder newBuilder()
    public static synthetic java.lang.String access$202(com.android.billingclient.api.AcknowledgePurchaseParams,java.lang.String)
    public static synthetic java.lang.String access$302(com.android.billingclient.api.AcknowledgePurchaseParams,java.lang.String)
    public final java.lang.String getDeveloperPayload()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition
    public void <init>()
android.support.v4.media.session.PlaybackStateCompatApi21
androidx.collection.LongSparseArray
    public void <init>(int)
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public int indexOfKey(long)
androidx.core.graphics.drawable.WrappedDrawableState
    public boolean canConstantState()
androidx.appcompat.app.AlertDialog
    public android.widget.ListView getListView()
android.support.v4.media.MediaDescriptionCompatApi21
com.android.billingclient.api.BillingFlowParams
    public static synthetic com.android.billingclient.api.SkuDetails access$102(com.android.billingclient.api.BillingFlowParams,com.android.billingclient.api.SkuDetails)
    public static synthetic java.lang.String access$202(com.android.billingclient.api.BillingFlowParams,java.lang.String)
    public static synthetic java.lang.String access$302(com.android.billingclient.api.BillingFlowParams,java.lang.String)
    public static synthetic java.lang.String access$402(com.android.billingclient.api.BillingFlowParams,java.lang.String)
    public static synthetic boolean access$502(com.android.billingclient.api.BillingFlowParams,boolean)
    public static synthetic int access$602(com.android.billingclient.api.BillingFlowParams,int)
    public static synthetic java.lang.String access$702(com.android.billingclient.api.BillingFlowParams,java.lang.String)
    public java.lang.String getSku()
    public java.lang.String getSkuType()
    public com.android.billingclient.api.SkuDetails getSkuDetails()
    public java.lang.String getOldSku()
    public java.lang.String getOldSkuPurchaseToken()
    public java.lang.String getAccountId()
    public boolean getVrPurchaseFlow()
    public int getReplaceSkusProrationMode()
    public boolean hasExtraParams()
    public java.lang.String getDeveloperId()
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
    public androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int)
com.google.android.material.animation.ChildrenAlphaProperty
    public java.lang.Float get(android.view.ViewGroup)
    public void set(android.view.ViewGroup,java.lang.Float)
com.google.android.material.bottomnavigation.BottomNavigationView
    public static synthetic void access$000(com.google.android.material.bottomnavigation.BottomNavigationView)
    public static synthetic com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView)
    public final void addCompatibilityTopDivider(android.content.Context)
com.google.android.material.transformation.FabTransformationBehavior$4
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
android.support.v4.media.session.MediaSessionCompat$Token
    public void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle)
    public android.os.Bundle mSessionToken2Bundle
androidx.collection.LruCache
    public void entryRemoved()
    public java.lang.Object create()
    public int sizeOf()
    public final int safeSizeOf(java.lang.Object,java.lang.Object)
    public int createCount
androidx.appcompat.view.menu.MenuAdapter
    public void setForceShowIcon(boolean)
    public androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.fragment.app.FragmentTransitionImpl$3
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.core.provider.FontsContractCompat$FontInfo
    public android.net.Uri getUri()
    public int getTtcIndex()
    public int getWeight()
    public boolean isItalic()
    public int getResultCode()
androidx.appcompat.widget.AppCompatImageView
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemImpl$1
    public void onActionProviderVisibilityChanged(boolean)
androidx.transition.ChangeBounds$9
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.core.view.ViewPropertyAnimatorUpdateListener
    public abstract void onAnimationUpdate(android.view.View)
androidx.lifecycle.ReportFragment
    public void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.google.android.material.snackbar.SnackbarContentLayout
    public static void updateTopBottomPadding(android.view.View,int,int)
androidx.appcompat.widget.ActionBarContextView$1
    public final synthetic androidx.appcompat.widget.ActionBarContextView this$0
c.jahhow.remotecontroller.ArrowButtonFragment$4
    public final synthetic c.jahhow.remotecontroller.ArrowButtonFragment this$0
androidx.versionedparcelable.ParcelImpl$1
    public androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
    public androidx.versionedparcelable.ParcelImpl[] newArray(int)
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat
    public abstract void onAnimationPause(android.animation.Animator)
    public abstract void onAnimationResume(android.animation.Animator)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener
    public abstract boolean onMenuItemClick(android.view.MenuItem)
androidx.transition.Fade$1
    public final synthetic androidx.transition.Fade this$0
androidx.cardview.widget.CardView$1
    public void setCardBackground(android.graphics.drawable.Drawable)
    public boolean getUseCompatPadding()
    public void setMinWidthHeightInternal(int,int)
    public android.graphics.drawable.Drawable getCardBackground()
    public android.view.View getCardView()
android.support.v4.media.session.PlaybackStateCompat$CustomAction
    public java.lang.Object mCustomActionObj
androidx.appcompat.app.WindowDecorActionBar$3
    public void onAnimationUpdate(android.view.View)
c.jahhow.remotecontroller.PurchaseFragment
    public static synthetic c.jahhow.remotecontroller.RemoteControllerApp access$000(c.jahhow.remotecontroller.PurchaseFragment)
    public static synthetic void access$100(c.jahhow.remotecontroller.PurchaseFragment)
    public static synthetic c.jahhow.remotecontroller.RemoteControllerApp$FetchSkuListener access$200(c.jahhow.remotecontroller.PurchaseFragment)
    public static synthetic androidx.appcompat.app.AppCompatActivity access$300(c.jahhow.remotecontroller.PurchaseFragment)
    public static synthetic c.jahhow.remotecontroller.ControllerSwitcherFragment access$400(c.jahhow.remotecontroller.PurchaseFragment)
    public static final synthetic boolean $assertionsDisabled
androidx.appcompat.view.SupportMenuInflater
    public java.lang.Object getRealOwner()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1
    public final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams
    public boolean isViewInvalid()
androidx.appcompat.widget.TintTypedArray
    public java.lang.CharSequence[] getTextArray(int)
    public void recycle()
com.android.billingclient.api.SkuDetails$SkuDetailsResult
    public java.util.List getSkuDetailsList()
    public int getResponseCode()
    public java.lang.String getDebugMessage()
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
    public abstract void onNavigationItemReselected(android.view.MenuItem)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
    public java.lang.String getFileName()
    public int getWeight()
    public boolean isItalic()
    public java.lang.String getVariationSettings()
    public int getTtcIndex()
    public int getResourceId()
androidx.core.graphics.PathParser$PathDataNode
    public static void addCommand(android.graphics.Path,float[],char,char,float[])
    public static void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
com.google.android.material.floatingactionbutton.FloatingActionButton$1
    public void onShown()
    public void onHidden()
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener val$listener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.app.ToolbarActionBar
android.support.v4.media.MediaDescriptionCompatApi23
androidx.appcompat.view.menu.MenuDialogHelper
    public void show(android.os.IBinder)
    public void dismiss()
androidx.core.view.ViewParentCompat
c.jahhow.remotecontroller.MyFragment
    public boolean hasNoChildFragment()
    public boolean isNotRestoringState()
androidx.transition.Scene
    public static void setCurrentScene(android.view.View,androidx.transition.Scene)
    public void exit()
com.google.android.material.transformation.FabTransformationBehavior$2
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.core.widget.PopupWindowCompat
androidx.fragment.app.FragmentTransitionImpl$1
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.fragment.app.FragmentManager$1
    public void handleOnBackPressed()
c.jahhow.remotecontroller.MotionAdjuster
androidx.appcompat.widget.SearchView
    public final void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
    public final boolean hasVoiceSearch()
    public final void postUpdateFocusedState()
    public final java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
    public final void updateSearchAutoComplete()
    public final void dismissSuggestions()
    public final void rewriteQueryFromSuggestion(int)
    public final boolean launchSuggestion(int,int,java.lang.String)
    public final void launchIntent(android.content.Intent)
    public final android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
    public final android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
    public androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
    public androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
    public androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
androidx.core.view.NestedScrollingParentHelper
    public void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public void onNestedScrollAccepted(int,int)
    public void onStopNestedScroll(int)
androidx.transition.ChangeBounds$7
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.lifecycle.Lifecycling
    public static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    public static int resolveObserverCallbackType(java.lang.Class)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo
    public void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
    public void assignCoordinateFromPadding()
    public void assignCoordinateFromPadding(int)
androidx.legacy.widget.Space
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.FullLifecycleObserverAdapter$1
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
    public abstract int onGetChildDrawingOrder(int,int)
androidx.appcompat.app.TwilightCalculator
    public static androidx.appcompat.app.TwilightCalculator getInstance()
androidx.transition.ViewUtilsApi22
    public final void fetchSetLeftTopRightBottomMethod()
com.android.billingclient.api.AcknowledgePurchaseParams$Builder
androidx.appcompat.view.menu.CascadingMenuPopup
    public final androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
    public final int getInitialMenuPosition()
    public final int getNextMenuPosition(int)
    public final android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
    public final android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
    public final int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.graphics.drawable.StateListDrawable
    public int[] extractStateSet(android.util.AttributeSet)
com.android.billingclient.api.Purchase
    public java.lang.String getSku()
    public java.lang.String getPurchaseToken()
    public boolean isAcknowledged()
    public java.lang.String getOriginalJson()
    public java.lang.String getSignature()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable
    public void setEnabled(boolean)
androidx.core.util.Preconditions
androidx.core.provider.FontsContractCompat$FontFamilyResult
    public int getStatusCode()
    public androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
androidx.core.widget.CompoundButtonCompat
com.android.billingclient.api.PurchaseApiResponseChecker
androidx.core.text.TextUtilsCompat
androidx.appcompat.content.res.AppCompatResources
    public static android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
    public static boolean isColorInt(android.content.Context,int)
    public static android.util.TypedValue getTypedValue()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1
    public android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation
    public float getTargetShadowSize()
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback
    public final synthetic androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
androidx.recyclerview.widget.LayoutState
    public boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
com.android.billingclient.api.BillingClientImpl$6
    public android.os.Bundle call()
androidx.lifecycle.ViewModel
    public static void closeWithRuntimeException(java.lang.Object)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
c.jahhow.remotecontroller.ExponentialSmoothing
    public float Smoothen(float)
    public void setValue(float)
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo
    public void assignCoordinateFromPadding()
    public boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
    public void assignFromViewAndKeepVisibleRect(android.view.View,int)
    public void assignFromView(android.view.View,int)
c.jahhow.remotecontroller.SwipeCardView
    public final void Indicate(float)
androidx.appcompat.widget.AppCompatTextHelper
    public void setTypefaceByCallback(android.graphics.Typeface)
    public void runOnUiThread(java.lang.Runnable)
    public void setAllCaps(boolean)
    public void onSetCompoundDrawables()
    public void onLayout()
    public void setTextSize(int,float)
    public void autoSizeText()
    public android.content.res.ColorStateList getCompoundDrawableTintList()
    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    public final void setTextSizeInternal(int,float)
    public final void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.ImageViewCompat
androidx.appcompat.widget.AlertDialogLayout
    private void setChildFrame(android.view.View,int,int,int,int)
    public final boolean tryOnMeasure(int,int)
com.google.android.material.math.MathUtils
androidx.appcompat.widget.SearchView$OnCloseListener
    public abstract boolean onClose()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1
    public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int)
c.jahhow.remotecontroller.BluetoothCommonErrorFragment$1
    public static final synthetic boolean $assertionsDisabled
com.android.billingclient.api.BillingResult$Builder
    public void <init>()
    public com.android.billingclient.api.BillingResult$Builder setResponseCode(int)
    public com.android.billingclient.api.BillingResult$Builder setDebugMessage(java.lang.String)
com.android.billingclient.api.BillingClientStateListener
    public abstract void onBillingSetupFinished(com.android.billingclient.api.BillingResult)
    public abstract void onBillingServiceDisconnected()
androidx.media.AudioAttributesCompat
    public static final int[] SDK_USAGES
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
    public final android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
    public final android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.TooltipCompatHandler
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public final void scheduleShow()
    public final void cancelPendingShow()
    public final boolean updateAnchorPos(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDialog
    public static int getThemeResId(android.content.Context,int)
    public boolean supportRequestWindowFeature(int)
androidx.appcompat.widget.ViewStubCompat
    public androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
com.google.android.material.transformation.FabTransformationScrimBehavior$1
    public final synthetic com.google.android.material.transformation.FabTransformationScrimBehavior this$0
c.jahhow.remotecontroller.SwipeDetectorLayout
    public static synthetic c.jahhow.remotecontroller.SwipeCardView access$100(c.jahhow.remotecontroller.SwipeDetectorLayout)
    public static synthetic java.lang.Runnable access$200(c.jahhow.remotecontroller.SwipeDetectorLayout)
    public static synthetic c.jahhow.remotecontroller.MainActivity access$300(c.jahhow.remotecontroller.SwipeDetectorLayout)
    public final void Demo()
    public final void AnimateShowView(android.view.View)
    public final void NewActivePointer(android.view.MotionEvent)
    public final void MigrateTouchPoint(float,float,float,float)
    public final void MoveCurChild(android.view.MotionEvent)
    public final void computePointerDiff(android.view.MotionEvent,int)
    public final long duration
androidx.appcompat.graphics.drawable.DrawableContainer
    public int getCurrentIndex()
    public final void updateDensity(android.content.res.Resources)
    public void applyTheme(android.content.res.Resources$Theme)
    public final boolean needsMirroring()
    public int mLastIndex
androidx.core.view.accessibility.AccessibilityRecordCompat
androidx.transition.ChangeBounds$5
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.fragment.app.FragmentViewLifecycleOwner
    public void initialize()
    public boolean isInitialized()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
android.support.v4.media.MediaDescriptionCompat$Builder
androidx.appcompat.app.ActionBar$Tab
    public void <init>()
androidx.fragment.app.FragmentStateManager
    public androidx.fragment.app.Fragment getFragment()
    public void setFragmentManagerState(int)
    public int computeMaxState()
    public void ensureInflatedView()
    public void attach(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public void create()
    public void createView(androidx.fragment.app.FragmentContainer)
    public void activityCreated()
    public void restoreViewState()
    public void start()
    public void resume()
    public void pause()
    public void stop()
    public androidx.fragment.app.FragmentState saveState()
    public void destroy(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManagerViewModel)
    public void detach(androidx.fragment.app.FragmentManagerViewModel)
    public final android.os.Bundle saveBasicState()
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.fragment.app.FragmentActivity
    public final void markFragmentsCreated()
androidx.core.view.ViewConfigurationCompat
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
    public void onAnimationsEnded()
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.transition.Transition
    public long getStartDelay()
    public android.animation.TimeInterpolator getInterpolator()
    public java.util.List getTargetIds()
    public java.util.List getTargets()
    public java.util.List getTargetNames()
    public java.util.List getTargetTypes()
    public void animate(android.animation.Animator)
    public androidx.transition.PathMotion getPathMotion()
    public androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
    public void getPropagation()
    public java.lang.String getName()
    public final void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
    public final void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
    public final void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
    public final void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
    public android.view.ViewGroup mSceneRoot
    public androidx.transition.TransitionPropagation mPropagation
com.android.billingclient.api.BillingClientImpl$18
    public java.lang.Void call()
com.android.billingclient.api.BillingClientImpl$4
    public android.os.Bundle call()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
    public boolean hasPanelItems()
    public androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.transition.TransitionUtils
    public static android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
androidx.core.view.ViewPropertyAnimatorCompat
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public void start()
androidx.core.content.res.ComplexColorCompat
    public static androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
    public static androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
    public static androidx.core.content.res.ComplexColorCompat from(int)
    public static androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public int getColor()
    public void setColor(int)
com.google.android.material.shadow.ShadowViewDelegate
    public abstract float getRadius()
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract boolean isCompatPaddingEnabled()
android.support.v4.media.MediaBrowserCompat$ItemReceiver
    public final java.lang.String mMediaId
    public final android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback
androidx.recyclerview.widget.GapWorker$Task
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.expandable.ExpandableWidgetHelper
androidx.customview.widget.ViewDragHelper
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
    public int getTouchSlop()
    public boolean smoothSlideViewTo(android.view.View,int,int)
    public boolean isPointerDown(int)
    public boolean isCapturedViewUnder(int,int)
    public boolean isViewUnder(android.view.View,int,int)
    public final int computeSettleDuration(android.view.View,int,int,int,int)
    public final float distanceInfluenceForSnapDuration(float)
    public final void clearMotionHistory()
    public final void ensureMotionHistorySizeForId(int)
    public final void dragTo(int,int,int,int)
    public final int getEdgesTouched(int,int)
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.cardview.widget.RoundRectDrawableWithShadow
    public void setAddPaddingForCorners(boolean)
    public float getCornerRadius()
    public void getMaxShadowAndCornerPadding(android.graphics.Rect)
    public void setShadowSize(float)
    public void setMaxShadowSize(float)
    public float getShadowSize()
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final int toEven(float)
    public final void drawShadow(android.graphics.Canvas)
    public final void buildShadowCorners()
    public final void buildComponents(android.graphics.Rect)
androidx.core.view.ViewCompat$4
    public java.lang.CharSequence frameworkGet(android.view.View)
androidx.arch.core.internal.FastSafeIterableMap
    public java.util.Map$Entry ceil(java.lang.Object)
androidx.appcompat.widget.Toolbar
    public final void postShowOverflowMenu()
    public final boolean shouldCollapse()
    public final int getViewListMeasuredWidth(java.util.List,int[])
    public final int getChildVerticalGravity(int)
androidx.appcompat.view.menu.SubMenuBuilder
    public android.view.Menu getParentMenu()
androidx.core.provider.FontsContractCompat$2
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton
    public final float[] mTempPts
c.jahhow.remotecontroller.RemoteControllerApp$2
    public final synthetic c.jahhow.remotecontroller.RemoteControllerApp this$0
androidx.appcompat.widget.SearchView$OnSuggestionListener
    public abstract boolean onSuggestionSelect(int)
    public abstract boolean onSuggestionClick(int)
androidx.appcompat.widget.AppCompatCheckedTextView
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl
    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
    public abstract float getTargetShadowSize()
    public float shadowSizeStart
    public float shadowSizeEnd
androidx.transition.ViewOverlayApi14
    public static android.view.ViewGroup getContentView(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat
    public final void setChildFrame(android.view.View,int,int,int,int)
c.jahhow.remotecontroller.MainActivity
    public static synthetic c.jahhow.remotecontroller.RemoteControllerApp access$000(c.jahhow.remotecontroller.MainActivity)
    public final void ShowHelpFragment()
    public final void ShowToast(int)
    public final void ShowToast(java.lang.String,int)
    public final void OnSendCommandError(int,int)
androidx.fragment.app.FragmentManagerViewModel
    public static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.transition.ChangeBounds$3
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
com.google.android.material.circularreveal.CircularRevealCompat
androidx.recyclerview.widget.RecyclerView$4
    public void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatCompoundButtonHelper
    public void setSupportButtonTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportButtonTintList()
    public void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportButtonTintMode()
    public void onSetButtonDrawable()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    public final boolean selectTransition(int)
    public final void updateStateFromTypedArray(android.content.res.TypedArray)
    public final void init()
    public final void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static final java.lang.String LOGTAG
androidx.core.graphics.TypefaceCompatBaseImpl$1
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
    public int getAnchorId()
    public androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
    public void setLastChildRect(android.graphics.Rect)
    public android.graphics.Rect getLastChildRect()
    public boolean checkAnchorChanged()
    public boolean didBlockInteraction()
    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void resetTouchBehaviorTracking()
    public void resetNestedScroll(int)
    public boolean getChangedAfterNestedScroll()
    public void setChangedAfterNestedScroll(boolean)
    public void resetChangedAfterNestedScroll()
    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean shouldDodge(android.view.View,int)
    public java.lang.Object mBehaviorTag
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatHintHelper
androidx.fragment.app.FragmentManagerState$1
    public androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.arch.core.internal.SafeIterableMap
    public int size()
    public java.util.Iterator descendingIterator()
    public java.util.Map$Entry eldest()
    public java.util.Map$Entry newest()
androidx.cursoradapter.widget.CursorAdapter
    public void init(android.content.Context,android.database.Cursor,int)
    public android.database.Cursor getCursor()
    public abstract android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
    public android.database.Cursor swapCursor(android.database.Cursor)
    public void onContentChanged()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
c.jahhow.remotecontroller.AirMouseLayout
    public final float scale
    public final long r
    public final int t
    public final int u
androidx.transition.AnimatorUtils
com.google.android.material.internal.DrawableUtils
    public static boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState)
    public static boolean setContainerConstantStateV9(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState)
    public static boolean isLayoutRtl(android.view.View)
    public static float distanceToFurthestCorner(float,float,float,float,float,float)
    public static float max(float,float,float,float)
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager
    public void setMeasureSpecs(int,int)
    public void setMeasuredDimensionFromChildren(int,int)
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    public void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View findContainingItemView(android.view.View)
    public android.view.View findViewByPosition(int)
    public android.view.View getFocusedChild()
    public void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
    public android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public boolean isViewPartiallyVisible(android.view.View,boolean)
    public void setMeasuredDimension(int,int)
    public int getMinimumWidth()
    public int getMinimumHeight()
    public void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
    public boolean shouldMeasureTwice()
    public boolean hasFlexibleChildInBothOrientations()
    public final void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    public final boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
com.google.android.gms.internal.play_billing.zzf
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper
    public void loadFromAttributes(android.util.AttributeSet,int)
    public void setAutoSizeTextTypeWithDefaults(int)
    public void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public void initTempTextPaint(int)
    public android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public boolean isAutoSizeEnabled()
    public final void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    public final void clearAutoSizeConfiguration()
    public final void setRawTextSize(float)
    public final boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
    public final android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.transition.ViewGroupOverlayApi14
    public static androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup)
androidx.lifecycle.SavedStateHandleController
    public static androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)
android.support.v4.media.MediaMetadataCompat
    public static final java.lang.String[] PREFERRED_DESCRIPTION_ORDER
    public static final java.lang.String[] PREFERRED_BITMAP_ORDER
    public static final java.lang.String[] PREFERRED_URI_ORDER
com.google.android.material.animation.ImageMatrixProperty
    public void set(android.widget.ImageView,android.graphics.Matrix)
    public android.graphics.Matrix get(android.widget.ImageView)
androidx.recyclerview.widget.DefaultItemAnimator
    public void runPendingAnimations()
    public boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
    public final void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public static android.animation.TimeInterpolator sDefaultInterpolator
androidx.core.view.ViewGroupCompat
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient
    public abstract java.lang.CharSequence convertToString(android.database.Cursor)
    public abstract android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public abstract android.database.Cursor getCursor()
    public abstract void changeCursor(android.database.Cursor)
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener
    public abstract void onDetachedFromWindow()
    public abstract void onAttachedFromWindow()
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
    public void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public final void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
    public final void initQuad(float,float)
    public final void initCubic(float,float,float,float)
android.support.v4.media.MediaBrowserCompat$MediaItem$1
    public android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int)
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.cardview.widget.CardViewApi17Impl$1
    public final synthetic androidx.cardview.widget.CardViewApi17Impl this$0
com.google.android.material.appbar.AppBarLayout
    public final boolean hasCollapsibleChild()
    public final void invalidateScrollRanges()
    public final void setExpanded(boolean,boolean,boolean)
    public final boolean setLiftableState(boolean)
android.support.v4.media.session.MediaControllerCompatApi21
c.jahhow.remotecontroller.TcpIpConnectorFragment
    public static synthetic c.jahhow.remotecontroller.MainViewModel access$000(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic java.lang.Runnable access$100(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic void access$300(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic android.widget.Button access$400(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic c.jahhow.remotecontroller.MainActivity access$500(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic com.google.android.material.textfield.TextInputEditText access$600(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic com.google.android.material.textfield.TextInputEditText access$700(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic android.content.SharedPreferences access$800(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic java.lang.Runnable access$900(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic c.jahhow.remotecontroller.ControllerSwitcherFragment access$1000(c.jahhow.remotecontroller.TcpIpConnectorFragment)
    public static synthetic boolean access$1102(c.jahhow.remotecontroller.TcpIpConnectorFragment,boolean)
    public static synthetic boolean access$1202(c.jahhow.remotecontroller.TcpIpConnectorFragment,boolean)
    public static synthetic int access$1302(c.jahhow.remotecontroller.TcpIpConnectorFragment,int)
    public final void AnimateShowHelpButton()
    public static final synthetic boolean $assertionsDisabled
androidx.lifecycle.ProcessLifecycleOwner
    public static void init(android.content.Context)
    public void activityPaused()
    public void activityStopped()
    public void dispatchPauseIfNeeded()
androidx.transition.ChangeBounds$1
    public void set(android.graphics.drawable.Drawable,android.graphics.PointF)
    public android.graphics.PointF get(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator
    public static java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
    public static java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
    public static java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
    public static java.lang.reflect.Field getMainThreadField()
    public static java.lang.reflect.Field getTokenField()
    public static java.lang.Class getActivityThreadClass()
androidx.transition.ChangeBounds$ViewBounds
    public final void setLeftTopRightBottom()
androidx.appcompat.widget.AppCompatTextClassifierHelper
    public void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
androidx.transition.TransitionSet$1
    public final synthetic androidx.transition.TransitionSet this$0
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener
    public abstract void onShown()
    public abstract void onHidden()
androidx.customview.view.AbsSavedState$2
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
    public androidx.customview.view.AbsSavedState[] newArray(int)
androidx.appcompat.app.TwilightManager
    public static androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
    public boolean isNight()
    public final android.location.Location getLastKnownLocation()
    public final boolean isStateValid()
    public final void updateState(android.location.Location)
androidx.core.view.GravityCompat
androidx.transition.ChangeBounds
    public final boolean parentMatches(android.view.View,android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState
    public void invalidateCache()
    public final int getCapacity()
    public final int getChildCount()
    public final boolean setLayoutDirection(int,int)
    public final void setVariablePadding(boolean)
    public final android.graphics.Rect getConstantPadding()
    public final void setConstantSize(boolean)
    public final boolean isConstantSize()
    public final int getConstantWidth()
    public final int getConstantHeight()
    public final int getConstantMinimumWidth()
    public final int getConstantMinimumHeight()
    public final void setEnterFadeDuration(int)
    public final void setExitFadeDuration(int)
    public final int getOpacity()
    public final android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.ScrollbarHelper
com.google.android.material.internal.StateListAnimator
    public void setState(int[])
    public void jumpToCurrentState()
    public final void start(com.google.android.material.internal.StateListAnimator$Tuple)
    public final void cancel()
androidx.fragment.app.FragmentState$1
    public androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentState[] newArray(int)
androidx.recyclerview.widget.AdapterHelper$Callback
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    public abstract void offsetPositionsForRemovingInvisible(int,int)
    public abstract void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public abstract void markViewHoldersUpdated(int,int,java.lang.Object)
    public abstract void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void offsetPositionsForAdd(int,int)
    public abstract void offsetPositionsForMove(int,int)
androidx.appcompat.widget.VectorEnabledTintResources
    public void <init>(android.content.Context,android.content.res.Resources)
    public static boolean isCompatVectorFromResourcesEnabled()
    public static void <clinit>()
    public android.graphics.drawable.Drawable getDrawable(int)
    public final android.graphics.drawable.Drawable superGetDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
    public static boolean sCompatVectorFromResourcesEnabled
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
    public java.util.Map$Entry next()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    public long runningAverage(long,long)
    public void factorInCreateTime(int,long)
    public void factorInBindTime(int,long)
    public boolean willCreateInTime(int,long,long)
    public boolean willBindInTime(int,long,long)
androidx.collection.MapCollections$MapIterator
    public java.util.Map$Entry next()
com.google.android.gms.internal.play_billing.zzd
    public static void <clinit>()
    public static com.google.android.gms.internal.play_billing.zzf zza
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
android.support.v4.media.MediaDescriptionCompatApi21$Builder
    public static java.lang.Object newInstance()
    public static void setMediaId(java.lang.Object,java.lang.String)
    public static void setTitle(java.lang.Object,java.lang.CharSequence)
    public static void setSubtitle(java.lang.Object,java.lang.CharSequence)
    public static void setDescription(java.lang.Object,java.lang.CharSequence)
    public static void setIconBitmap(java.lang.Object,android.graphics.Bitmap)
    public static void setIconUri(java.lang.Object,android.net.Uri)
    public static void setExtras(java.lang.Object,android.os.Bundle)
    public static java.lang.Object build(java.lang.Object)
    public static java.lang.String getMediaId(java.lang.Object)
    public static java.lang.CharSequence getTitle(java.lang.Object)
    public static java.lang.CharSequence getSubtitle(java.lang.Object)
    public static java.lang.CharSequence getDescription(java.lang.Object)
    public static android.graphics.Bitmap getIconBitmap(java.lang.Object)
    public static android.net.Uri getIconUri(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static void writeToParcel(java.lang.Object,android.os.Parcel,int)
    public static java.lang.Object fromParcel(android.os.Parcel)
    public static void setMediaUri(java.lang.Object,android.net.Uri)
    public static android.net.Uri getMediaUri(java.lang.Object)
    public static void writeToParcel1(java.lang.Object,android.os.Parcel,int)
    public static android.media.AudioAttributes getAudioAttributes(java.lang.Object)
    public static int getLegacyAudioStream(java.lang.Object)
    public static int toLegacyStreamType(android.media.AudioAttributes)
    public static java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
    public static java.lang.Object getDescription(java.lang.Object)
    public static long getQueueId(java.lang.Object)
    public static java.lang.String getAction(java.lang.Object)
    public static java.lang.CharSequence getName(java.lang.Object)
    public static int getIcon(java.lang.Object)
    public static android.os.Bundle getExtras1(java.lang.Object)
    public static int getState(java.lang.Object)
    public static long getPosition(java.lang.Object)
    public static long getBufferedPosition(java.lang.Object)
    public static float getPlaybackSpeed(java.lang.Object)
    public static long getActions(java.lang.Object)
    public static java.lang.CharSequence getErrorMessage(java.lang.Object)
    public static long getLastPositionUpdateTime(java.lang.Object)
    public static java.util.List getCustomActions(java.lang.Object)
    public static long getActiveQueueItemId(java.lang.Object)
    public static android.os.Bundle getExtras2(java.lang.Object)
    public static void flush(android.content.res.Resources)
    public static void flushLollipops(android.content.res.Resources)
    public static void flushMarshmallows(android.content.res.Resources)
    public static void flushNougats(android.content.res.Resources)
    public static java.lang.String permissionToOp(java.lang.String)
    public static int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
    public static android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
    public static boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
    public static void navigateUpTo(android.app.Activity,android.content.Intent)
    public static java.lang.String getParentActivityName(android.app.Activity)
    public static int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static int modulateColorAlpha(int,float)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static int getType(android.content.res.TypedArray,int)
    public static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
    public static android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
    public static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    public static void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static int nextStart(java.lang.String,int)
    public static void addNode(java.util.ArrayList,char,float[])
    public static float[] getFloats(java.lang.String)
    public static void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
    public static java.nio.ByteBuffer mmap(java.io.File)
    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
    public static void closeQuietly(java.io.Closeable)
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static float clamp(float,float,float)
    public static boolean equals(java.lang.Object,java.lang.Object)
    public static java.lang.Object checkNotNull(java.lang.Object)
    public static int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
    public static int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
    public static android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
    public static void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
    public static void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
    public static void setNumericShortcut(android.view.MenuItem,char,int)
    public static void setAlphabeticShortcut(android.view.MenuItem,char,int)
    public static void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
    public static void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
    public static boolean isFromSource(android.view.MotionEvent,int)
    public static boolean isTransitionGroup(android.view.ViewGroup)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
    public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
    public static boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
    public static boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
    public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
    public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
    public static void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
    public static void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
    public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
    public static void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
    public static void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
    public static void scrollListBy(android.widget.ListView,int)
    public static void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    public static void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
    public static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    public static int getTextDirection(android.text.TextDirectionHeuristic)
    public static void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
    public static void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
    public static void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback)
    public static int transitToAnimResourceId(int,boolean)
    public static void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
    public static void pause(android.animation.Animator)
    public static void resume(android.animation.Animator)
    public static android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
    public static androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup)
    public static void suppressLayout1(android.view.ViewGroup,boolean)
    public static void cancelLayoutTransition(android.animation.LayoutTransition)
    public static void suppressLayout2(android.view.ViewGroup,boolean)
    public static void fetchSuppressLayoutMethod()
    public static android.animation.Animator loadAnimator(android.content.Context,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
    public static void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
    public static void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
    public static void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
    public static android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public static int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public static int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
    public static android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void distributeKeyframes(android.animation.Keyframe[],float,int,int)
    public static android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
    public static double GetMultiplierV3(double,double,double,double)
    public static double GetDefaultMouseMoveMultiplier(double,double)
    public static double GetDefaultScrollMultiplier(double)
    public static com.android.billingclient.api.BillingResult checkPurchasesBundleValidity(android.os.Bundle,java.lang.String,java.lang.String)
    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
androidx.cursoradapter.widget.ResourceCursorAdapter
    public android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
    public final int mPlaybackType
    public final int mAudioStream
    public final int mVolumeControl
    public final int mMaxVolume
    public final int mCurrentVolume
androidx.appcompat.view.menu.BaseMenuWrapper
    public final void internalClear()
    public final void internalRemoveGroup(int)
    public final void internalRemoveItem(int)
androidx.core.widget.ListViewAutoScrollHelper
    public void scrollTargetBy(int,int)
    public boolean canTargetScrollHorizontally(int)
    public boolean canTargetScrollVertically(int)
com.google.android.material.bottomappbar.BottomAppBar$2
androidx.transition.PropertyValuesHolderUtils
androidx.appcompat.view.ActionBarPolicy
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21
    public void onSessionDestroyed()
    public void onSessionEvent(java.lang.String,android.os.Bundle)
    public void onPlaybackStateChanged(java.lang.Object)
    public void onMetadataChanged(java.lang.Object)
    public void onQueueChanged(java.util.List)
    public void onQueueTitleChanged(java.lang.CharSequence)
    public void onExtrasChanged(android.os.Bundle)
    public void onAudioInfoChanged(int,int,int,int,int)
androidx.arch.core.executor.ArchTaskExecutor$2
    public void <init>()
androidx.arch.core.executor.ArchTaskExecutor
    public static final java.util.concurrent.Executor sMainThreadExecutor
    public static final java.util.concurrent.Executor sIOThreadExecutor
androidx.activity.ComponentActivity$NonConfigurationInstances
    public java.lang.Object custom
androidx.recyclerview.widget.AdapterHelper$UpdateOp
    public java.lang.String cmdToString()
androidx.appcompat.view.WindowCallbackWrapper
    public boolean dispatchKeyEvent(android.view.KeyEvent)
    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    public boolean onCreatePanelMenu(int,android.view.Menu)
    public boolean onPreparePanel(int,android.view.View,android.view.Menu)
    public boolean onMenuOpened(int,android.view.Menu)
    public void onPanelClosed(int,android.view.Menu)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
    public void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
    public final android.view.Window$Callback getWrapped()
androidx.lifecycle.MethodCallsLogger
    public java.util.Map mCalledMethods
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1
    public void onTouchExplorationStateChanged(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
    public int getGapForSpan(int)
androidx.core.graphics.TypefaceCompatApi24Impl
    public static boolean isUsable()
    public static java.lang.Object newFamily()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup
    public int getSpan(int)
    public void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public int sizeForPosition(int)
    public final void offsetFullSpansForRemoval(int,int)
    public final void offsetFullSpansForAddition(int,int)
    public final int invalidateFullSpansAfter(int)
androidx.appcompat.widget.DecorToolbar
    public abstract android.view.ViewGroup getViewGroup()
    public abstract android.content.Context getContext()
    public abstract boolean hasExpandedActionView()
    public abstract void collapseActionView()
    public abstract void setWindowCallback(android.view.Window$Callback)
    public abstract void setWindowTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getTitle()
    public abstract void initProgress()
    public abstract void initIndeterminateProgress()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract boolean canShowOverflowMenu()
    public abstract boolean isOverflowMenuShowing()
    public abstract boolean isOverflowMenuShowPending()
    public abstract boolean showOverflowMenu()
    public abstract boolean hideOverflowMenu()
    public abstract void setMenuPrepared()
    public abstract void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public abstract void dismissPopupMenus()
    public abstract int getDisplayOptions()
    public abstract void setDisplayOptions(int)
    public abstract void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
    public abstract void setCollapsible(boolean)
    public abstract void setHomeButtonEnabled(boolean)
    public abstract int getNavigationMode()
    public abstract androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    public abstract void setVisibility(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState
    public boolean hasValidAnchor()
    public void invalidateAnchor()
androidx.appcompat.widget.DropDownListView
    public final void clickPressedItem(android.view.View,int)
    public final void drawSelectorCompat(android.graphics.Canvas)
    public final void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
    public final void positionSelectorLikeFocusCompat(int,android.view.View)
    public final void positionSelectorCompat(int,android.view.View)
    public final void clearPressedItem()
    public final void setPressedItem(android.view.View,int,float,float)
    public final boolean touchModeDrawsInPressedStateCompat()
androidx.appcompat.widget.ListPopupWindow
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setPromptPosition(int)
    public boolean isModal()
    public void setAnimationStyle(int)
    public android.view.View getAnchorView()
    public void setAnchorView(android.view.View)
    public void setDropDownGravity(int)
    public int getWidth()
    public void setWidth(int)
    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setInputMethodMode(int)
    public void setSelection(int)
    public void clearListSelection()
    public boolean isInputMethodNotNeeded()
    public void setOverlapAnchor(boolean)
    public final void removePromptView()
    public final int buildDropDown()
    public final void setPopupClipToScreenEnabled(boolean)
    public final int getMaxAvailableHeight(android.view.View,int,boolean)
    public boolean mIsAnimatedFromAnchor
    public java.lang.Runnable mShowDropDownRunnable
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
    public final java.lang.String mQuery
    public final android.os.Bundle mExtras
    public final android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback
androidx.appcompat.widget.MenuPopupWindow
    public void setEnterTransition(java.lang.Object)
    public void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
    public void setTouchModal(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
    public static boolean isBottomSheet(android.view.View)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener
androidx.coordinatorlayout.widget.CoordinatorLayout
    public static int resolveAnchoredChildGravity(int)
    public static int clamp(int,int,int)
    public final androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    public final void layoutChildWithAnchor(android.view.View,android.view.View,int)
    public final void layoutChildWithKeyline(android.view.View,int,int)
    public final void layoutChild(android.view.View,int)
    public final void offsetChildByInset(android.view.View,android.graphics.Rect,int)
    public final boolean hasDependencies(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem
    public androidx.core.internal.view.SupportMenuItem setActionView()
    public androidx.core.internal.view.SupportMenuItem setActionView1()
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public final int mCategoryOrder
    public int mIconResId
    public android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.appcompat.widget.AppCompatPopupWindow
    public final void init(android.content.Context,android.util.AttributeSet,int,int)
    public final void setSupportOverlapAnchor(boolean)
androidx.transition.TransitionPropagation
    public abstract long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract void captureValues(androidx.transition.TransitionValues)
    public abstract java.lang.String[] getPropagationProperties()
androidx.transition.ViewUtilsApi19
    public final void fetchSetTransitionAlphaMethod()
    public final void fetchGetTransitionAlphaMethod()
androidx.appcompat.app.AppCompatDelegateImpl$4
    public void onFitSystemWindows(android.graphics.Rect)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl
    public void setPrefetchVector(int,int)
    public void clearPrefetchPositions()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
    public boolean isFullSpan()
    public final int getSpanIndex()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
    public void resetInternal()
androidx.core.view.ViewPropertyAnimatorCompat$2
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.view.menu.ListMenuItemView
    public final void insertIconView()
    public int mMenuType
androidx.appcompat.view.menu.MenuPopup
    public static androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
    public void setEpicenterBounds(android.graphics.Rect)
androidx.core.text.TextDirectionHeuristicsCompat
    public static final androidx.core.text.TextDirectionHeuristicCompat LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat RTL
    public static final androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.google.android.gms.internal.play_billing.zzb
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,android.os.Bundle)
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String)
    public final android.os.Bundle zza(int,java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String)
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public final android.os.Bundle zzc(int,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
    public final android.os.Bundle zza(int,java.lang.String,java.lang.String,android.os.Bundle,android.os.Bundle)
    public final android.os.Bundle zzd(int,java.lang.String,java.lang.String,android.os.Bundle)
androidx.transition.ObjectAnimatorUtils
androidx.transition.ViewGroupUtils
com.android.billingclient.api.SkuDetailsParams$1
androidx.core.graphics.drawable.DrawableCompat
com.google.android.material.floatingactionbutton.FloatingActionButton
    public static synthetic int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
    public final com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
    public final synthetic androidx.recyclerview.widget.RecyclerView this$0
androidx.arch.core.internal.SafeIterableMap$ListIterator
    public java.util.Map$Entry next()
com.google.android.material.shape.EdgeTreatment
androidx.coordinatorlayout.widget.ViewGroupUtils
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
    public final void readFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState
    public void setupAnimatorSet()
com.google.android.material.transformation.ExpandableTransformationBehavior
    public static synthetic android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
c.jahhow.remotecontroller.ArrowButtonFragment$1
    public final synthetic c.jahhow.remotecontroller.ArrowButtonFragment this$0
androidx.appcompat.app.AlertController
    public static boolean shouldCenterSingleButton(android.content.Context)
    public void installContent()
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(int)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    public void setIcon(android.graphics.drawable.Drawable)
    public android.widget.ListView getListView()
    public boolean onKeyDown(android.view.KeyEvent)
    public boolean onKeyUp(android.view.KeyEvent)
    public final int selectContentView()
    public final void setupView()
    public final void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
    public final void setupCustomContent(android.view.ViewGroup)
    public final void setupTitle(android.view.ViewGroup)
    public final void setupContent(android.view.ViewGroup)
    public final void setupButtons(android.view.ViewGroup)
androidx.core.provider.FontsContractCompat
    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
    public static java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
    public static boolean equalsByteArrayList(java.util.List,java.util.List)
    public static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    public static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableWrapper
    public android.graphics.drawable.Drawable getWrappedDrawable()
    public void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
    public void setBundle(android.os.Bundle)
    public android.os.Bundle mBundle
    public static final android.os.Bundle sEmptyBundle
com.google.android.material.bottomnavigation.BottomNavigationPresenter
    public void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
    public void setId(int)
    public void setUpdateSuspended(boolean)
androidx.appcompat.widget.SearchView$SavedState$1
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.core.app.AppOpsManagerCompat
androidx.collection.MapCollections$EntrySet
    public boolean add()
com.android.billingclient.api.Purchase$PurchasesResult
    public com.android.billingclient.api.BillingResult getBillingResult()
    public int getResponseCode()
    public java.util.List getPurchasesList()
androidx.recyclerview.widget.RecyclerView$6
    public void offsetPositionsForRemovingInvisible(int,int)
    public void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void offsetPositionsForAdd(int,int)
    public void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.LinearLayoutManager
    public android.view.View findViewByPosition(int)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    public boolean shouldMeasureTwice()
    public int convertFocusDirectionToLayoutDirection(int)
    public android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
    public android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)
    public android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final void resolveShouldLayoutReverse()
    public final void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    public final void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    public final int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
    public final void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillEnd(int,int)
    public final void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillStart(int,int)
    public final void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
    public final void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
    public final android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
    public final android.view.View findLastPartiallyOrCompletelyInvisibleChild()
androidx.transition.TransitionSet
    public int getTransitionCount()
    public androidx.transition.TransitionSet setStartDelay(long)
    public androidx.transition.TransitionSet addTarget(android.view.View)
    public androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
    public androidx.transition.TransitionSet removeTarget(android.view.View)
    public androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
    public final void setupStartEndListeners()
android.support.v4.media.MediaBrowserCompat$SearchCallback
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
android.support.v4.os.ResultReceiver$MyResultReceiver
    public void send(int,android.os.Bundle)
androidx.core.widget.AutoScrollHelper
    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    public abstract void scrollTargetBy(int,int)
    public abstract boolean canTargetScrollHorizontally(int)
    public abstract boolean canTargetScrollVertically(int)
    public final void startAnimating()
    public final void requestStop()
    public final float getEdgeValue(float,float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
    public static android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
    public java.lang.Object getTargetByName(java.lang.String)
    public void setAllowCaching(boolean)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public final void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final boolean needMirroring()
    public android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
androidx.transition.FragmentTransitionSupport$1
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.google.android.material.animation.ArgbEvaluatorCompat
    public static com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
    public java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment
c.jahhow.remotecontroller.TouchPadView$DownEventList
    public int findById(int)
    public boolean isEqualToMoveEvent(android.view.MotionEvent)
com.google.android.material.button.MaterialButton
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final boolean isLayoutRTL()
androidx.lifecycle.LifecycleRegistry$1
androidx.transition.Visibility
    public void setMode(int)
    public void captureStartValues(androidx.transition.TransitionValues)
    public android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues,int)
androidx.transition.ChangeBounds$10
    public final synthetic androidx.transition.ChangeBounds this$0
com.android.billingclient.api.BillingClientImpl$10
    public java.lang.Void call()
com.google.android.material.snackbar.SnackbarManager
    public static com.google.android.material.snackbar.SnackbarManager getInstance()
    public final boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
    public final boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public final void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
androidx.fragment.app.FragmentTransitionCompat21$4
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
    public static int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
    public final void offsetChildAsNeeded(android.view.View,android.view.View)
    public final void updateLiftedStateIfNeeded(android.view.View,android.view.View)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState
    public int addStateSet(int[],android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    public static java.lang.String getActionSymbolicName(int)
    public static void <clinit>()
    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    public int getActions()
    public void addAction(int)
    public void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public void getBoundsInParent(android.graphics.Rect)
    public void getBoundsInScreen(android.graphics.Rect)
    public boolean isCheckable()
    public void setCheckable(boolean)
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isFocusable()
    public boolean isFocused()
    public boolean isSelected()
    public boolean isClickable()
    public boolean isLongClickable()
    public boolean isEnabled()
    public boolean isPassword()
    public boolean isScrollable()
    public void setScrollable(boolean)
    public java.lang.CharSequence getPackageName()
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.lang.CharSequence getText()
    public void setText(java.lang.CharSequence)
    public void addSpansToExtras(java.lang.CharSequence,android.view.View)
    public java.lang.CharSequence getContentDescription()
    public java.lang.String getViewIdResourceName()
    public void setContentInvalid(boolean)
    public void setHintText(java.lang.CharSequence)
    public void setError(java.lang.CharSequence)
    public void setPaneTitle(java.lang.CharSequence)
    public void setScreenReaderFocusable(boolean)
    public void setShowingHintText(boolean)
    public void setHeading(boolean)
    public final android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    public final android.util.SparseArray getSpansFromViewTags(android.view.View)
    public final int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
    public final boolean hasSpans()
    public final void clearExtrasSpans()
    public final void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
    public final void removeCollectedSpans(android.view.View)
com.google.android.material.shape.MaterialShapeDrawable
androidx.appcompat.widget.SuggestionsAdapter
    public final java.lang.CharSequence formatUrl(java.lang.CharSequence)
    public final void setViewText(android.widget.TextView,java.lang.CharSequence)
    public final android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
    public final void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
    public final android.graphics.drawable.Drawable getDrawable(android.net.Uri)
    public final android.graphics.drawable.Drawable checkIconCache(java.lang.String)
    public final void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getDefaultIcon1()
    public final android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
    public final android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
    public final android.app.SearchManager mSearchManager
androidx.recyclerview.widget.RecyclerView$ItemAnimator
    public long getAddDuration()
    public long getRemoveDuration()
    public long getChangeDuration()
    public void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void runPendingAnimations()
    public void onAnimationFinished()
    public abstract boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.android.billingclient.api.BillingClient$1
androidx.recyclerview.widget.RecyclerView$Recycler
    public void setViewCacheSize(int)
    public java.util.List getScrapList()
    public boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public android.view.View getViewForPosition(int)
    public android.view.View getViewForPosition(int,boolean)
    public void quickRecycleScrapView(android.view.View)
    public int getScrapCount()
    public android.view.View getScrapViewAt(int)
    public void clearScrap()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    public void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void offsetPositionRecordsForRemove(int,int,boolean)
    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    public void viewRangeUpdate(int,int)
    public void markKnownViewsInvalid()
    public void clearOldPositions()
    public void markItemDecorInsetsDirty()
    public final boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    public final void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(android.view.ViewGroup,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
com.google.android.material.textfield.TextInputLayout
    public static synthetic boolean access$000(com.google.android.material.textfield.TextInputLayout)
    public final void assignBoxBackgroundByMode()
    public final int calculateBoxBackgroundTop()
    public final int calculateCollapsedTextTopBounds()
    public final void updateEditTextBackgroundBounds()
    public final void setBoxAttributes()
    public final void ensureBackgroundDrawableStateWorkaround()
    public final boolean shouldShowPasswordIcon()
    public final void collapseHint(boolean)
    public final void closeCutout()
    public final void applyCutoutPadding(android.graphics.RectF)
    public final void expandHint(boolean)
com.google.android.material.behavior.SwipeDismissBehavior
    public static int clamp(int,int,int)
    public static float fraction(float,float,float)
    public final void ensureViewDragHelper(android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat
    public static java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat)
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.appcompat.widget.TooltipPopup
    public static android.view.View getAppRootView(android.view.View)
    public void show(android.view.View,int,int,boolean,java.lang.CharSequence)
    public final void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.fragment.app.FragmentStore
    public void resetActiveFragments()
    public void restoreAddedFragments(java.util.List)
    public void makeActive(androidx.fragment.app.FragmentStateManager)
    public androidx.fragment.app.Fragment findFragmentById(int)
    public androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation
    public float getTargetShadowSize()
android.support.v4.media.session.MediaSessionCompat$QueueItem
    public static android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
    public java.lang.Object mItem
androidx.appcompat.widget.ForwardingListener
    public static boolean pointInView(android.view.View,float,float,float)
    public void onLongPress()
    public final boolean onTouchObserved(android.view.MotionEvent)
    public final boolean onTouchForwarded(android.view.MotionEvent)
    public final boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
    public final boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
com.google.android.material.circularreveal.CircularRevealFrameLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.appcompat.view.menu.MenuBuilder
    public static int getOrdering(int)
    public static int findInsertIndex(java.util.ArrayList,int)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public void savePresenterStates(android.os.Bundle)
    public int findItemIndex(int)
    public int findGroupIndex(int)
    public int findGroupIndex(int,int)
    public android.content.res.Resources getResources()
    public android.content.Context getContext()
    public void changeMenuMode()
    public java.util.ArrayList getActionItems()
    public java.util.ArrayList getNonActionItems()
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    public java.lang.CharSequence getHeaderTitle()
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public boolean getOptionalIconsVisible()
    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    public void setOverrideVisibleItems(boolean)
    public final void dispatchPresenterUpdate(boolean)
    public final boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
    public final void dispatchSaveInstanceState(android.os.Bundle)
    public final void dispatchRestoreInstanceState(android.os.Bundle)
    public final androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
    public final void setShortcutsVisibleInner(boolean)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo
    public android.widget.ListView getListView()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
    public static void drainCache()
com.android.billingclient.api.BillingResult
    public static synthetic int access$102(com.android.billingclient.api.BillingResult,int)
    public static synthetic java.lang.String access$202(com.android.billingclient.api.BillingResult,java.lang.String)
    public final int getResponseCode()
    public java.lang.String zzb
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
    public void invalidateSpanIndexCache()
    public abstract int getSpanIndex(int,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
    public static androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public boolean mCreatingLoader
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.ThemeUtils
    public static android.util.TypedValue getTypedValue()
    public static int getThemeAttrColor(android.content.Context,int,float)
    public static final int[] ACTIVATED_STATE_SET
    public static final int[] SELECTED_STATE_SET
    public static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.appcompat.widget.AppCompatRatingBar
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.FastScroller
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void requestRedraw()
    public void hide(int)
    public void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
    public void updateScrollPosition(int,int)
    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final void resetHideDelay(int)
    public final void drawVerticalScrollbar(android.graphics.Canvas)
    public final void drawHorizontalScrollbar(android.graphics.Canvas)
    public final void verticalScrollTo(float)
    public final void horizontalScrollTo(float)
    public final int[] getVerticalRange()
    public final int[] getHorizontalRange()
androidx.transition.ViewUtils$1
    public java.lang.Float get(android.view.View)
    public void set(android.view.View,java.lang.Float)
androidx.appcompat.widget.ActionMenuView
    public final void onMeasureExactFormat(int,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller
    public void setRampUpDuration(int)
    public void setRampDownDuration(int)
    public boolean isFinished()
    public void computeScrollDelta()
    public void setTargetVelocity(float,float)
    public int getHorizontalDirection()
    public int getVerticalDirection()
    public int getDeltaX()
    public int getDeltaY()
    public final float interpolateValue(float)
androidx.appcompat.widget.RtlSpacingHelper
    public int getLeft()
    public int getRight()
    public int getStart()
    public int getEnd()
    public void setAbsolute(int,int)
    public void setDirection(boolean)
com.google.android.material.behavior.SwipeDismissBehavior$1
    public final boolean shouldDismiss(android.view.View,float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState
    public void assignPositionFromScrapList()
    public android.view.View nextViewInLimitedList(android.view.View)
    public final android.view.View nextViewFromScrapList()
    public boolean mIsPreLayout
android.support.v4.media.session.PlaybackStateCompatApi22
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1
    public void onEnd()
android.support.v4.media.MediaMetadataCompat$1
    public android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaMetadataCompat[] newArray(int)
com.google.android.material.bottomnavigation.BottomNavigationItemView
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.core.provider.FontRequest
    public java.lang.String getProviderAuthority()
    public java.lang.String getProviderPackage()
    public java.lang.String getQuery()
    public java.util.List getCertificates()
    public int getCertificatesArrayResId()
    public java.lang.String getIdentifier()
androidx.recyclerview.widget.ViewInfoStore
    public void clear()
    public boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
    public void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
    public void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.core.view.ActionProvider
    public abstract android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
    public void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
    public void reset()
    public final android.content.Context mContext
    public androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span
    public void cacheReferenceLineAndClear(boolean,int)
    public void invalidateCache()
    public void setLine(int)
    public int getDeletedSize()
    public void onOffset(int)
    public int findFirstPartiallyVisibleItemPosition()
    public int findLastPartiallyVisibleItemPosition()
    public int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
    public int findOnePartiallyVisibleChild(int,int,boolean)
    public android.view.View getFocusableViewAfter(int,int)
com.android.billingclient.api.SkuDetailsParams$Builder
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl
    public void setBackgroundTintList(android.content.res.ColorStateList)
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public final void setElevation(float)
    public float getHoveredFocusedTranslationZ()
    public float getPressedTranslationZ()
    public final void setHoveredFocusedTranslationZ(float)
    public final void setPressedTranslationZ(float)
    public final void updateImageMatrixScale()
    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public final android.graphics.drawable.Drawable getContentBackground()
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public void onPreDraw()
    public boolean isOrWillBeHidden()
    public final com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    public final com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    public final void ensurePreDrawListener()
    public final void updateFromViewRotation()
    public com.google.android.material.internal.CircularBorderDrawable borderDrawable
android.support.v4.media.MediaBrowserCompat$ItemCallback
androidx.fragment.app.FragmentTransition$Callback
    public abstract void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public abstract void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.lifecycle.ClassesInfoCache$CallbackInfo
    public void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderInfo
    public void getLoader()
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public final androidx.loader.content.Loader mLoader
    public androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
    public androidx.loader.content.Loader mPriorLoader
androidx.transition.FragmentTransitionSupport$2
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.collection.ArraySet
    public void <init>(int)
    public void ensureCapacity(int)
    public java.lang.Object valueAt(int)
    public final androidx.collection.MapCollections getCollection()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB
    public final synthetic androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.core.graphics.TypefaceCompatApi21Impl
    public static java.lang.Object newFamily()
    public static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    public static void <clinit>()
    public final java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.savedstate.SavedStateRegistry
    public void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    public void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
androidx.appcompat.widget.AppCompatDrawableManager
    public static synthetic android.graphics.PorterDuff$Mode access$000()
com.google.android.material.appbar.AppBarLayout$LayoutParams
    public int getScrollFlags()
    public boolean isCollapsible()
androidx.recyclerview.widget.ChildHelper
    public void addView(android.view.View,boolean)
    public void removeView(android.view.View)
    public void removeViewAt(int)
    public void removeAllViewsUnfiltered()
    public android.view.View findHiddenNonRemovedView(int)
    public void hide(android.view.View)
    public void unhide(android.view.View)
    public boolean removeViewIfHidden(android.view.View)
    public final void hideViewInternal(android.view.View)
androidx.appcompat.widget.Toolbar$1
    public boolean onMenuItemClick(android.view.MenuItem)
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction
com.google.android.material.resources.MaterialResources
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator
    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.view.ViewCompat
    public static void setImportantForAutofill(android.view.View,int)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
    public static java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
    public static boolean isAccessibilityHeading(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
    public static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    public static final int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
    public static androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.core.text.PrecomputedTextCompat$Params
    public android.text.TextPaint getTextPaint()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
    public static androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
androidx.appcompat.widget.ResourcesWrapper
    public android.graphics.drawable.Drawable getDrawable(int)
c.jahhow.remotecontroller.TouchPadView
    public static synthetic java.lang.Object access$000(c.jahhow.remotecontroller.TouchPadView)
    public static synthetic boolean access$100(c.jahhow.remotecontroller.TouchPadView)
    public static synthetic boolean access$102(c.jahhow.remotecontroller.TouchPadView,boolean)
    public static synthetic c.jahhow.remotecontroller.MainActivity access$200(c.jahhow.remotecontroller.TouchPadView)
    public static synthetic java.lang.Object access$300(c.jahhow.remotecontroller.TouchPadView)
    public static synthetic boolean access$400(c.jahhow.remotecontroller.TouchPadView)
    public static synthetic boolean access$402(c.jahhow.remotecontroller.TouchPadView,boolean)
    public final int intensiveClickIntervalMs
androidx.lifecycle.ViewModelProvider
    public androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
androidx.core.os.CancellationSignal
    public final void waitForCancelFinishedLocked()
androidx.recyclerview.widget.RecyclerView$SmoothScroller
    public abstract void setTargetPosition(int)
    public final void stop()
    public abstract boolean isPendingInitialRun()
    public abstract boolean isRunning()
    public abstract int getTargetPosition()
    public abstract void onAnimation(int,int)
    public abstract void onChildAttachedToWindow(android.view.View)
androidx.loader.app.LoaderManagerImpl
    public static void <clinit>()
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public static boolean DEBUG
androidx.loader.app.LoaderManager
    public abstract void markForRedelivery()
    public abstract void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar$LayoutParams
    public void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback
    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.SimpleItemAnimator
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public void onRemoveStarting()
    public void onRemoveFinished()
    public void onAddStarting()
    public void onAddFinished()
    public void onMoveStarting()
    public void onMoveFinished()
    public void onChangeStarting()
    public void onChangeFinished()
androidx.core.provider.SelfDestructiveThread$2
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.transition.Fade
    public android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
    public boolean dispatchOnCreate()
androidx.core.graphics.TypefaceCompatApi26Impl
    public java.lang.Class obtainFontFamily()
    public java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
    public java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
    public java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
    public final boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
c.jahhow.remotecontroller.LongPressAndUpDetector
    public void <init>(android.view.View,long,c.jahhow.remotecontroller.MainActivity)
    public final void checkLongUp(android.view.View)
androidx.core.provider.FontsContractCompat$5
    public int compare(byte[],byte[])
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
    public java.lang.Object getProvider()
androidx.core.graphics.drawable.IconCompat
    public static java.lang.String typeToString(int)
    public static java.lang.String getResPackage(android.graphics.drawable.Icon)
    public static int getResId(android.graphics.drawable.Icon)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper
    public android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
androidx.transition.ViewGroupUtilsApi18
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup
    public int getHorizontalOriginalOffset()
com.android.billingclient.api.BillingFlowParams$Builder
    public void <init>()
    public com.android.billingclient.api.BillingFlowParams$Builder setSkuDetails(com.android.billingclient.api.SkuDetails)
com.google.android.material.transformation.FabTransformationBehavior$3
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.fragment.app.Fragment$OnStartEnterTransitionListener
    public abstract void onStartEnterTransition()
    public abstract void startListening()
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.content.res.GradientColorInflaterCompat
com.google.android.material.shadow.ShadowDrawableWrapper
    public static float calculateVerticalPadding(float,float,boolean)
    public void setShadowSize(float,float)
    public void setShadowSize(float)
    public float getShadowSize()
    public boolean getPadding(android.graphics.Rect)
    public final void setRotation(float)
androidx.recyclerview.widget.GapWorker$1
    public int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.appcompat.widget.TintContextWrapper
    public static boolean shouldWrap(android.content.Context)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper
    public android.view.View getWrappedView()
androidx.appcompat.app.AlertDialog$Builder
    public void <init>(android.content.Context,int)
    public android.content.Context getContext()
    public androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    public androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
androidx.appcompat.app.WindowDecorActionBar
    public static boolean checkShowingFlags(boolean,boolean,boolean)
    public void setElevation(float)
    public void completeDeferredDestroyActionMode()
    public void onWindowVisibilityChanged(int)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setHomeButtonEnabled(boolean)
    public void setDisplayOptions(int,int)
    public int getNavigationMode()
    public void enableContentAnimations(boolean)
    public void showForSystem()
    public void hideForSystem()
    public void setHideOnContentScrollEnabled(boolean)
    public void doShow(boolean)
    public void doHide(boolean)
    public void onContentScrollStarted()
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void showForActionMode()
    public final void hideForActionMode()
    public final boolean shouldAnimateContextView()
    public android.app.Activity mActivity
    public android.app.Dialog mDialog
    public java.util.ArrayList mTabs
    public int mSavedTabPosition
    public static final synthetic boolean $assertionsDisabled
androidx.customview.view.AbsSavedState
    public void <init>()
    public final android.os.Parcelable getSuperState()
androidx.transition.FragmentTransitionSupport$4
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
android.support.v4.media.session.MediaSessionCompat$Token$1
    public android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
androidx.appcompat.widget.ScrollingTabContainerView
    public final void performCollapse()
    public final android.widget.Spinner createSpinner()
    public static final android.view.animation.Interpolator sAlphaInterpolator
com.google.android.material.ripple.RippleUtils
    public static int doubleAlpha(int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager
    public boolean preDispatch(android.view.KeyEvent)
c.jahhow.remotecontroller.ArrowButtonFragment$3
    public final synthetic c.jahhow.remotecontroller.ArrowButtonFragment this$0
androidx.fragment.app.FragmentTransitionCompat21$1
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.ViewUtilsLollipop
    public static final int[] STATE_LIST_ANIM_ATTRS
android.support.v4.media.session.MediaControllerCompatApi21$Callback
    public abstract void onSessionDestroyed()
    public abstract void onSessionEvent(java.lang.String,android.os.Bundle)
    public abstract void onPlaybackStateChanged(java.lang.Object)
    public abstract void onMetadataChanged(java.lang.Object)
    public abstract void onQueueChanged(java.util.List)
    public abstract void onQueueTitleChanged(java.lang.CharSequence)
    public abstract void onExtrasChanged(android.os.Bundle)
    public abstract void onAudioInfoChanged(int,int,int,int,int)
androidx.appcompat.widget.AppCompatProgressBarHelper
    public android.graphics.Bitmap getSampleTile()
    public final android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.shapes.Shape getDrawableShape()
androidx.appcompat.widget.AppCompatToggleButton
    public void <init>(android.content.Context,android.util.AttributeSet,int)
android.support.v4.media.MediaDescriptionCompat$1
    public android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaDescriptionCompat[] newArray(int)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int)
com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener
    public abstract void onLayoutChange(android.view.View,int,int,int,int)
com.android.billingclient.api.BillingClientImpl$7
    public com.android.billingclient.api.Purchase$PurchasesResult call()
androidx.loader.app.LoaderManagerImpl$LoaderObserver
c.jahhow.remotecontroller.BluetoothBondErrorFragment$1
    public static final synthetic boolean $assertionsDisabled
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
    public void invalidateSpanInfo()
androidx.core.app.BundleCompat
androidx.appcompat.view.menu.ListMenuPresenter
    public void <init>(int,int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void saveHierarchyState(android.os.Bundle)
    public void restoreHierarchyState(android.os.Bundle)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
androidx.recyclerview.widget.GridLayoutManager
    public static int[] calculateItemBorders(int[],int,int)
    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    public void setMeasuredDimension(android.graphics.Rect,int,int)
    public void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
    public android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final void clearPreLayoutSpanMappingCache()
    public final void cachePreLayoutSpanMapping()
    public final void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public final void guessMeasurement(float,int)
androidx.appcompat.view.menu.MenuItemImpl
    public boolean invoke()
    public int getOrdering()
    public java.lang.String getShortcutLabel()
    public void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
    public void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void actionFormatChanged()
    public boolean shouldShowIcon()
    public boolean requestsActionButton()
    public boolean requiresActionButton()
    public boolean showsTextAsAction()
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public void setActionViewExpanded(boolean)
androidx.recyclerview.widget.RecyclerView$SavedState$1
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
androidx.core.app.NavUtils
androidx.lifecycle.ViewModelStore
    public final void put(java.lang.String,androidx.lifecycle.ViewModel)
androidx.core.graphics.ColorUtils
    public static int compositeAlpha(int,int)
    public static final java.lang.ThreadLocal TEMP_ARRAY
androidx.core.graphics.TypefaceCompatBaseImpl
    public static java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
    public final androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
    public final void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
android.support.v4.media.RatingCompat$1
    public android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.RatingCompat[] newArray(int)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
    public boolean contains(java.lang.Object)
    public void addEdge(java.lang.Object,java.lang.Object)
    public java.util.List getIncomingEdges(java.lang.Object)
    public java.util.List getOutgoingEdges(java.lang.Object)
    public boolean hasOutgoingEdges(java.lang.Object)
    public void clear()
    public java.util.ArrayList getSortedList()
    public final java.util.ArrayList getEmptyList()
    public final void poolList(java.util.ArrayList)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
androidx.core.content.res.ResourcesCompat
androidx.activity.OnBackPressedDispatcher
    public androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.core.os.CancellationSignal$OnCancelListener
    public abstract void onCancel()
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
androidx.fragment.app.FragmentTransitionImpl
    public static java.lang.String findKeyForValue(java.util.Map,java.lang.String)
    public java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    public void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
    public void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
    public void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.versionedparcelable.VersionedParcel
    public boolean isStream()
    public abstract void writeByteArray(byte[])
    public abstract void writeCharSequence(java.lang.CharSequence)
    public abstract void writeInt(int)
    public abstract void writeString(java.lang.String)
    public abstract void writeParcelable(android.os.Parcelable)
    public abstract void writeBoolean(boolean)
    public abstract int readInt()
    public abstract byte[] readByteArray()
    public abstract java.lang.CharSequence readCharSequence()
    public abstract android.os.Parcelable readParcelable()
    public abstract boolean readBoolean()
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int)
    public void writeCharSequence(java.lang.CharSequence,int)
    public void writeString(java.lang.String,int)
    public java.lang.String readString(java.lang.String,int)
    public byte[] readByteArray(byte[],int)
    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
    public void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
    public final void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.view.ViewCompat$3
    public java.lang.Boolean frameworkGet(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder
    public void clearOldPosition()
    public void saveOldPosition()
    public final long getItemId()
    public final void createPayloadsIfNeeded()
androidx.core.view.KeyEventDispatcher
    public static boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
    public static boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
    public static boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
    public static android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
    public static boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
    public static void <clinit>()
androidx.core.text.TextDirectionHeuristicCompat
    public abstract boolean isRtl(java.lang.CharSequence,int,int)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
androidx.core.app.SharedElementCallback
    public abstract void onSharedElementStart(java.util.List,java.util.List,java.util.List)
    public abstract void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
    public abstract void onMapSharedElements(java.util.List,java.util.Map)
androidx.core.content.res.TypedArrayUtils
androidx.lifecycle.LifecycleDispatcher
    public static void init(android.content.Context)
com.google.android.material.stateful.ExtendableSavedState$1
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
com.google.android.material.transformation.FabTransformationBehavior$1
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
android.support.v4.os.IResultReceiver
    public abstract void send(int,android.os.Bundle)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener
    public void onStartEnterTransition()
    public void startListening()
    public boolean isReady()
    public void cancelTransaction()
androidx.fragment.app.FragmentTransitionImpl$2
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.recyclerview.widget.RecyclerView$ItemDecoration
    public void onDraw()
    public void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
    public void onDrawOver()
    public void getItemOffsets(android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer
    public void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void swapMoveOp(java.util.List,int,int)
    public final void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final int getLastMoveOutOfOrder(java.util.List)
androidx.transition.ChangeBounds$8
    public final synthetic androidx.transition.ChangeBounds this$0
android.support.v4.os.ResultReceiver
    public final boolean mLocal
com.android.billingclient.api.BillingClient$Builder
android.support.v4.media.MediaMetadataCompatApi21
androidx.transition.ViewUtilsApi21
    public final void fetchTransformMatrixToGlobalMethod()
    public final void fetchTransformMatrixToLocalMethod()
androidx.lifecycle.LifecycleRegistry
    public static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    public void markState(androidx.lifecycle.Lifecycle$State)
    public void setCurrentState(androidx.lifecycle.Lifecycle$State)
    public void removeObserver(androidx.lifecycle.LifecycleObserver)
    public androidx.lifecycle.Lifecycle$State getCurrentState()
    public final boolean isSynced()
    public final void pushParentState(androidx.lifecycle.Lifecycle$State)
    public final void forwardPass(androidx.lifecycle.LifecycleOwner)
    public final void backwardPass(androidx.lifecycle.LifecycleOwner)
com.android.billingclient.util.BillingHelper
    public static int getResponseCodeFromIntent(android.content.Intent,java.lang.String)
    public static android.os.Bundle constructExtraParamsForLaunchBillingFlow(com.android.billingclient.api.BillingFlowParams,boolean,boolean,java.lang.String)
    public static android.os.Bundle constructExtraParamsForQueryPurchases(boolean,boolean,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation
    public float getTargetShadowSize()
androidx.core.view.PointerIconCompat
    public static androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)
    public java.lang.Object getPointerIcon()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState
    public int addStateSet(int[],android.graphics.drawable.Drawable,int)
    public int indexOfTransition(int,int)
    public boolean isTransitionReversed(int,int)
    public boolean transitionHasReversibleFlag(int,int)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.view.SupportMenuInflater$MenuState
    public void resetGroup()
    public void readGroup(android.util.AttributeSet)
    public void readItem(android.util.AttributeSet)
    public void addItem()
    public boolean hasAddedItem()
    public final char getShortcut(java.lang.String)
android.support.v4.media.MediaBrowserCompat$CustomActionCallback
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation
    public float getTargetShadowSize()
androidx.fragment.app.FragmentHostCallback
    public void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public abstract java.lang.Object onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public android.view.View onFindViewById(int)
    public boolean onHasView()
    public android.app.Activity getActivity()
    public android.content.Context getContext()
    public android.os.Handler getHandler()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public final int mWindowAnimations
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
    public int getSpanIndex()
    public int getSpanSize()
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback
    public androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.FragmentTransaction
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public abstract void commitNowAllowingStateLoss()
    public final androidx.fragment.app.FragmentFactory mFragmentFactory
    public final java.lang.ClassLoader mClassLoader
com.android.billingclient.api.BillingClientImpl$5
    public android.os.Bundle call()
com.google.android.material.stateful.ExtendableSavedState
    public void <init>(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener
    public final void resolveMethod(android.content.Context)
com.google.android.gms.internal.play_billing.zzg
    public static final java.lang.ClassLoader zza
androidx.appcompat.view.menu.StandardMenuPopup
    public final boolean tryShow()
com.android.billingclient.api.BillingBroadcastManager
    public static synthetic com.android.billingclient.api.BillingBroadcastManager$BillingBroadcastReceiver access$200(com.android.billingclient.api.BillingBroadcastManager)
    public void registerReceiver()
    public com.android.billingclient.api.PurchasesUpdatedListener getListener()
androidx.core.content.res.GrowingArrayUtils
    public static java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
    public static int[] append(int[],int,int)
    public void <init>()
    public static void <clinit>()
    public static final synthetic boolean $assertionsDisabled
androidx.appcompat.widget.ViewStubCompat$OnInflateListener
    public abstract void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1
    public final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty
    public final boolean frameworkAvailable()
    public final boolean extrasAvailable()
    public final int mContentChangeType
androidx.appcompat.view.menu.MenuItemWrapperICS
    public void setExclusiveCheckable(boolean)
androidx.transition.RectEvaluator
    public android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
com.android.billingclient.api.BillingClientImpl
    public static java.lang.String zza()
    public void <init>(android.content.Context,int,int,boolean,com.android.billingclient.api.PurchasesUpdatedListener,java.lang.String)
    public static synthetic com.android.billingclient.api.BillingBroadcastManager access$000(com.android.billingclient.api.BillingClientImpl)
    public static synthetic android.content.Context access$200(com.android.billingclient.api.BillingClientImpl)
    public static synthetic com.google.android.gms.internal.play_billing.zza access$300(com.android.billingclient.api.BillingClientImpl)
    public static synthetic com.android.billingclient.api.Purchase$PurchasesResult access$400(com.android.billingclient.api.BillingClientImpl,java.lang.String)
    public static synthetic void access$500(com.android.billingclient.api.BillingClientImpl,java.lang.Runnable)
    public static synthetic java.lang.String access$1000(com.android.billingclient.api.BillingClientImpl)
    public static synthetic com.google.android.gms.internal.play_billing.zza access$302(com.android.billingclient.api.BillingClientImpl,com.google.android.gms.internal.play_billing.zza)
    public static synthetic int access$1202(com.android.billingclient.api.BillingClientImpl,int)
    public static synthetic boolean access$1602(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic boolean access$1702(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic boolean access$1802(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic boolean access$1902(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic boolean access$2002(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic boolean access$2102(com.android.billingclient.api.BillingClientImpl,boolean)
    public static synthetic java.util.concurrent.Future access$2300(com.android.billingclient.api.BillingClientImpl,java.util.concurrent.Callable,long,java.lang.Runnable)
    public static synthetic com.android.billingclient.api.BillingResult access$2400(com.android.billingclient.api.BillingClientImpl)
    public void startConnection(com.android.billingclient.api.BillingClientStateListener)
    public com.android.billingclient.api.Purchase$PurchasesResult queryPurchases(java.lang.String)
    public void querySkuDetailsAsync(com.android.billingclient.api.SkuDetailsParams,com.android.billingclient.api.SkuDetailsResponseListener)
    public void acknowledgePurchase(com.android.billingclient.api.AcknowledgePurchaseParams,com.android.billingclient.api.AcknowledgePurchaseResponseListener)
androidx.activity.ImmLeaksCleaner
    public static void initializeReflectiveFields()
    public static void <clinit>()
androidx.appcompat.widget.ScrollingTabContainerView$TabView
    public void bindTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getTab()
androidx.core.view.ViewCompat$5
    public java.lang.Boolean frameworkGet(android.view.View)
androidx.core.text.ICUCompat
androidx.appcompat.widget.ToolbarWidgetWrapper
    public void <init>(androidx.appcompat.widget.Toolbar,boolean,int)
    public void setDefaultNavigationContentDescription(int)
    public android.view.ViewGroup getViewGroup()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public void setWindowCallback(android.view.Window$Callback)
    public java.lang.CharSequence getTitle()
    public void setTitle(java.lang.CharSequence)
    public void setSubtitle(java.lang.CharSequence)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public void setMenuPrepared()
    public void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public void dismissPopupMenus()
    public int getDisplayOptions()
    public void setCollapsible(boolean)
    public int getNavigationMode()
    public void setCustomView(android.view.View)
    public void setNavigationIcon(android.graphics.drawable.Drawable)
    public void setNavigationContentDescription(java.lang.CharSequence)
    public void setNavigationContentDescription(int)
    public void setVisibility(int)
    public final int detectDisplayOptions()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout
    public com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener onLayoutChangeListener
    public com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener onAttachStateChangeListener
androidx.core.provider.FontsContractCompat$1
    public androidx.core.provider.FontsContractCompat$TypefaceResult call()
androidx.core.text.PrecomputedTextCompat
    public static void <clinit>()
    public androidx.core.text.PrecomputedTextCompat$Params getParams()
    public static final java.lang.Object sLock
    public static java.util.concurrent.Executor sExecutor
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
    public abstract void addPosition(int,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags
    public void setBounds(int,int,int,int)
    public void addFlags(int)
    public void resetFlags()
androidx.transition.ChangeBounds$6
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
c.jahhow.remotecontroller.AirMouseCardView
    public final void c()
    public final long r
    public final long s
android.support.v4.media.session.MediaControllerCompat$Callback
    public final java.lang.Object mCallbackObj
    public android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler
androidx.appcompat.view.menu.BaseMenuPresenter
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void addItemView(android.view.View,int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
    public androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
    public abstract void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public abstract boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public void setId(int)
    public android.view.LayoutInflater mInflater
androidx.appcompat.widget.AbsActionBarView
    public static int next(int,int,boolean)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
    public androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.core.view.LayoutInflaterCompat
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat
    public void onEvent(java.lang.String,android.os.Bundle)
    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
    public void onCaptioningEnabledChanged(boolean)
    public void onRepeatModeChanged(int)
    public void onShuffleModeChangedRemoved(boolean)
    public void onShuffleModeChanged(int)
    public void onSessionReady()
androidx.core.view.MotionEventCompat
androidx.core.view.NestedScrollingChildHelper
    public void setNestedScrollingEnabled(boolean)
    public boolean isNestedScrollingEnabled()
    public boolean hasNestedScrollingParent()
    public boolean startNestedScroll(int)
    public void stopNestedScroll()
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public boolean dispatchNestedPreScroll(int,int,int[],int[])
    public final void setNestedScrollingParentForType(int,android.view.ViewParent)
    public final int[] getTempNestedScrollConsumed()
androidx.appcompat.view.StandaloneActionMode
    public boolean mFocusable
androidx.fragment.app.FragmentManager
    public static androidx.fragment.app.Fragment getViewFragment(android.view.View)
    public static void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
    public static int reverseTransit(int)
    public static void <clinit>()
    public void handleOnBackPressed()
    public int getBackStackEntryCount()
    public void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public void addRetainedFragment(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    public boolean isStateAtLeast(int)
    public void moveToState(androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    public int allocBackStackIndex()
    public void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
    public void addBackStackState(androidx.fragment.app.BackStackRecord)
    public androidx.fragment.app.Fragment getParent()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchStop()
    public void dispatchDestroyView()
    public void dispatchPrimaryNavigationFragmentChanged()
    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
    public boolean checkForMenus()
    public final boolean popBackStackImmediate(java.lang.String,int,int)
    public final androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public final void completeShowHideFragment(androidx.fragment.app.Fragment)
    public final void makeInactive(androidx.fragment.app.FragmentStateManager)
    public final void checkStateLoss()
    public final void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    public final int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
    public final void forcePostponedTransactions()
    public final void reportBackStackChanged()
    public static boolean DEBUG
androidx.core.view.AccessibilityDelegateCompat
    public void <init>(android.view.View$AccessibilityDelegate)
    public static java.util.List getActionList(android.view.View)
    public android.view.View$AccessibilityDelegate getBridge()
    public void sendAccessibilityEvent(android.view.View,int)
    public void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
    public boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public final boolean performClickableSpanAction(int,android.view.View)
    public final boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
com.google.android.material.circularreveal.cardview.CircularRevealCardView
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
com.google.android.material.internal.CollapsingTextHelper
    public static boolean isClose(float,float)
    public void setTextSizeInterpolator(android.animation.TimeInterpolator)
    public void setPositionInterpolator(android.animation.TimeInterpolator)
    public void setExpandedTextSize(float)
    public void setExpandedTextColor(android.content.res.ColorStateList)
    public void setExpandedBounds(int,int,int,int)
    public void setCollapsedBounds(int,int,int,int)
    public void getCollapsedTextActualBounds(android.graphics.RectF)
    public void setExpandedTextGravity(int)
    public void setCollapsedTextGravity(int)
    public void setCollapsedTextAppearance(int)
    public void setTypefaces(android.graphics.Typeface)
    public final boolean setState(int[])
    public final boolean isStateful()
    public float getExpansionFraction()
    public void setText(java.lang.CharSequence)
    public android.content.res.ColorStateList getCollapsedTextColor()
    public final void getTextPaintCollapsed(android.text.TextPaint)
    public final android.graphics.Typeface readFontFamilyTypeface(int)
    public final void calculateCurrentOffsets()
    public final int getCurrentExpandedTextColor()
    public final void calculateBaseOffsets()
    public final void interpolateBounds(float)
    public final void ensureExpandedTexture()
androidx.loader.content.Loader
com.google.android.material.internal.CircularBorderDrawable
androidx.core.graphics.drawable.WrappedDrawableApi14
    public final android.graphics.drawable.Drawable getWrappedDrawable()
    public final void updateLocalState(android.content.res.Resources)
    public final androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
com.google.android.material.transformation.ExpandableBehavior
    public static synthetic int access$000(com.google.android.material.transformation.ExpandableBehavior)
androidx.appcompat.widget.AppCompatRadioButton
    public void <init>(android.content.Context,android.util.AttributeSet,int)
